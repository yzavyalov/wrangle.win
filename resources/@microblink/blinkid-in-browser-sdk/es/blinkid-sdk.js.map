{"version":3,"file":"blinkid-sdk.js","sources":["../src/MicroblinkSDK/worker/Messages.ts","../src/MicroblinkSDK/WasmType.ts","../src/defaultWasmModule.ts","../src/MicroblinkSDK/SDKError.ts","../src/MicroblinkSDK/Utils.ts","../src/MicroblinkSDK/ErrorTypes.ts","../src/MicroblinkSDK/worker/WorkerSDKBackend.ts","../src/MicroblinkSDK/CameraUtils.ts","../src/MicroblinkSDK/DataStructures.ts","../src/MicroblinkSDK/DeviceUtils.ts","../src/MicroblinkSDK/DocumentSide.ts","../src/MicroblinkSDK/FrameCapture.ts","../src/MicroblinkSDK/License.ts","../src/MicroblinkSDK/MetadataCallbacks.ts","../node_modules/p-throttle/index.js","../src/MicroblinkSDK/VideoRecognizer.ts","../src/MicroblinkSDK/WasmLoadSettings.ts","../node_modules/wasm-feature-detect/dist/esm/index.js","../src/MicroblinkSDK/WasmLoadUtils.ts","../src/MicroblinkSDK/MicroblinkSDK.ts","../src/Recognizers/BlinkBarcode/BarcodeData.ts","../src/Recognizers/BlinkID/Generic/AnonymizationMode.ts","../src/Recognizers/BlinkID/Generic/RecognitionModeFilter.ts","../src/Recognizers/BlinkID/Generic/StrictnessLevel.ts","../src/Recognizers/BlinkID/ImageOptions.ts","../src/Recognizers/BlinkID/Generic/AlphabetType.ts","../src/Recognizers/BlinkID/Generic/BarcodeResult.ts","../src/Recognizers/BlinkID/Generic/ClassFilter.ts","../src/Recognizers/BlinkID/Generic/ClassInfo.ts","../src/Recognizers/BlinkID/Generic/CustomClassRules.ts","../src/Recognizers/BlinkID/Generic/DetailedFieldType.ts","../src/Recognizers/BlinkID/Generic/FieldType.ts","../src/Recognizers/BlinkID/Generic/ImageExtractionType.ts","../src/Recognizers/BlinkID/Generic/ImageAnalysisResult.ts","../src/Recognizers/BlinkID/Generic/ProcessingStatus.ts","../src/Recognizers/BlinkID/Generic/RecognitionMode.ts","../src/Recognizers/BlinkID/Generic/BlinkIdSingleSideRecognizer.ts","../src/Recognizers/BlinkID/Generic/BlinkIdMultiSideRecognizer.ts","../src/Recognizers/BlinkID/IDBarcode/IdBarcodeRecognizer.ts"],"sourcesContent":["/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { CapturedFrame } from \"../FrameCapture\";\nimport { WasmSDKLoadSettings } from \"../WasmLoadSettings\";\nimport { WasmType } from \"../WasmType\";\nimport { SerializableSDKError } from \"../SDKError\";\nimport { ProductIntegrationInfo } from \"../DataStructures\";\nimport { BlinkIDVariant } from \"../BlinkIdVariant\";\n\nlet nextMessageID = 0;\n\nfunction getNextMessageID()\n{\n    const msgId = nextMessageID;\n    nextMessageID = nextMessageID + 1;\n    return msgId;\n}\n\n// ===================================== /\n// Request messages\n// ===================================== /\n\nexport interface RequestMessage\n{\n    readonly action: string;\n    readonly messageID: number;\n}\n\nexport interface TransferrableMessage\n{\n    getTransferrables(): Array< Transferable >;\n}\n\nabstract class BaseRequestMessage implements RequestMessage\n{\n    readonly action: string;\n\n    readonly messageID: number;\n\n    protected constructor( action: string )\n    {\n        this.action = action;\n        this.messageID = getNextMessageID();\n    }\n}\n\nexport class InitMessage extends BaseRequestMessage\n{\n    static readonly action: string = \"init\";\n\n    readonly wasmModuleName: string;\n\n    readonly licenseKey: string;\n\n    readonly userId: string;\n\n    readonly registerLoadCallback: boolean;\n\n    readonly allowHelloMessage: boolean;\n\n    readonly engineLocation: string;\n\n    readonly wasmType: WasmType | null;\n\n    readonly blinkIDVariant?: BlinkIDVariant;\n\n    readonly numberOfWorkers: number | null;\n\n    readonly initialMemory?: number;\n\n    constructor( wasmLoadSettings: WasmSDKLoadSettings, userId: string )\n    {\n        super( InitMessage.action );\n        this.wasmModuleName = wasmLoadSettings.wasmModuleName;\n        this.licenseKey = wasmLoadSettings.licenseKey;\n        this.userId = userId;\n        this.registerLoadCallback = wasmLoadSettings.loadProgressCallback !== null;\n        this.allowHelloMessage = wasmLoadSettings.allowHelloMessage;\n        this.engineLocation = wasmLoadSettings.engineLocation;\n        this.wasmType = wasmLoadSettings.wasmType;\n        this.initialMemory = wasmLoadSettings.initialMemory;\n        this.blinkIDVariant = wasmLoadSettings.blinkIdVariant;\n        this.numberOfWorkers = wasmLoadSettings.numberOfWorkers;\n    }\n}\n\nexport enum ParameterType\n{\n    Any,\n    Recognizer,\n    RecognizerSettings,\n    Callback\n}\n\nexport interface CallbackAddress\n{\n    readonly recognizerHandle: number;\n    readonly callbackName: string;\n}\n\nexport interface WrappedParameter\n{\n    parameter: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n    type: ParameterType;\n}\n\nexport class InvokeFunction extends BaseRequestMessage\n{\n    static readonly action: string = \"invokeFunction\";\n\n    readonly funcName: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( funcName: string, params: Array< WrappedParameter > )\n    {\n        super( InvokeFunction.action );\n        this.funcName = funcName;\n        this.params = params;\n    }\n}\n\nexport class CreateNewRecognizer extends BaseRequestMessage\n{\n    static readonly action: string = \"createNewNativeObject\";\n\n    readonly className: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( className: string, params: Array< WrappedParameter > )\n    {\n        super( CreateNewRecognizer.action );\n        this.className = className;\n        this.params = params;\n    }\n}\n\nexport class CreateRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"createRecognizerRunner\";\n\n    readonly recognizerHandles: Array< number >;\n\n    readonly allowMultipleResults: boolean;\n\n    readonly registeredMetadataCallbacks: RegisteredMetadataCallbacks;\n\n    constructor\n    (\n        recognizerHandles           : Array< number >,\n        allowMultipleResults        : boolean,\n        registeredMetadataCallbacks : RegisteredMetadataCallbacks\n    )\n    {\n        super( CreateRecognizerRunner.action );\n        this.recognizerHandles = recognizerHandles;\n        this.allowMultipleResults = allowMultipleResults;\n        this.registeredMetadataCallbacks = registeredMetadataCallbacks;\n    }\n}\n\nexport class ReconfigureRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"reconfigureRecognizerRunner\";\n\n    readonly recognizerHandles: Array< number >;\n\n    readonly allowMultipleResults: boolean;\n\n    constructor( recognizerHandles: Array< number >, allowMultipleResults: boolean )\n    {\n        super( ReconfigureRecognizerRunner.action );\n        this.recognizerHandles = recognizerHandles;\n        this.allowMultipleResults = allowMultipleResults;\n    }\n}\n\nexport class DeleteRecognizerRunner extends BaseRequestMessage\n{\n    static readonly action: string = \"deleteRecognizerRunner\";\n\n    constructor()\n    {\n        super( DeleteRecognizerRunner.action );\n    }\n}\n\nexport class InvokeObjectMethod extends BaseRequestMessage\n{\n    static readonly action: string = \"invokeObject\";\n\n    readonly objectHandle: number;\n\n    readonly methodName: string;\n\n    readonly params: Array< WrappedParameter >;\n\n    constructor( objectHandle: number, methodName: string, params: Array< WrappedParameter > )\n    {\n        super( InvokeObjectMethod.action );\n        this.objectHandle = objectHandle;\n        this.methodName = methodName;\n        this.params = params;\n    }\n}\n\nexport class ProcessImage extends BaseRequestMessage implements TransferrableMessage\n{\n    static readonly action: string = \"processImage\";\n\n    readonly frame: CapturedFrame;\n\n    constructor( image: CapturedFrame )\n    {\n        super( ProcessImage.action );\n        this.frame = image;\n    }\n\n    getTransferrables(): Array< Transferable >\n    {\n        return [ this.frame.imageData.data.buffer ];\n    }\n}\n\nexport class ResetRecognizers extends BaseRequestMessage\n{\n    static readonly action: string = \"resetRecognizers\";\n\n    readonly hardReset: boolean;\n\n    constructor( hardReset: boolean )\n    {\n        super( ResetRecognizers.action );\n        this.hardReset = hardReset;\n    }\n}\n\nexport class RegisteredMetadataCallbacks\n{\n    onDebugText       = false;\n\n    onDetectionFailed = false;\n\n    onQuadDetection   = false;\n\n    onPointsDetection = false;\n\n    onFirstSideResult = false;\n}\n\nexport class RegisterMetadataCallbacks extends BaseRequestMessage\n{\n    static readonly action: string = \"registerMetadataCallbacks\";\n\n    readonly registeredMetadataCallbacks: RegisteredMetadataCallbacks;\n\n    constructor( registeredMetadataCallbacks: RegisteredMetadataCallbacks )\n    {\n        super( RegisterMetadataCallbacks.action );\n        this.registeredMetadataCallbacks = registeredMetadataCallbacks;\n    }\n}\n\nexport class SetDetectionOnly extends BaseRequestMessage\n{\n    static readonly action: string = \"setDetectionOnly\";\n\n    readonly detectionOnlyMode: boolean;\n\n    constructor( detectionOnlyMode: boolean )\n    {\n        super( SetDetectionOnly.action );\n        this.detectionOnlyMode = detectionOnlyMode;\n    }\n}\n\n\nexport class SetCameraPreviewMirrored extends BaseRequestMessage\n{\n    static readonly action: string = \"setCameraPreviewMirrored\";\n\n    readonly cameraPreviewMirrored: boolean;\n\n    constructor( cameraPreviewMirrored: boolean )\n    {\n        super( SetCameraPreviewMirrored.action );\n        this.cameraPreviewMirrored = cameraPreviewMirrored;\n    }\n}\n\nexport class GetProductIntegrationInfo extends BaseRequestMessage\n{\n    static readonly action: string = \"getProductIntegrationInfo\";\n\n    readonly userId: string;\n\n    constructor( userId: string )\n    {\n        super( GetProductIntegrationInfo.action );\n        this.userId = userId;\n    }\n}\n\nexport class SetPingProxyUrl extends BaseRequestMessage\n{\n    static readonly action: string = \"setPingProxyUrl\";\n\n    readonly pingProxyUrl: string;\n\n    constructor( pingProxyUrl: string )\n    {\n        super( SetPingProxyUrl.action );\n        this.pingProxyUrl = pingProxyUrl;\n    }\n}\n\nexport class SetPingData extends BaseRequestMessage\n{\n    static readonly action: string = \"setPingData\";\n\n    readonly data: Record<string, string>;\n\n    constructor( data: Record<string, string> )\n    {\n        super( SetPingData.action );\n        this.data = data;\n    }\n}\n\n// ===================================== /\n// Response messages\n// ===================================== /\n\nexport interface ResponseMessage\n{\n    readonly messageID: number;\n}\n\nexport class StatusMessage implements ResponseMessage\n{\n    readonly messageID: number;\n\n    readonly success: boolean = true;\n\n    readonly error: SerializableSDKError | string | null = null;\n\n    constructor( msgID: number, success: boolean, error: SerializableSDKError | string | null )\n    {\n        this.messageID = msgID;\n        this.success = success;\n        this.error = error;\n    }\n}\n\nexport class InitSuccessMessage implements ResponseMessage\n{\n    readonly messageID: number;\n\n    readonly success: boolean = true;\n\n    readonly showOverlay: boolean = true;\n\n    readonly wasmType: WasmType;\n\n    constructor( msgID: number, success: boolean, showOverlay: boolean, wasmType: WasmType )\n    {\n        this.messageID = msgID;\n        this.success = success;\n        this.showOverlay = showOverlay;\n        this.wasmType = wasmType;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any,\n                  @typescript-eslint/explicit-module-boundary-types,\n                  @typescript-eslint/no-unsafe-assignment */\nexport class InvokeResultMessage extends StatusMessage\n{\n    readonly result: any;\n\n    constructor( msgID: number, result: any )\n    {\n        super( msgID, true, null );\n        this.result = result;\n    }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n                 @typescript-eslint/no-unsafe-assignment */\n\nexport class ObjectCreatedMessage extends StatusMessage\n{\n    readonly objectHandle: number;\n\n    constructor( msgID: number, handle: number )\n    {\n        super( msgID, true, null );\n        this.objectHandle = handle;\n    }\n}\n\nexport class ImageProcessResultMessage extends StatusMessage\n{\n    readonly recognitionState: number;\n\n    constructor( msgID: number, recognitionState: number )\n    {\n        super( msgID, true, null );\n        this.recognitionState = recognitionState;\n    }\n}\n\nexport class ProductIntegrationResultMessage extends StatusMessage\n{\n    readonly result: ProductIntegrationInfo;\n\n    constructor( msgID: number, result: ProductIntegrationInfo )\n    {\n        super( msgID, true, null );\n        this.result = result;\n    }\n}\n\n// ===================================== /\n// Load progress messages\n// ===================================== /\n\nexport class LoadProgressMessage\n{\n    readonly isLoadProgressMessage = true;\n\n    readonly progress: number;\n\n    constructor( progress: number )\n    {\n        this.progress = progress;\n    }\n}\n\n\n// ===================================== /\n// Metadata callback messages\n// ===================================== /\n\nexport enum MetadataCallback\n{\n    onDebugText,\n    onDetectionFailed,\n    onQuadDetection,\n    onPointsDetection,\n    onFirstSideResult,\n    recognizerCallback\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class InvokeCallbackMessage\n{\n    readonly isCallbackMessage: boolean = true;\n\n    readonly callbackType:      MetadataCallback;\n\n    readonly callbackParameters: any[];\n\n    constructor( callbackType: MetadataCallback, callbackParams: any[] )\n    {\n        this.callbackType       = callbackType;\n        this.callbackParameters = callbackParams;\n    }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * Defines the type of the WASM that will be loaded.\n */\nexport enum WasmType\n{\n    /**\n     * The WASM that will be loaded will be most compatible with all browsers that\n     * support the WASM, but will lack features that could be used to improve performance.\n     */\n    Basic = \"BASIC\",\n\n    /**\n     * The WASM that will be loaded will be built with advanced WASM features, such as\n     * bulk memory, SIMD, non-trapping floating point and sign extension. Such WASM can only\n     * be executed in browsers that support those features. Attempting to run this\n     * WASM in a non-compatible browser will crash your app.\n     */\n    Advanced = \"ADVANCED\",\n\n    /**\n     * The WASM that will be loaded will be build with advanced WASM features, just\n     * like above. Additionally, it will be also built with support for multi-threaded\n     * processing. This feature requires a browser with support for both advanced WASM\n     * features and `SharedArrayBuffer`\n     */\n    AdvancedWithThreads = \"ADVANCED_WITH_THREADS\"\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nexport const defaultWasmModuleName = \"BlinkIDWasmSDK\";\nexport const nativeJsonizationEnabled = true;\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any,\n                  @typescript-eslint/no-unsafe-assignment */\n\nexport class SDKError extends Error\n{\n    code: string;\n\n    message: string;\n\n    details?: any;\n\n    constructor( error: { code: string; message: string } | SerializableSDKError, details?: any )\n    {\n        super();\n\n        if ( !error.code || !error.message )\n        {\n            throw new Error(\n                \"Instance of SDKError is required to have code and message.\"\n            );\n        }\n\n        this.message = error.message;\n        this.code = error.code;\n\n        if ( error instanceof SerializableSDKError && error.details && \"message\" in error.details )\n        {\n            const errorObj = new Error( ( error.details as CustomError ).message );\n\n            if ( \"stack\" in error.details )\n            {\n                errorObj.stack = ( error.details as CustomError ).stack;\n            }\n\n            this.details = errorObj;\n        }\n        else\n        {\n            this.details = details;\n        }\n    }\n}\n\nexport class SerializableSDKError\n{\n    code: string;\n\n    message: string;\n\n    details?: any;\n\n    constructor( error: { code: string; message: string }, details?: any )\n    {\n        if ( !error.code || !error.message )\n        {\n            throw new Error(\n                \"Instance of SDKError is required to have code and message.\"\n            );\n        }\n\n        this.message = error.message;\n        this.code = error.code;\n\n        if ( details instanceof Error )\n        {\n            this.details = new CustomError( details );\n        }\n        else\n        {\n            this.details = details;\n        }\n    }\n}\n\nclass CustomError\n{\n    name: string;\n\n    message: string;\n\n    stack: string | undefined;\n\n    constructor( error: Error )\n    {\n        this.message = error.message;\n        this.name = error.name;\n        this.stack = error.stack;\n    }\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * Returns safe path, i.e. URL for given path and filename (file path).\n *\n * @param path      String representing file path.\n * @param fileName  String representing file name.\n * @returns String representing URL for specified resource.\n */\nexport function getSafePath( path: string, fileName: string ): string\n{\n    // Since this function is called by Emscripten module, make sure to set default values\n    path = path || \"\";\n    fileName = fileName || \"\";\n\n    if ( path === \"\" )\n    {\n        return fileName;\n    }\n    else if ( path.endsWith( \"/\" ) )\n    {\n        if ( fileName.startsWith( \"/\" ) )\n        {\n            return path + fileName.substring( 1 );\n        }\n        else\n        {\n            return path + fileName;\n        }\n    }\n    else if ( fileName.startsWith( \"/\" ) )\n    {\n        return path + fileName;\n    }\n    else\n    {\n        return path + \"/\" + fileName;\n    }\n}\n\n/**\n * Checks if provided string is valid secure URL without subpaths.\n * @param url URL to check.\n * @returns Boolean indicating if provided URL is valid.\n */\nexport function isValidURL( url: string ): boolean\n{\n    // eslint-disable-next-line no-useless-escape\n    const regex = /^https:\\/\\/[^\\/]+(?::\\d+)?\\/?$/;\n    return regex.test( url );\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/* eslint-disable max-len */\n\n/**\n * Structures of Error Codes, Error Messages, and CustomError compatible objects for the Error Generator utility.\n * Error Code convention: SECTION_OBJECT_(ACTION)_PROBLEM\n */\n\nexport enum ErrorCodes {\n    WORKER_WASM_LOAD_FAILURE           = \"WORKER_WASM_LOAD_FAILURE\",\n    WORKER_WASM_INIT_MISSING           = \"WORKER_WASM_INIT_MISSING\",\n    WORKER_FUNCTION_INVOKE_FAILURE     = \"WORKER_FUNCTION_INVOKE_FAILURE\",\n    WORKER_RECOGNIZER_CREATION_FAILURE = \"WORKER_RECOGNIZER_CREATION_FAILURE\",\n    WORKER_RUNNER_EXISTS               = \"WORKER_RUNNER_EXISTS\",\n    WORKER_RUNNER_CREATION_FAILURE     = \"WORKER_RUNNER_CREATION_FAILURE\",\n    WORKER_RUNNER_MISSING              = \"WORKER_RUNNER_MISSING\",\n    WORKER_RUNNER_RECONFIGURE_FAILURE  = \"WORKER_RUNNER_RECONFIGURE_FAILURE\",\n    WORKER_RUNNER_DELETED              = \"WORKER_RUNNER_DELETED\",\n    WORKER_RUNNER_DELETE_FAILURE       = \"WORKER_RUNNER_DELETE_FAILURE\",\n    WORKER_OBJECT_INVOKE_FAILURE       = \"WORKER_OBJECT_INVOKE_FAILURE\",\n    WORKER_IMAGE_PROCESS_FAILURE       = \"WORKER_IMAGE_PROCESS_FAILURE\",\n    WORKER_HANDLE_UNDEFINED            = \"WORKER_HANDLE_UNDEFINED\",\n    WORKER_MESSAGE_ACTION_UNKNOWN      = \"WORKER_MESSAGE_ACTION_UNKNOWN\",\n    WORKER_LICENSE_UNLOCK_ERROR        = \"WORKER_LICENSE_UNLOCK_ERROR\",\n    WORKER_INTEGRATION_INFO_FAILURE    = \"WORKER_INTEGRATION_INFO_FAILURE\",\n\n    LOCAL_SDK_RUNNER_MISSING = \"LOCAL_SDK_RUNNER_MISSING\",\n    LOCAL_SDK_RUNNER_EMPTY   = \"LOCAL_SDK_RUNNER_EMPTY\",\n\n    LICENSE_UNLOCK_ERROR = \"LICENSE_UNLOCK_ERROR\",\n\n    FRAME_CAPTURE_SVG_UNSUPPORTED = \"FRAME_CAPTURE_SVG_UNSUPPORTED\",\n    FRAME_CAPTURE_CANVAS_MISSING  = \"FRAME_CAPTURE_CANVAS_MISSING\",\n\n    SDK_WASM_SETTINGS_MISSING    = \"SDK_WASM_SETTINGS_MISSING\",\n    SDK_LICENSE_KEY_MISSING      = \"SDK_LICENSE_KEY_MISSING\",\n    SDK_WASM_MODULE_NAME_MISSING = \"SDK_WASM_MODULE_NAME_MISSING\",\n    SDK_ENGINE_LOCATION_INVALID  = \"SDK_ENGINE_LOCATION_INVALID\",\n    SDK_WORKER_LOCATION_INVALID  = \"SDK_WORKER_LOCATION_INVALID\",\n    SDK_MISSING                  = \"SDK_MISSING\",\n    SDK_RECOGNIZERS_MISSING      = \"SDK_RECOGNIZERS_MISSING\",\n\n    VIDEO_RECOGNIZER_ELEMENT_MISSING           = \"VIDEO_RECOGNIZER_ELEMENT_MISSING\",\n    VIDEO_RECOGNIZER_CAMERA_MISSING            = \"VIDEO_RECOGNIZER_CAMERA_MISSING\",\n    VIDEO_RECOGNIZER_CAMERA_NOT_ALLOWED        = \"VIDEO_RECOGNIZER_CAMERA_NOT_ALLOWED\",\n    VIDEO_RECOGNIZER_CAMERA_UNAVAILABLE        = \"VIDEO_RECOGNIZER_CAMERA_UNAVAILABLE\",\n    VIDEO_RECOGNIZER_CAMERA_IN_USE             = \"VIDEO_RECOGNIZER_CAMERA_IN_USE\",\n    VIDEO_RECOGNIZER_MEDIA_DEVICES_UNSUPPORTED = \"VIDEO_RECOGNIZER_MEDIA_DEVICES_UNSUPPORTED\",\n    VIDEO_RECOGNIZER_FEED_RELEASED             = \"VIDEO_RECOGNIZER_FEED_RELEASED\",\n    VIDEO_RECOGNIZER_FEED_NOT_PAUSED           = \"VIDEO_RECOGNIZER_FEED_NOT_PAUSED\",\n    VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED  = \"VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED\",\n    VIDEO_RECOGNIZER_FEED_PAUSED               = \"VIDEO_RECOGNIZER_FEED_PAUSED\",\n    VIDEO_RECOGNIZER_RECOGNIZERS_RESET_FAILURE = \"VIDEO_RECOGNIZER_RECOGNIZERS_RESET_FAILURE\",\n    VIDEO_RECOGNIZER_FEED_MISSING              = \"VIDEO_RECOGNIZER_FEED_MISSING\",\n\n    INVALID_PING_PROXY_URL                     = \"INVALID_PROXY_URL\",\n    PING_PROXY_PERMISSION_NOT_GRANTED          = \"PING_PROXY_PERMISSION_NOT_GRANTED\",\n    PING_DATA_KEYS_AMOUNT_EXCEEDED             = \"PING_DATA_KEYS_AMOUNT_EXCEEDED\",\n    PING_DATA_KEY_LENGTH_EXCEEDED              = \"PING_DATA_KEY_LENGTH_EXCEEDED\",\n    PING_DATA_VALUE_LENGTH_EXCEEDED            = \"PING_DATA_VALUE_LENGTH_EXCEEDED\"\n}\n\nexport enum ErrorMessages {\n    WORKER_HANDLE_UNDEFINED            = \"Cannot find object with handle: undefined\",\n    WORKER_WASM_LOAD_FAILURE           = \"Failed to load WASM in web worker!\",\n    WORKER_WASM_INIT_MISSING           = \"WASM module is not initialized!\",\n    WORKER_FUNCTION_INVOKE_FAILURE     = \"Failed to invoke function!\",\n    WORKER_RECOGNIZER_CREATION_FAILURE = \"Failed to create new recognizer!\",\n    WORKER_RUNNER_EXISTS               = \"Recognizer runner is already created! Multiple instances are not allowed!\",\n    WORKER_RUNNER_CREATION_FAILURE     = \"Failed to create new recognizer runner!\",\n    WORKER_RUNNER_MISSING              = \"Recognizer runner is not created! There is nothing to reconfigure!\",\n    WORKER_RUNNER_RECONFIGURE_FAILURE  = \"Failed to reconfigure recognizer runner!\",\n    WORKER_RUNNER_DELETED              = \"Recognizer runner is already deleted!\",\n    WORKER_RUNNER_DELETE_FAILURE       = \"Failed to delete recognizer runner!\",\n    WORKER_OBJECT_INVOKE_FAILURE       = \"Failed to invoke object!\",\n    WORKER_IMAGE_PROCESS_FAILURE       = \"Recognizer runner is not initialized! Cannot process image!\",\n    WORKER_INTEGRATION_INFO_FAILURE    = \"Failed to get product integration info!\",\n\n    LOCAL_SDK_RUNNER_MISSING = \"Property nativeRecognizerRunner is not available!\",\n    LOCAL_SDK_RUNNER_EMPTY   = \"Native RecognizerRunner cannot be empty!\",\n\n    LICENSE_TOKEN_STATE_INCORRECT       = \"Internal error (Incorrect token state)\",\n    LICENSE_PAYLOAD_VERIFICATION_FAILED = \"Failed to verify server permission's digital signature!\",\n    LICENSE_PAYLOAD_CORRUPTED           = \"Server permission payload is corrupted!\",\n    LICENSE_PERMISSION_EXPIRED          = \"Internal error (server permission expired)\",\n    LICENSE_REMOTE_LOCKED               = \"Provided license key has been remotely locked. Please contact support for more information!\",\n\n    FRAME_CAPTURE_SVG_UNSUPPORTED = \"Recognition of SVG elements not supported!\",\n    FRAME_CAPTURE_CANVAS_MISSING  = \"Could not get canvas 2d context!\",\n\n    SDK_WASM_SETTINGS_MISSING    = \"Missing WASM load settings!\",\n    SDK_LICENSE_KEY_MISSING      = \"Missing license key!\",\n    SDK_WASM_MODULE_NAME_MISSING = \"Missing WASM module name!\",\n    SDK_ENGINE_LOCATION_INVALID  = \"Setting property 'engineLocation' must be a string!\",\n    SDK_WORKER_LOCATION_INVALID  = \"Setting property 'workerLocation' must be a string!\",\n    SDK_MISSING                  = \"SDK is not provided!\",\n    SDK_RECOGNIZERS_MISSING      = \"To create RecognizerRunner at least 1 recognizer is required.\",\n\n    VIDEO_RECOGNIZER_ELEMENT_MISSING           = \"Video element, i.e. camera feed is not provided!\",\n    VIDEO_RECOGNIZER_CAMERA_MISSING            = \"Camera not found!\",\n    VIDEO_RECOGNIZER_CAMERA_NOT_ALLOWED        = \"Camera not allowed!\",\n    VIDEO_RECOGNIZER_CAMERA_UNAVAILABLE        = \"Camera not available!\",\n    VIDEO_RECOGNIZER_CAMERA_IN_USE             = \"Camera in use!\",\n    VIDEO_RECOGNIZER_MEDIA_DEVICES_UNSUPPORTED = \"Media devices not supported by browser.\",\n    VIDEO_RECOGNIZER_FEED_RELEASED             = \"The associated video feed has been released!\",\n    VIDEO_RECOGNIZER_FEED_NOT_PAUSED           = \"The associated video feed is not paused. Use resumeRecognition instead!\",\n    VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED  = \"The play() request was interrupted or prevented by browser security rules!\",\n    VIDEO_RECOGNIZER_FEED_PAUSED               = \"Cannot resume recognition while video feed is paused! Use recognize or startRecognition\",\n    VIDEO_RECOGNIZER_RECOGNIZERS_RESET_FAILURE = \"Could not reset recognizers!\",\n    VIDEO_RECOGNIZER_FEED_MISSING              = \"Missing video feed!\",\n\n    INVALID_PING_PROXY_URL                     = \"Provided ping proxy URL is not a valid secure URL in format 'https://{host}:{port?}'.\",\n    PING_PROXY_PERMISSION_NOT_GRANTED          = \"Allow ping proxy permission not found in license.\",\n    PING_DATA_KEYS_AMOUNT_EXCEEDED             = \"Maximum number of ping data keys exceeded.\",\n    PING_DATA_KEY_LENGTH_EXCEEDED              = \"Ping data key is too long.\",\n    PING_DATA_VALUE_LENGTH_EXCEEDED            = \"Ping data value is too long.\"\n}\n\nexport const videoRecognizerErrors = {\n    feedMissing: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_FEED_MISSING,\n        code: ErrorCodes.VIDEO_RECOGNIZER_FEED_MISSING,\n    },\n    recognizersResetFailure: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_RECOGNIZERS_RESET_FAILURE,\n        code: ErrorCodes.VIDEO_RECOGNIZER_RECOGNIZERS_RESET_FAILURE,\n    },\n    feedPaused: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_FEED_PAUSED,\n        code: ErrorCodes.VIDEO_RECOGNIZER_FEED_PAUSED,\n    },\n    playRequestInterrupted: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED,\n        code: ErrorCodes.VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED,\n    },\n    videoFeedNotPaused: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_FEED_NOT_PAUSED,\n        code: ErrorCodes.VIDEO_RECOGNIZER_FEED_NOT_PAUSED,\n    },\n    videoFeedReleased: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_FEED_RELEASED,\n        code: ErrorCodes.VIDEO_RECOGNIZER_FEED_RELEASED,\n    },\n    mediaDevicesUnsupported: {\n        code: ErrorCodes.VIDEO_RECOGNIZER_MEDIA_DEVICES_UNSUPPORTED,\n        message: ErrorMessages.VIDEO_RECOGNIZER_MEDIA_DEVICES_UNSUPPORTED,\n    },\n    cameraMissing: {\n        code: ErrorCodes.VIDEO_RECOGNIZER_CAMERA_MISSING,\n        message: ErrorMessages.VIDEO_RECOGNIZER_CAMERA_MISSING,\n    },\n    cameraNotAllowed: {\n        code: ErrorCodes.VIDEO_RECOGNIZER_CAMERA_NOT_ALLOWED,\n        message: ErrorMessages.VIDEO_RECOGNIZER_CAMERA_NOT_ALLOWED,\n    },\n    elementMissing: {\n        message: ErrorMessages.VIDEO_RECOGNIZER_ELEMENT_MISSING,\n        code: ErrorCodes.VIDEO_RECOGNIZER_ELEMENT_MISSING,\n    },\n};\n\nexport const sdkErrors = {\n    wasmSettingsMissing: {\n        message: ErrorMessages.SDK_WASM_SETTINGS_MISSING,\n        code: ErrorCodes.SDK_WASM_SETTINGS_MISSING,\n    },\n    licenseKeyMissing: {\n        message: ErrorMessages.SDK_LICENSE_KEY_MISSING,\n        code: ErrorCodes.SDK_LICENSE_KEY_MISSING,\n    },\n    wasmModuleNameMissing: {\n        message: ErrorMessages.SDK_WASM_MODULE_NAME_MISSING,\n        code: ErrorCodes.SDK_WASM_MODULE_NAME_MISSING,\n    },\n    engineLocationInvalid: {\n        message: ErrorMessages.SDK_ENGINE_LOCATION_INVALID,\n        code: ErrorCodes.SDK_ENGINE_LOCATION_INVALID,\n    },\n    workerLocationInvalid: {\n        message: ErrorMessages.SDK_WORKER_LOCATION_INVALID,\n        code: ErrorCodes.SDK_WORKER_LOCATION_INVALID,\n    },\n    missing: {\n        message: ErrorMessages.SDK_MISSING,\n        code: ErrorCodes.SDK_MISSING,\n    },\n    recognizersMissing: {\n        message: ErrorMessages.SDK_RECOGNIZERS_MISSING,\n        code: ErrorCodes.SDK_RECOGNIZERS_MISSING,\n    },\n};\n\nexport const frameCaptureErrors = {\n    svgUnsupported: {\n        message: ErrorMessages.FRAME_CAPTURE_SVG_UNSUPPORTED,\n        code: ErrorCodes.FRAME_CAPTURE_SVG_UNSUPPORTED,\n    },\n    canvasMissing: {\n        message: ErrorMessages.FRAME_CAPTURE_CANVAS_MISSING,\n        code: ErrorCodes.FRAME_CAPTURE_CANVAS_MISSING,\n    },\n};\n\nexport const licenseErrors = {\n    licenseTokenStateIncorrect: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n        message: ErrorMessages.LICENSE_TOKEN_STATE_INCORRECT,\n    },\n    licensePayloadVerificationFailed: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n        message: ErrorMessages.LICENSE_PAYLOAD_VERIFICATION_FAILED,\n    },\n    licensePayloadCorrupted: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n        message: ErrorMessages.LICENSE_PAYLOAD_CORRUPTED,\n    },\n    licensePermissionExpired: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n        message: ErrorMessages.LICENSE_PERMISSION_EXPIRED,\n    },\n    licenseRemoteLocked: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n        message: ErrorMessages.LICENSE_REMOTE_LOCKED,\n    },\n    licenseNetworkError: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n    },\n    licenseInvalid: {\n        code: ErrorCodes.LICENSE_UNLOCK_ERROR,\n    },\n};\n\nexport const localSdkErrors = {\n    runnerMissing: {\n        message: ErrorMessages.LOCAL_SDK_RUNNER_MISSING,\n        code: ErrorCodes.LOCAL_SDK_RUNNER_MISSING,\n    },\n    runnerEmpty: {\n        message: ErrorMessages.LOCAL_SDK_RUNNER_EMPTY,\n        code: ErrorCodes.LOCAL_SDK_RUNNER_EMPTY,\n    },\n};\n\nexport const workerErrors = {\n    imageProcessFailure: {\n        message: ErrorMessages.WORKER_IMAGE_PROCESS_FAILURE,\n        code: ErrorCodes.WORKER_IMAGE_PROCESS_FAILURE,\n    },\n    objectInvokeFailure: {\n        message: ErrorMessages.WORKER_OBJECT_INVOKE_FAILURE,\n        code: ErrorCodes.WORKER_OBJECT_INVOKE_FAILURE,\n    },\n    runnerDeleteFailure: {\n        message: ErrorMessages.WORKER_RUNNER_DELETE_FAILURE,\n        code: ErrorCodes.WORKER_RUNNER_DELETE_FAILURE,\n    },\n    runnerDeleted: {\n        message: ErrorMessages.WORKER_RUNNER_DELETED,\n        code: ErrorCodes.WORKER_RUNNER_DELETED,\n    },\n    runnerReconfigureFailure: {\n        message: ErrorMessages.WORKER_RUNNER_RECONFIGURE_FAILURE,\n        code: ErrorCodes.WORKER_RUNNER_RECONFIGURE_FAILURE,\n    },\n    runnerMissing: {\n        message: ErrorMessages.WORKER_RUNNER_MISSING,\n        code: ErrorCodes.WORKER_RUNNER_MISSING,\n    },\n    runnerCreationFailure: {\n        message: ErrorMessages.WORKER_RUNNER_CREATION_FAILURE,\n        code: ErrorCodes.WORKER_RUNNER_CREATION_FAILURE,\n    },\n    runnerExists: {\n        message: ErrorMessages.WORKER_RUNNER_EXISTS,\n        code: ErrorCodes.WORKER_RUNNER_EXISTS,\n    },\n    recognizerCreationFailure: {\n        message: ErrorMessages.WORKER_RECOGNIZER_CREATION_FAILURE,\n        code: ErrorCodes.WORKER_RECOGNIZER_CREATION_FAILURE,\n    },\n    functionInvokeFailure: {\n        message: ErrorMessages.WORKER_FUNCTION_INVOKE_FAILURE,\n        code: ErrorCodes.WORKER_FUNCTION_INVOKE_FAILURE,\n    },\n    wasmInitMissing: {\n        message: ErrorMessages.WORKER_WASM_INIT_MISSING,\n        code: ErrorCodes.WORKER_WASM_INIT_MISSING,\n    },\n    wasmLoadFailure: {\n        message: ErrorMessages.WORKER_WASM_LOAD_FAILURE,\n        code: ErrorCodes.WORKER_WASM_LOAD_FAILURE,\n    },\n    handleUndefined: {\n        message: ErrorMessages.WORKER_HANDLE_UNDEFINED,\n        code: ErrorCodes.WORKER_HANDLE_UNDEFINED,\n    },\n    integrationInfoFailure: {\n        message: ErrorMessages.WORKER_INTEGRATION_INFO_FAILURE,\n        code: ErrorCodes.WORKER_INTEGRATION_INFO_FAILURE,\n    },\n};\n\nexport const pingErrors = {\n    invalidProxyUrl: {\n        message: ErrorMessages.INVALID_PING_PROXY_URL,\n        code: ErrorCodes.INVALID_PING_PROXY_URL,\n    },\n    permissionNotGranted: {\n        message: ErrorMessages.PING_PROXY_PERMISSION_NOT_GRANTED,\n        code: ErrorCodes.PING_PROXY_PERMISSION_NOT_GRANTED,\n    },\n    dataKeysAmountExceeded: {\n        message: ErrorMessages.PING_DATA_KEYS_AMOUNT_EXCEEDED,\n        code: ErrorCodes.PING_DATA_KEYS_AMOUNT_EXCEEDED,\n    },\n    dataKeyLengthExceeded: {\n        message: ErrorMessages.PING_DATA_KEY_LENGTH_EXCEEDED,\n        code: ErrorCodes.PING_DATA_KEY_LENGTH_EXCEEDED,\n    },\n    dataValueLengthExceeded: {\n        message: ErrorMessages.PING_DATA_VALUE_LENGTH_EXCEEDED,\n        code: ErrorCodes.PING_DATA_VALUE_LENGTH_EXCEEDED,\n    }\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\n\n/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n\n// THIS FILE RUNS ON THE MAIN THREAD\n\nimport * as Messages from \"./Messages\";\nimport { CapturedFrame } from \"../FrameCapture\";\n\nimport\n{\n    RecognizerResultState,\n    RecognizerRunner,\n    WasmModuleProxy,\n    WasmSDK,\n    Recognizer,\n    RecognizerSettings,\n    RecognizerResult,\n    SignedPayload,\n    ProductIntegrationInfo\n} from \"../DataStructures.js\";\n\nimport { MetadataCallbacks, DisplayablePoints, DisplayableQuad } from \"../MetadataCallbacks\";\nimport { WasmSDKLoadSettings, OptionalLoadProgressCallback } from \"../WasmLoadSettings\";\nimport { WasmType } from \"../WasmType\";\nimport { nativeJsonizationEnabled } from \"../../defaultWasmModule\";\nimport { SDKError, SerializableSDKError } from \"../SDKError\";\nimport { isValidURL } from \"../Utils\";\nimport * as ErrorTypes from \"../ErrorTypes\";\n\n\n// ============================================ /\n// Web Worker Proxy Implementation              /\n// ============================================ /\n\ninterface EventHandler\n{\n    ( msg: Messages.ResponseMessage ): void;\n}\n\nfunction defaultEventHandler(\n    resolve: () => void,\n    reject: ( reason: SDKError | string | null ) => void\n): EventHandler\n{\n    return ( msg: Messages.ResponseMessage ) =>\n    {\n        const resultMsg = msg as Messages.StatusMessage;\n        if ( resultMsg.success )\n        {\n            resolve();\n        }\n        else\n        {\n            if ( typeof resultMsg.error === \"string\" || resultMsg.error === null )\n            {\n                reject( resultMsg.error );\n            }\n            else\n            {\n                reject( new SDKError( resultMsg.error ) );\n            }\n        }\n    };\n}\n\nfunction defaultResultEventHandler(\n    successResolver: EventHandler,\n    reject: ( reason: SerializableSDKError | string | null ) => void\n): EventHandler\n{\n    return ( msg: Messages.ResponseMessage ) =>\n    {\n        const resultMsg = msg as Messages.StatusMessage;\n        if ( resultMsg.success )\n        {\n            successResolver( msg );\n        }\n        else\n        {\n            if ( typeof resultMsg.error === \"string\" || resultMsg.error === null )\n            {\n                reject( resultMsg.error );\n            }\n            else\n            {\n                reject( new SDKError( resultMsg.error ) );\n            }\n        }\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment */\nfunction wrapParameters( params: Array< any > ): Array< Messages.WrappedParameter >\n{\n    // convert params\n    const wrappedPrameters = [] as Array< Messages.WrappedParameter >;\n    for ( let param of params )\n    {\n        let paramType = Messages.ParameterType.Any;\n        if ( param instanceof RemoteRecognizer )\n        {\n            paramType = Messages.ParameterType.Recognizer;\n            param = param.getRemoteObjectHandle();\n        }\n        wrappedPrameters.push\n        (\n            {\n                parameter: param,\n                type: paramType\n            }\n        );\n    }\n    return wrappedPrameters;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment */\n\nexport class RemoteRecognizer implements Recognizer\n{\n    /* eslint-disable lines-between-class-members, @typescript-eslint/ban-types */\n    private readonly wasmSDKWorker : WasmSDKWorker;\n    private          objectHandle  : number;\n    readonly         recognizerName: string;\n    private          callbacks     : Map< string, Function >;\n    /* eslint-enable lines-between-class-members */\n\n    constructor( wasmWorker: WasmSDKWorker, recognizerName: string, remoteObjHandle: number )\n    {\n        this.wasmSDKWorker = wasmWorker;\n        this.objectHandle = remoteObjHandle;\n        this.recognizerName = recognizerName;\n        this.callbacks = new Map< string, Function >();\n    }\n    /* eslint-enable @typescript-eslint/ban-types */\n\n    getRemoteObjectHandle(): number\n    {\n        return this.objectHandle;\n    }\n\n    currentSettings(): Promise< RecognizerSettings >\n    {\n        return new Promise< RecognizerSettings >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.objectHandle < 0 )\n                {\n                    reject( \"Invalid object handle: \" + this.objectHandle.toString() );\n                    return;\n                }\n\n                const msg = new Messages.InvokeObjectMethod\n                (\n                    this.objectHandle,\n                    \"currentSettings\",\n                    []\n                );\n                const handler = defaultResultEventHandler\n                (\n                    ( msg: Messages.ResponseMessage ) =>\n                    {\n                        resolve( ( msg as Messages.InvokeResultMessage ).result );\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    toSignedJSON(): Promise< SignedPayload | null >\n    {\n        if ( nativeJsonizationEnabled )\n        {\n            return new Promise< SignedPayload | null >\n            (\n                ( resolve, reject ) =>\n                {\n                    if ( this.objectHandle < 0 )\n                    {\n                        reject( \"Invalid object handle: \" + this.objectHandle.toString() );\n                        return;\n                    }\n\n                    const msg = new Messages.InvokeObjectMethod\n                    (\n                        this.objectHandle,\n                        \"toSignedJSON\",\n                        []\n                    );\n                    const handler = defaultResultEventHandler\n                    (\n                        ( msg: Messages.ResponseMessage ) =>\n                        {\n                            resolve( ( msg as Messages.InvokeResultMessage ).result );\n                        },\n                        reject\n                    );\n                    this.wasmSDKWorker.postMessage( msg, handler );\n                }\n            );\n        }\n        else\n        {\n            // native module does not support toSignedJSON method\n            return Promise.resolve( null );\n        }\n    }\n\n    private clearAllCallbacks()\n    {\n        this.callbacks.clear();\n        this.wasmSDKWorker.unregisterRecognizerCallbacks( this.objectHandle );\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any,\n                      @typescript-eslint/no-unsafe-assignment,\n                      @typescript-eslint/no-unsafe-member-access,\n                      @typescript-eslint/no-unsafe-return\n    */\n    // convert each function member into wrapped parameter, containing address where callback needs to be delivered\n    private removeFunctions( settings: any ): any\n    {\n        // clear any existing callbacks\n        this.clearAllCallbacks();\n\n        const keys = Object.keys( settings );\n        let needsRegistering = false;\n        for ( const key of keys )\n        {\n            const data = settings[ key ];\n            if ( typeof data === \"function\" )\n            {\n                this.callbacks.set( key, data );\n                const wrappedFunction: Messages.WrappedParameter = {\n                    parameter: {\n                        recognizerHandle: this.objectHandle,\n                        callbackName: key\n                    } as Messages.CallbackAddress, // in order to know to which instance callback needs to be delivered\n                    type: Messages.ParameterType.Callback\n                };\n                settings[ key ] = wrappedFunction;\n                needsRegistering = true;\n            }\n        }\n        if ( needsRegistering )\n        {\n            this.wasmSDKWorker.registerRecognizerCallbacks( this.objectHandle, this );\n        }\n        return settings;\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any,\n                     @typescript-eslint/no-unsafe-assignment,\n                     @typescript-eslint/no-unsafe-member-access,\n                     @typescript-eslint/no-unsafe-return\n    */\n\n    updateSettings( newSettings: RecognizerSettings ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.objectHandle < 0 )\n                {\n                    reject( \"Invalid object handle: \" + this.objectHandle.toString() );\n                    return;\n                }\n\n                /* eslint-disable @typescript-eslint/no-unsafe-assignment */\n                const msg = new Messages.InvokeObjectMethod\n                (\n                    this.objectHandle,\n                    \"updateSettings\",\n                    [\n                        {\n                            parameter: this.removeFunctions( newSettings ),\n                            type: Messages.ParameterType.RecognizerSettings\n                        }\n                    ]\n                );\n                /* eslint-enable @typescript-eslint/no-unsafe-assignment */\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    invokeCallback( callbackName: string, args: any[] ): void\n    {\n        const callback = this.callbacks.get( callbackName );\n        if ( callback !== undefined )\n        {\n            callback( ...args );\n        }\n        else\n        {\n            console.warn( \"Cannot find callback\", callbackName );\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    getResult(): Promise< RecognizerResult >\n    {\n        return new Promise< RecognizerResult >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.objectHandle < 0 )\n                {\n                    reject( \"Invalid object handle: \" + this.objectHandle.toString() );\n                    return;\n                }\n\n                const msg = new Messages.InvokeObjectMethod( this.objectHandle, \"getResult\", [] );\n                const handler = defaultResultEventHandler\n                (\n                    ( msg: Messages.ResponseMessage ) =>\n                    {\n                        resolve( ( msg as Messages.InvokeResultMessage ).result );\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    delete(): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.objectHandle < 0 )\n                {\n                    reject( \"Invalid object handle: \" + this.objectHandle.toString() );\n                    return;\n                }\n\n                this.clearAllCallbacks();\n\n                const msg = new Messages.InvokeObjectMethod( this.objectHandle, \"delete\", [] );\n                const handler = defaultEventHandler\n                (\n                    () =>\n                    {\n                        this.objectHandle = -1;\n                        resolve();\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n}\n\nfunction createRegisteredCallbacks\n(\n    metadataCallbacks: MetadataCallbacks\n): Messages.RegisteredMetadataCallbacks\n{\n    const msg = new Messages.RegisteredMetadataCallbacks();\n\n    // https://stackoverflow.com/a/20093686/213057\n    msg.onDebugText       = !!metadataCallbacks.onDebugText;\n    msg.onDetectionFailed = !!metadataCallbacks.onDetectionFailed;\n    msg.onPointsDetection = !!metadataCallbacks.onPointsDetection;\n    msg.onQuadDetection   = !!metadataCallbacks.onQuadDetection;\n    msg.onFirstSideResult = !!metadataCallbacks.onFirstSideResult;\n\n    return msg;\n}\n\nclass RemoteRecognizerRunner implements RecognizerRunner\n{\n    private readonly wasmSDKWorker: WasmSDKWorker;\n\n    private deleted = false;\n\n    recognizers: Array< Recognizer >;\n\n    constructor( wasmWorker: WasmSDKWorker, recognizers: Array< Recognizer > )\n    {\n        this.wasmSDKWorker = wasmWorker;\n        this.recognizers = recognizers;\n    }\n\n    processImage( image: CapturedFrame ): Promise< RecognizerResultState >\n    {\n        return new Promise< RecognizerResultState >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.deleted )\n                {\n                    reject( \"Recognizer runner is deleted. It cannot be used anymore!\" );\n                    return;\n                }\n\n                const msg = new Messages.ProcessImage( image );\n                const handler = defaultResultEventHandler\n                (\n                    ( response: Messages.ResponseMessage ) =>\n                    {\n                        const state: RecognizerResultState = (\n                            response as Messages.ImageProcessResultMessage\n                        ).recognitionState;\n                        resolve( state );\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postTransferrableMessage( msg, handler );\n            }\n        );\n    }\n\n    reconfigureRecognizers\n    (\n        recognizers: Array< Recognizer >,\n        allowMultipleResults: boolean\n    ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                if ( this.deleted )\n                {\n                    reject( \"Recognizer runner is deleted. It cannot be used anymore!\" );\n                    return;\n                }\n\n                const recognizerHandles = getRecognizerHandles( recognizers as Array< RemoteRecognizer > );\n                const msg = new Messages.ReconfigureRecognizerRunner( recognizerHandles, allowMultipleResults );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n                this.recognizers = recognizers;\n            }\n        );\n    }\n\n    setMetadataCallbacks( metadataCallbacks: MetadataCallbacks ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.RegisterMetadataCallbacks( createRegisteredCallbacks( metadataCallbacks ) );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessageAndRegisterCallbacks( msg, metadataCallbacks, handler );\n            }\n        );\n    }\n\n    resetRecognizers( hardReset: boolean ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.ResetRecognizers( hardReset );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    setDetectionOnlyMode( detectionOnly: boolean ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.SetDetectionOnly( detectionOnly );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    setPingProxyUrl( url: string ): Promise< void >\n    {\n        if ( !isValidURL( url ) )\n        {\n            throw new SDKError( ErrorTypes.pingErrors.invalidProxyUrl );\n        }\n\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.SetPingProxyUrl( url );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    setPingData( data: Record<string, string> ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.SetPingData( data );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    setCameraPreviewMirrored( mirrored: boolean ): Promise< void >\n    {\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.SetCameraPreviewMirrored( mirrored );\n                const handler = defaultEventHandler( resolve, reject );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n\n    delete(): Promise< void >\n    {\n        if ( this.deleted )\n        {\n            return Promise.reject( \"Recognizer runner is already deleted.\" );\n        }\n        return new Promise< void >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.DeleteRecognizerRunner();\n                const handler = defaultEventHandler\n                (\n                    () =>\n                    {\n                        this.deleted = true;\n                        resolve();\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n}\n\nfunction getRecognizerHandles( remoteRecognizers: Array< RemoteRecognizer > )\n{\n    const recognizerHandles: Array< number > = [];\n    for ( const remoteRecognizer of remoteRecognizers )\n    {\n        recognizerHandles.push( remoteRecognizer.getRemoteObjectHandle() );\n    }\n    return recognizerHandles;\n}\n\nclass WasmModuleWorkerProxy implements WasmModuleProxy\n{\n    private readonly wasmSDKWorker: WasmSDKWorker;\n\n    constructor( wasmSDKWorker: WasmSDKWorker )\n    {\n        this.wasmSDKWorker = wasmSDKWorker;\n    }\n\n    createRecognizerRunner\n    (\n        recognizers          : Array< Recognizer >,\n        allowMultipleResults = false,\n        metadataCallbacks    : MetadataCallbacks = {}\n    ): Promise< RecognizerRunner >\n    {\n        return new Promise< RecognizerRunner >\n        (\n            ( resolve, reject ) =>\n            {\n                const recognizerHandles = getRecognizerHandles( recognizers as Array< RemoteRecognizer > );\n                const msg = new Messages.CreateRecognizerRunner\n                (\n                    recognizerHandles,\n                    allowMultipleResults,\n                    createRegisteredCallbacks( metadataCallbacks )\n                );\n                const handler = defaultEventHandler\n                (\n                    () =>\n                    {\n                        resolve( new RemoteRecognizerRunner( this.wasmSDKWorker, recognizers ) );\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessageAndRegisterCallbacks( msg, metadataCallbacks, handler );\n            }\n        );\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    newRecognizer( className: string, ...constructorArgs: any[] ): Promise< Recognizer >\n    {\n        return new Promise< Recognizer >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.CreateNewRecognizer( className, wrapParameters( constructorArgs ) );\n                const handler = defaultResultEventHandler\n                (\n                    ( msg: Messages.ResponseMessage ) =>\n                    {\n                        const remoteRecognizer = new RemoteRecognizer\n                        (\n                            this.wasmSDKWorker,\n                            className,\n                            ( msg as Messages.ObjectCreatedMessage ).objectHandle\n                        );\n                        resolve( remoteRecognizer );\n                    },\n                    reject\n                );\n                this.wasmSDKWorker.postMessage( msg, handler );\n            }\n        );\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\nexport class WasmSDKWorker implements WasmSDK\n{\n    /* eslint-disable lines-between-class-members */\n    readonly mbWasmModule            : WasmModuleWorkerProxy;\n    readonly mbWasmWorker            : Worker;\n    private          eventHandlers           : { [ key: number ] : EventHandler } = {};\n    private          metadataCallbacks       : MetadataCallbacks = {};\n    private          loadCallback            : OptionalLoadProgressCallback;\n    private          recognizersWithCallbacks: Map< number, RemoteRecognizer >;\n    private          userId                  : string;\n    public           showOverlay             : boolean;\n    public           loadedWasmType          : WasmType = WasmType.Basic; // will be updated after WASM gets loaded\n    /* eslint-enable lines-between-class-members */\n\n    private constructor\n    (\n        worker: Worker,\n        loadProgressCallback: OptionalLoadProgressCallback,\n        userId: string,\n        rejectHandler: ( message: string ) => void\n    )\n    {\n        this.mbWasmWorker = worker;\n        this.mbWasmWorker.onmessage = ( event: MessageEvent ) => { this.handleWorkerEvent( event ); };\n        this.mbWasmWorker.onerror = () =>\n        {\n            rejectHandler( \"Problem during initialization of worker file!\" );\n            return;\n        };\n        this.mbWasmModule = new WasmModuleWorkerProxy( this );\n        this.loadCallback = loadProgressCallback;\n        this.recognizersWithCallbacks = new Map< number, RemoteRecognizer >();\n        this.userId = userId;\n        this.showOverlay = false;\n    }\n\n    postMessage( message: Messages.RequestMessage, eventHandler: EventHandler ): void\n    {\n        this.eventHandlers[ message.messageID ] = eventHandler;\n        this.mbWasmWorker.postMessage( message );\n    }\n\n    postTransferrableMessage\n    (\n        message      : Messages.RequestMessage & Messages.TransferrableMessage,\n        eventHandler : EventHandler\n    ): void\n    {\n        this.eventHandlers[ message.messageID ] = eventHandler;\n        this.mbWasmWorker.postMessage( message, message.getTransferrables() );\n    }\n\n    postMessageAndRegisterCallbacks\n    (\n        message           : Messages.RequestMessage,\n        metadataCallbacks : MetadataCallbacks,\n        eventHandler      : EventHandler\n    ): void\n    {\n        this.eventHandlers[ message.messageID ] = eventHandler;\n        this.metadataCallbacks = metadataCallbacks;\n        this.mbWasmWorker.postMessage( message );\n    }\n\n    registerRecognizerCallbacks( remoteRecognizerHandle: number, recognizer: RemoteRecognizer ): void\n    {\n        this.recognizersWithCallbacks.set( remoteRecognizerHandle, recognizer );\n    }\n\n    unregisterRecognizerCallbacks( remoteRecognizerHandle: number ): void\n    {\n        this.recognizersWithCallbacks.delete( remoteRecognizerHandle );\n    }\n\n    /**\n     * Clean up the active instance of the SDK.\n     *\n     * It's not possible to use the SDK after this method is called.\n     */\n    delete(): void\n    {\n        this.mbWasmWorker.terminate();\n    }\n\n    getProductIntegrationInfo(): Promise< ProductIntegrationInfo >\n    {\n        return new Promise< ProductIntegrationInfo >\n        (\n            ( resolve, reject ) =>\n            {\n                const msg = new Messages.GetProductIntegrationInfo( this.userId );\n                const handler = defaultResultEventHandler\n                (\n                    ( msg: Messages.ResponseMessage ) =>\n                    {\n                        resolve( ( msg as Messages.ProductIntegrationResultMessage ).result );\n                    },\n                    reject\n                );\n                this.postMessage( msg, handler );\n            }\n        );\n    }\n\n    private handleWorkerEvent( event: MessageEvent )\n    {\n        if ( \"isCallbackMessage\" in event.data )\n        {\n            const msg = event.data as Messages.InvokeCallbackMessage;\n            switch ( msg.callbackType )\n            {\n                case Messages.MetadataCallback.onDebugText:\n                    if ( typeof this.metadataCallbacks.onDebugText === \"function\" )\n                    {\n                        this.metadataCallbacks.onDebugText( msg.callbackParameters[ 0 ] as string );\n                    }\n                    break;\n                case Messages.MetadataCallback.onDetectionFailed:\n                    if ( typeof this.metadataCallbacks.onDetectionFailed === \"function\" )\n                    {\n                        this.metadataCallbacks.onDetectionFailed();\n                    }\n                    break;\n                case Messages.MetadataCallback.onPointsDetection:\n                    if ( typeof this.metadataCallbacks.onPointsDetection === \"function\" )\n                    {\n                        this.metadataCallbacks.onPointsDetection( msg.callbackParameters[ 0 ] as DisplayablePoints );\n                    }\n                    break;\n                case Messages.MetadataCallback.onQuadDetection:\n                    if ( typeof this.metadataCallbacks.onQuadDetection === \"function\" )\n                    {\n                        this.metadataCallbacks.onQuadDetection( msg.callbackParameters[ 0 ] as DisplayableQuad );\n                    }\n                    break;\n                case Messages.MetadataCallback.onFirstSideResult:\n                    if ( typeof this.metadataCallbacks.onFirstSideResult === \"function\" )\n                    {\n                        this.metadataCallbacks.onFirstSideResult();\n                    }\n                    break;\n                case Messages.MetadataCallback.recognizerCallback:\n                {\n                    // first parameter is address, other parameters are callback parameters\n                    const address = msg.callbackParameters.shift() as Messages.CallbackAddress;\n                    const recognizer = this.recognizersWithCallbacks.get( address.recognizerHandle );\n                    if ( recognizer !== undefined )\n                    {\n                        recognizer.invokeCallback( address.callbackName, msg.callbackParameters );\n                    }\n                    else\n                    {\n                        console.warn\n                        (\n                            \"Cannot find recognizer to deliver callback message. Maybe it's destroyed?\",\n                            address\n                        );\n                    }\n                    break;\n                }\n                default:\n                    throw new Error( `Unknown callback type: ${ Messages.MetadataCallback[ msg.callbackType ] }` );\n            }\n        }\n        else if ( \"isLoadProgressMessage\" in event.data )\n        {\n            const msg = event.data as Messages.LoadProgressMessage;\n\n            if ( typeof this.loadCallback === \"function\" )\n            {\n                this.loadCallback( msg.progress );\n            }\n        }\n        else\n        {\n            const msg = event.data as Messages.ResponseMessage;\n            const eventHandler = this.eventHandlers[ msg.messageID ];\n            delete this.eventHandlers[ msg.messageID ];\n            eventHandler( msg );\n        }\n    }\n\n    static async createWasmWorker\n    (\n        worker           : Worker,\n        wasmLoadSettings : WasmSDKLoadSettings,\n        userId           : string\n    ): Promise< WasmSDKWorker >\n    {\n        return new Promise< WasmSDKWorker >\n        (\n            ( resolve, reject ) =>\n            {\n                const wasmWorker = new WasmSDKWorker\n                (\n                    worker,\n                    wasmLoadSettings.loadProgressCallback,\n                    userId,\n                    reject\n                );\n                const initMessage = new Messages.InitMessage( wasmLoadSettings, userId );\n                const initEventHandler = defaultResultEventHandler\n                (\n                    ( msg: Messages.ResponseMessage ) =>\n                    {\n                        const successMsg = msg as Messages.InitSuccessMessage;\n                        wasmWorker.showOverlay = successMsg.showOverlay;\n                        wasmWorker.loadedWasmType = successMsg.wasmType;\n                        resolve( wasmWorker );\n                    },\n                    /* eslint-disable @typescript-eslint/no-explicit-any */\n                    ( error: any ) =>\n                    {\n                        if ( wasmWorker && typeof wasmWorker.delete === \"function\" )\n                        {\n                            wasmWorker.delete();\n                        }\n                        reject( error );\n                    }\n                    /* eslint-enable @typescript-eslint/no-explicit-any */\n                );\n                wasmWorker.postMessage( initMessage, initEventHandler );\n            }\n        );\n    }\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * Preferred type of camera to be used when opening the camera feed.\n */\nexport enum PreferredCameraType\n{\n    /** Prefer back facing camera */\n    BackFacingCamera,\n    /** Prefer front facing camera */\n    FrontFacingCamera\n}\n\n// inspired by https://unpkg.com/browse/scandit-sdk@4.6.1/src/lib/cameraAccess.ts\nconst backCameraKeywords: string[] = [\n    \"rear\",\n    \"back\",\n    \"rück\",\n    \"arrière\",\n    \"trasera\",\n    \"trás\",\n    \"traseira\",\n    \"posteriore\",\n    \"posterior\",\n    \"后面\",\n    \"後面\",\n    \"背面\",\n    \"后置\", // alternative\n    \"後置\", // alternative\n    \"背置\", // alternative\n    \"задней\",\n    \"الخلفية\",\n    \"후\",\n    \"arka\",\n    \"achterzijde\",\n    \"หลัง\",\n    \"baksidan\",\n    \"bagside\",\n    \"sau\",\n    \"bak\",\n    \"tylny\",\n    \"takakamera\",\n    \"belakang\",\n    \"אחורית\",\n    \"πίσω\",\n    \"spate\",\n    \"hátsó\",\n    \"zadní\",\n    \"darrere\",\n    \"zadná\",\n    \"задня\",\n    \"stražnja\",\n    \"belakang\",\n    \"बैक\"\n];\n\nconst backDualWideCameraLocalizations: string[] = [\n    \"Cameră dublă cu obiectiv superangular spate\",\n    \"מצלמה כפולה רחבה אחורית\",\n    \"Артқы қос кең бұрышты камера\",\n    \"Câmara grande angular dupla traseira\",\n    \"Πίσω διπλή ευρεία κάμερα\",\n    \"後置雙廣角鏡頭相機\",\n    \"Задна двойна широкоъгълна камера\",\n    \"Càmera dual posterior amb gran angular\",\n    \"Zadná duálna širokouhlá kamera\",\n    \"كاميرا خلفية مزدوجة عريضة\",\n    \"Задняя двойная широкоугольная камера\",\n    \"Задня здвоєна ширококутна камера\",\n    \"Cámara amplia posterior doble\",\n    \"Dwikamera Lebar Belakang\",\n    \"Tylny dwuobiektywowy aparat szerokokątny\",\n    \"Dubbel vidvinkelkamera på baksidan\",\n    \"Back Dual Wide Camera\",\n    \"Hátsó, kettős, széles látószögű kamera\",\n    \"후면 듀얼 와이드 카메라\",\n    \"Double caméra grand angle arrière\",\n    \"Fotocamera doppia con grandangolo (posteriore)\",\n    \"Double appareil photo grand angle arrière\",\n    \"Zadní duální širokoúhlý fotoaparát\",\n    \"Çift Geniş Kamera Arka Yüzü\",\n    \"Laajakulmainen kaksoistakakamera\",\n    \"Rückseitige Dual-Weitwinkelkamera\",\n    \"बैक ड्युअल वाइड कैमरा\",\n    \"后置双广角镜头\",\n    \"Câmera Dupla Grande-Angular Traseira\",\n    \"後置雙廣角相機\",\n    \"กล้องคู่ด้านหลังมุมกว้าง\",\n    \"Kamera Lebar Belakang Ganda\",\n    \"Dobbelt vidvinkelkamera bak\",\n    \"Camera kép rộng mặt sau\",\n    \"Cámara trasera dual con gran angular\",\n    \"背面デュアル広角カメラ\",\n    \"Stražnja dvostruka široka kamera\"\n];\n\nconst backCameraLocalizations: string[] = [\n    \"후면 카메라\",\n    \"後置相機\",\n    \"Задна камера\",\n    \"後置鏡頭\",\n    \"Camera mặt sau\",\n    \"Hátoldali kamera\",\n    \"Cámara trasera\",\n    \"Back Camera\",\n    \"Kamera på baksidan\",\n    \"Πίσω κάμερα\",\n    \"Bagsidekamera\",\n    \"Zadná kamera\",\n    \"Fotocamera (posteriore)\",\n    \"Câmara traseira\",\n    \"מצלמה אחורית\",\n    \"Takakamera\",\n    \"Rückkamera\",\n    \"Caméra arrière\",\n    \"Zadní fotoaparát\",\n    \"Артқы камера\",\n    \"Tylny aparat\",\n    \"बैक कैमरा\",\n    \"Hátsó kamera\",\n    \"Camera aan achterzijde\",\n    \"Kamera Belakang\",\n    \"Câmera Traseira\",\n    \"Stražnja kamera\",\n    \"الكاميرا الخلفية\",\n    \"Càmera posterior\",\n    \"Fotocamera posteriore\",\n    \"Càmera del darrere\",\n    \"กล้องด้านหลัง\",\n    \"Cameră spate\",\n    \"Kamera, bagside\",\n    \"背面カメラ\",\n    \"Задня камера\",\n    \"Arka Kamera\",\n    \"后置相机\",\n    \"Камера на задней панели\",\n    \"后置镜头\",\n    \"Kamera bak\",\n    \"Задняя камера\",\n    \"Aparat tylny\",\n    \"Kamera på baksiden\",\n    \"Câmera de Trás\"\n];\n\nexport const isAndroidDevice = () =>\n{\n    const u = navigator.userAgent;\n    return !!u.match( /Android/i );\n};\n\nexport const isIOSDevice = () =>\n{\n    const u = navigator.userAgent;\n    return !!u.match( /iPhone/i );\n};\n\nexport const isMobileDevice = () =>\n{\n    return isAndroidDevice() || isIOSDevice();\n};\n\nfunction isBackCameraLabel( label: string ): boolean\n{\n    const lowercaseLabel = label.toLowerCase();\n\n    return backCameraKeywords.some( keyword => lowercaseLabel.includes( keyword ) );\n}\n\nexport class SelectedCamera\n{\n    readonly deviceId: string;\n\n    readonly groupId: string;\n\n    readonly facing: PreferredCameraType;\n\n    readonly label: string;\n\n    constructor( mdi: MediaDeviceInfo, facing: PreferredCameraType, label?: string )\n    {\n        this.deviceId = mdi.deviceId;\n        this.facing = facing;\n        this.groupId = mdi.groupId;\n\n\n        // apply custom label\n        if ( label )\n        {\n            this.label = label;\n        }\n        else\n        {\n            this.label = mdi.label;\n\n        }\n    }\n}\n\nexport interface CameraDevices\n{\n    frontCameras: SelectedCamera[];\n    backCameras: SelectedCamera[];\n}\n\nexport async function getCameraDevices(): Promise< CameraDevices >\n{\n    const frontCameras: SelectedCamera[] = [];\n    const backCameras: SelectedCamera[] = [];\n\n    let devices = await navigator.mediaDevices.enumerateDevices();\n    // if permission is not given, label of video devices will be empty string\n    if ( devices.filter( device => device.kind === \"videoinput\" ).every( device => device.label === \"\" ) )\n    {\n        const stream = await navigator.mediaDevices.getUserMedia\n        (\n            {\n                video:\n                    {\n                        facingMode: { ideal: \"environment\" }\n                    },\n                audio: false\n            }\n        );\n\n        // enumerate devices again - now the label field should be non-empty, as we have a stream active\n        // (even if we didn't get persistent permission for camera)\n        devices = await navigator.mediaDevices.enumerateDevices();\n\n        // close the stream, as we don't need it anymore\n        stream.getTracks().forEach( track => track.stop() );\n    }\n\n    const cameras = devices.filter( device => device.kind === \"videoinput\" );\n\n    let backCameraIterator = 0;\n    let frontCameraIterator = 0;\n\n    for ( const camera of cameras )\n    {\n        // phone back camera\n        if ( isBackCameraLabel( camera.label ) )\n        {\n            backCameraIterator++;\n            let backLabel: string | undefined = undefined;\n            // we apply a custom label on Android devices\n            if ( isAndroidDevice() )\n            {\n                backLabel = `Back camera ${backCameraIterator}`;\n            }\n            backCameras.push( new SelectedCamera( camera, PreferredCameraType.BackFacingCamera, backLabel ) );\n        }\n        else\n        // front camera or non-phone camera\n        {\n            frontCameraIterator++;\n            let frontLabel: string | undefined = undefined;\n            if ( isAndroidDevice() )\n            {\n                // we apply a custom label on Android devices\n                frontLabel = `Front camera ${frontCameraIterator}`;\n            }\n            frontCameras.push( new SelectedCamera( camera, PreferredCameraType.FrontFacingCamera, frontLabel ) );\n        }\n    }\n\n    return {\n        frontCameras,\n        backCameras\n    };\n}\n\nexport async function selectCamera(\n    cameraId:               string | null,\n    preferredCameraType:    PreferredCameraType\n): Promise< SelectedCamera | null >\n{\n    const { frontCameras, backCameras } = await getCameraDevices();\n\n    if ( !frontCameras.length && !backCameras.length )\n    {\n        return null;\n    }\n\n    // Picks camera based on the provided device id, if user provided device id up front\n    if ( cameraId )\n    {\n        let cameraDevice: SelectedCamera | undefined;\n\n        cameraDevice = frontCameras.find( device => device.deviceId === cameraId );\n\n        if ( !cameraDevice )\n        {\n            cameraDevice = backCameras.find( device => device.deviceId === cameraId );\n        }\n\n        return cameraDevice || null;\n    }\n\n    let cameraDevice: SelectedCamera | null = null;\n\n    if ( isIOSDevice() && preferredCameraType === PreferredCameraType.BackFacingCamera )\n    {\n        // If device is an iOS and preferred camera is back facing\n        // pick camera which matches the localized 'Back Dual Wide Camera'\n\n        let selectedCamera = backCameras.find\n        ( camera => backDualWideCameraLocalizations.includes( camera.label ) );\n\n        if ( !selectedCamera )\n        {\n            selectedCamera = backCameras.find( camera => backCameraLocalizations.includes( camera.label ) );\n        }\n\n        if ( selectedCamera )\n        {\n            cameraDevice = selectedCamera;\n        }\n    }\n    else if ( isAndroidDevice() && preferredCameraType === PreferredCameraType.BackFacingCamera )\n    {\n        type Candidate = { deviceId: string; score: number };\n        let bestCameraDevice: Candidate = {\n            deviceId: \"\",\n            score: -1,\n        };\n        const calculateScore = ( hasTorch: boolean, hasSingleShot: boolean ) =>\n        {\n            let score = 0;\n            if ( hasTorch ) score++;\n            if ( hasSingleShot ) score++;\n            return score;\n        };\n\n        for ( const backFacingCamera of backCameras )\n        {\n            const mediaStream = await navigator.mediaDevices.getUserMedia(\n                {\n                    video: {\n                        deviceId: backFacingCamera.deviceId,\n                        width: 1920,\n                        height: 1080,\n                    },\n                }\n            );\n\n            if ( \"getCapabilities\" in mediaStream.getVideoTracks()[0] )\n            {\n                const capabilities = mediaStream.getVideoTracks()[0].getCapabilities();\n\n                // @ts-expect-error Property will exist on object\n                const hasTorch = Boolean( capabilities.torch );\n\n                // @ts-expect-error Property will exist on object\n                const hasSingleShot = ( capabilities.focusMode as string[] )?.includes( \"single-shot\" );\n\n                const cameraScore = calculateScore( hasTorch, hasSingleShot );\n\n                if ( cameraScore > bestCameraDevice.score )\n                {\n                    bestCameraDevice = {\n                        deviceId: backFacingCamera.deviceId,\n                        score: cameraScore,\n                    };\n                }\n            }\n\n            closeStreamTracks( mediaStream );\n        }\n\n        cameraDevice = backCameras.find( camera => camera.deviceId === bestCameraDevice.deviceId ) || null;\n    }\n\n    if ( cameraDevice === null )\n    {\n        // Case where camera device is still not found, so we revert back to \"old\" logic\n\n        // Decide from which array the camera will be selected\n        let cameraPool: SelectedCamera[] = ( backCameras.length > 0 ? backCameras : frontCameras );\n\n        // If there is at least one back facing camera and user prefers back facing camera, use that as a selection pool\n        if ( preferredCameraType === PreferredCameraType.BackFacingCamera && backCameras.length > 0 )\n        {\n            cameraPool = backCameras;\n        }\n\n        // If there is at least one front facing camera and is preferred by user, use that as a selection pool\n        if ( preferredCameraType === PreferredCameraType.FrontFacingCamera && frontCameras.length > 0 )\n        {\n            cameraPool = frontCameras;\n        }\n\n        // Sort camera pool by label\n        cameraPool = cameraPool.sort( ( camera1, camera2 ) => camera1.label.localeCompare( camera2.label ) );\n\n        // Check if cameras are labeled with resolution information, take the higher-resolution one in that case\n        // Otherwise pick the last camera (Samsung wide on most Android devices)\n        let selectedCameraIndex = cameraPool.length - 1;\n\n        // Gets camera resolutions from the device name, if exists\n        const cameraResolutions: number[] = cameraPool.map\n        (\n            camera =>\n            {\n                const regExp = RegExp( /\\b([0-9]+)MP?\\b/, \"i\" );\n                const match = regExp.exec( camera.label );\n                if ( match !== null )\n                {\n                    return parseInt( match[1], 10 );\n                }\n                else\n                {\n                    return NaN;\n                }\n            }\n        );\n\n        // Picks camera  based on highest resolution in the name\n        if ( !cameraResolutions.some( cameraResolution => isNaN( cameraResolution ) ) )\n        {\n            selectedCameraIndex = cameraResolutions.lastIndexOf( Math.max( ...cameraResolutions ) );\n        }\n\n        return cameraPool[ selectedCameraIndex ];\n    }\n\n    return cameraDevice;\n}\n\nconst closeStreamTracks = ( stream: MediaStream ) =>\n{\n    const tracks = stream.getTracks();\n    for ( const track of tracks )\n    {\n        track.stop();\n    }\n};\n\n/**\n * Bind camera device to video feed (HTMLVideoElement).\n *\n * This function will return `true` in case that video feed of camera device has been flipped,\n * and `false` otherwise.\n *\n * @param camera                Camera device which should be binded with the video element.\n * @param videoFeed             HTMLVideoElement to which camera device should be binded.\n * @param preferredCameraType   Enum representing whether to use front facing or back facing camera.\n */\nexport async function bindCameraToVideoFeed(\n    camera:                 SelectedCamera,\n    videoFeed:              HTMLVideoElement,\n    preferredCameraType:    PreferredCameraType = PreferredCameraType.BackFacingCamera,\n): Promise< boolean >\n{\n    const constraints: MediaStreamConstraints =\n    {\n        audio: false,\n        video:\n        {\n            width:\n            {\n                min: 640,\n                ideal: 1920,\n                max: 1920,\n            },\n            height:\n            {\n                min: 480,\n                ideal: 1080,\n                max: 1080\n            }\n        }\n    };\n\n    if ( camera.deviceId === \"\" )\n    {\n        const isPreferredBackFacing = preferredCameraType === PreferredCameraType.BackFacingCamera;\n        ( constraints.video as MediaTrackConstraints ).facingMode =\n        {\n            ideal: isPreferredBackFacing ? \"environment\" : \"user\"\n        };\n    }\n    else\n    {\n        ( constraints.video as MediaTrackConstraints ).deviceId =\n        {\n            exact: camera.deviceId\n        };\n    }\n\n    const stream = await navigator.mediaDevices.getUserMedia( constraints );\n    videoFeed.controls = false;\n    videoFeed.srcObject = stream;\n\n    let cameraFlipped = false;\n    if ( camera.facing === PreferredCameraType.FrontFacingCamera )\n    {\n        cameraFlipped = true;\n    }\n\n    return cameraFlipped;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { CapturedFrame } from \"./FrameCapture\";\nimport { MetadataCallbacks } from \"./MetadataCallbacks\";\nimport { WasmType } from \"./WasmType\";\n\n// ============================================ /\n// DATA STRUCTURES                              /\n// ============================================ /\n\n/**\n * Specifies the orientation of the contents of the image.\n * This is important for some recognizers, especially when\n * performing recognition on the mobile device.\n */\nexport enum ImageOrientation\n{\n    /**\n     * Image contents are rotated 90 degrees left.\n     * This usually happens on mobile devices when capturing image while\n     * device is held in \"portrait\" orientation, while device camera sensor\n     * is mounted horizontally (i.e. produced image is in \"landscape\" orienation).\n     */\n    RotatedLeft90 = 0,\n\n    /**\n     * Image contents are not rotated in any manner.\n     * This is the default for images captured using HTML canvas, as\n     * used in FrameCapture class.\n     * This orientation also usually happens on mobile devices when capturing\n     * image while device is held in \"landscape\" orientation, while device\n     * camera sensor is mounted horizontally (i.e. also in same orientation).\n     */\n    NoRotation,\n\n    /**\n     * Image contents are rotated 90 degrees right.\n     * This usually happens on mobile devices when capturing image while\n     * device is held in \"reverse-portrait\" orientation, while device camera sensor\n     * is mounted horizontally (i.e. produced image is in \"landscape\" orienation).\n     */\n    RotatedRight90,\n\n    /**\n     * Image contents are rotated 180 degrees, i.e. image contents are \"upside down\".\n     * This usually happens on mobile devices when capturing image while\n     * device is held in \"reverse-landscape\" orientation, while device camera sensor\n     * is mounted horizontally (i.e. produced image is in \"landscape\" orienation).\n     */\n    Rotated180\n}\n\n/**\n * Specifies the state of the recognition result.\n */\nexport enum RecognizerResultState\n{\n    /** Nothing has been recognized. */\n    Empty,\n    /** Something has been recognized, but some mandatory data is still missing. */\n    Uncertain,\n    /** All required data has been recognized. */\n    Valid,\n    /** Single stage of a multi-stage recognition is finished. */\n    StageValid\n}\n\n/**\n * Specifies an abstract object placed on the WebAssembly heap.\n * Objects placed on the WebAssembly heap are not cleaned up by the\n * garbage collector of the JavaScript engine. The memory used by\n * the object must be cleaned up manually by calling the delete() method.\n */\nexport interface WasmNativeObject\n{\n    /**\n     * Cleans up the object from the WebAssembly heap.\n     */\n    delete(): Promise< void >;\n}\n\n/**\n * Specifies the abstract recognition result.\n */\nexport interface RecognizerResult\n{\n    /** State of the recognition result. See the documentation for RecognizerResultState for more information. */\n    readonly state: RecognizerResultState;\n}\n\n/**\n * Specifies the abstract settings for the Recognizer object.\n */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nexport interface RecognizerSettings\n{}\n/* eslint-enable @typescript-eslint/no-empty-interface */\n\n/**\n * Specifies an abstract Recognizer object. The Recognizer object is the basic unit of processing.\n */\nexport interface Recognizer extends WasmNativeObject\n{\n    /**\n     * Name of this recognizer.\n     */\n    readonly recognizerName: string;\n\n    /**\n     * Returns the currently applied settings to the specific recognizer.\n     */\n    currentSettings(): Promise< RecognizerSettings >;\n\n    /**\n     * Applies the new settings to the specific recognizer.\n     * Note: if the recognizer is associated with RecognizerRunner, this method will fail.\n     * @param newSettings New settings to be applied to the recognizer.\n     */\n    updateSettings( newSettings: RecognizerSettings ): Promise< void >;\n\n    /**\n     * Returns the current result of the recognition.\n     */\n    getResult(): Promise< RecognizerResult >;\n\n    /**\n     * Returns the JSON representation of the recognizer's result.\n     * The JSON will be digitally signed and can be used to verify\n     * that the result was provided by the SDK and that it hasn't been\n     * manually altered.\n     * If the SDK does not have this feature compiled into the WASM, this\n     * method will return null.\n     */\n    toSignedJSON(): Promise< SignedPayload | null >;\n}\n\n/**\n * Specifies a main Recognizer orchestrator object.\n */\nexport interface RecognizerRunner extends WasmNativeObject\n{\n    /**\n     * Array of recognizer objects that are currently associated with the RecognizerRunner.\n     */\n    recognizers: Array< Recognizer >;\n\n    /**\n     * Starts the recognition of the given image using recognizer objects currently associated\n     * with the RecognizerRunner.\n     * @param image Image to be processed.\n     * @returns Promise that will resolve when image processing finishes.\n     */\n    processImage( image: CapturedFrame ): Promise< RecognizerResultState >;\n\n    /**\n     * Reconfigures the instance of RecognizerRunner with new recognizers. The currently associated\n     * recognizer objects are un-associated from this RecognizerRunner and are elligible for calling\n     * the updateSettings() method on them after that.\n     * @param recognizers Array of recognizer objects that should be associated with the RecognizerRunner.\n     * @param allowMultipleResults Whether or not it is allowed to return multiple results from single image.\n     *        See README.md for more details about this option.\n     */\n    reconfigureRecognizers( recognizers: Array< Recognizer >, allowMultipleResults: boolean ): Promise< void >;\n\n    /**\n     * Sets the new callbacks for obtaining recognition event. Make sure you call this method while image processing is\n     * not in progress, otherwise you will have undefined behaviour.\n     * @param metadataCallbacks Callback functions that will be called when certain recognition events occur.\n     *\n     * For more information, check the documentation of MetadataCallbacks class.\n     */\n    setMetadataCallbacks( metadataCallbacks: MetadataCallbacks ): Promise< void >;\n\n    /**\n     * Resets the state of all recognizers in current recognition chain, i.e. deletes the cached data from multiple\n     * recognitions.\n     * @param hardReset If set to false, multi-side recognizers will not be reset. If set to true, all recognizers\n     *        will be reset.\n     */\n    resetRecognizers( hardReset: boolean ): Promise< void >;\n\n    /**\n     * If enabled, recognizers will be instructed to only perform object detection, but not the entire\n     * recognition process. This is useful for testing your implementations of MetadataCallbacks without\n     * the need for the entire process to complete. Also, VideoRecognizers sets this to true only if in\n     * DetectionTest mode of video recognition.\n     * @param detectionOnly Should recognizers perform only object detection.\n     */\n    setDetectionOnlyMode( detectionOnly: boolean ): Promise< void >;\n\n    /**\n     * Sets whether camera preview displaying the image being recognized is being mirrored horizontally.\n     * If enabled, coordinates returned via metadatacallbacks will be adjusted accordingly due to the\n     * image being processed being different of image being displayed.\n     * The camera preview is usually mirrored when using front-facing camera.\n     * @param mirrored Whether or not metadatacallbacks should adjust coordinates for mirrored image.\n     */\n    setCameraPreviewMirrored( mirrored: boolean ): Promise< void >;\n\n    /**\n     * Sets a url to the ping proxy service. Ping proxy is a server which is hosted on you own infrastructure\n     * and forwards ping messages from SDK to the Microblink servers. That way web application which has\n     * integrated this SDK will only directly communicate with your own servers.\n     * In order to use this service, you need a `ALLOW PING PROXY` permission in your license. If permission is\n     * not presented in the license, this method will throw an error.\n     * @param url Url of a server where ping proxy is hosted.\n     */\n    setPingProxyUrl( url: string ): Promise< void >;\n\n    /**\n     * Sets custom data to be sent with ping message. This data will be sent inside \"extra\" field in ping message.\n     * Data should be in key-value format, where key is a string and value is a string.\n     * @param data Data to be sent with ping message.\n     */\n    setPingData( data: Record<string, string> ): Promise<void>;\n}\n\n/**\n * @hidden\n * A proxy object for accessing the WebAssembly module.\n * Only for internal use. It's API may change in the future without any notice.\n * Please do not invoke methods directly on the instance of this interface.\n */\nexport interface WasmModuleProxy\n{\n    createRecognizerRunner\n    (\n        recognizers:            Array< Recognizer >,\n        allowMultipleResults:   boolean,\n        metadataCallbacks:      MetadataCallbacks\n    ): Promise< RecognizerRunner >;\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    newRecognizer( className: string, ...constructorArgs: any[] ): Promise< Recognizer >;\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * Specifies a main object that is used for communication with the WebAssembly module.\n * This object is usually given as a parameter to functions that interop with the WebAssembly module.\n * You can obtain an instance of this object after a promise from MicroblinkSDK.loadWasmModule is successfully\n * resolved.\n */\nexport interface WasmSDK\n{\n    /**\n     * @hidden\n     * A proxy object to the WebAssmebly module.\n     * Only for internal use. It's API may change in the future without any notice.\n     */\n    readonly mbWasmModule: WasmModuleProxy;\n\n    readonly mbWasmWorker: Worker\n\n    delete: () => void;\n\n    getProductIntegrationInfo: () => Promise<ProductIntegrationInfo>;\n\n    /**\n     * The type of the WASM that was actually loaded.\n     */\n    loadedWasmType: WasmType;\n\n    showOverlay: boolean;\n}\n\n/**\n * Specifies a date object, as parsed from some documents.\n * Unlike JavaScript Date object, it does not depend on time zone.\n */\nexport interface MBDate\n{\n    /** Day in month. */\n    readonly day: number;\n\n    /** Month in year. */\n    readonly month: number;\n\n    /** Year */\n    readonly year: number;\n\n    /** Original string on the document from which date was parsed. */\n    readonly originalString: string;\n\n    /** Indicates whether date was parsed successfully. */\n    readonly successfullyParsed: boolean;\n\n    /** Indicates whether object is empty. Note that it is possible to successfully parse an empty date. */\n    readonly empty: boolean;\n}\n\n/**\n * Specifies a digital signature of the specific recognizer result.\n */\nexport interface SignedPayload\n{\n    /** The digital signature payload. */\n    readonly payload: string;\n\n    /** The digital signature of the payload. */\n    readonly signature: string;\n\n    /** Version of the digital signature. */\n    readonly signatureVersion: string;\n}\n\n/**\n * Describes a structure containing information about product integration.\n */\nexport interface ProductIntegrationInfo\n{\n    readonly userId: string;\n\n    readonly licenseId: string;\n\n    readonly licensee: string;\n\n    readonly productVersion: string;\n\n    readonly platform: string;\n\n    readonly device: string;\n\n    readonly packageName: string;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * Checks if browser is supported by the SDK. The minimum requirements for the browser is\n * the support for WebAssembly. If your browser does not support executing WebAssembly,\n * this function will return `false`.\n */\nexport function isBrowserSupported(): boolean\n{\n    // based on https://stackoverflow.com/a/47880734\n    try\n    {\n        if ( typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\" )\n        {\n            const module = new WebAssembly.Module( Uint8Array.of( 0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00 ) );\n            if ( module instanceof WebAssembly.Module )\n                return new WebAssembly.Instance( module ) instanceof WebAssembly.Instance;\n        }\n    }\n    catch ( ignored )\n    {\n        return false;\n    }\n    return false;\n}\n\n/**\n * Check if current browser is in-app / embedded.\n * Detects Instagram, Facebook, LinkedIn, Twitter, WeChat, Whatsapp, and Tiktok.\n * @returns Boolean whether the browser is in-app or not\n */\nexport function isInAppBrowser(): boolean\n{\n    const inAppRegex = /(instagram|fbav|linkedinapp|twitter|micromessenger|whatsapp|tiktok)[/\\s]?([\\w.]*)/i;\n    const userAgent = navigator.userAgent || navigator.vendor;\n\n    return !!inAppRegex.exec( userAgent );\n}\n\n/**\n * Check if browser supports ES6, which is prerequisite for this SDK to execute.\n *\n * IMPORTANT: it's not possible to run this function from MicroblinkSDK if browser doesn't support\n * ES6 since this file won't be able to load.\n *\n * This function is here as a placeholder so it can be copied to standalone JS file or directly into 'index.html'.\n */\n// export function isES6Supported(): boolean\n// {\n//     if ( typeof Symbol === \"undefined\" )\n//     {\n//         return false;\n//     }\n//     try\n//     {\n//         eval( \"class Foo {}\" );\n//         eval( \"var bar = (x) => x+1\" );\n//     }\n//     catch ( e )\n//     {\n//         return false;\n//     }\n//     return true;\n// }\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n\n/**\n * The side of the document.\n */\nexport enum DocumentSide\n{\n    Front,\n    Back,\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { SDKError } from \"./SDKError\";\nimport { ImageOrientation } from \"./DataStructures\";\nimport * as ErrorTypes from \"./ErrorTypes\";\n\n// ============================================ /\n// Frame capture and camera management support. /\n// ============================================ /\n\nlet canvas: HTMLCanvasElement;\nlet ctx: CanvasRenderingContext2D;\n\n\n/**\n * Represents a captured frame from HTMLVideoElement.\n */\nexport class CapturedFrame\n{\n    /** Instance of ImageData object - contains pixels and metadata about the captured image. */\n    readonly imageData: ImageData;\n\n    /** Orientation of the captured frame */\n    readonly orientation: ImageOrientation;\n\n    /** Indicates whether captured frame originated from still image or video stream. */\n    readonly videoFrame: boolean;\n\n    constructor( imageData: ImageData, orientation: ImageOrientation, videoFrame: boolean )\n    {\n        // workaround for memory leak: https://github.com/ivancuric/memory-leak-repro\n        const fakeImageData = {\n            data: imageData.data,\n            width: imageData.width,\n            height: imageData.height,\n            colorSpace: imageData.colorSpace,\n        } as ImageData;\n\n        this.imageData = fakeImageData;\n        this.orientation = orientation;\n        this.videoFrame = videoFrame;\n    }\n}\n\n\n/**\n * Captures a frame from any CanvasImageSource, such as HTMLVideoElement or HTMLImageElement.\n * @param imageSource image source from which frame should be captured\n * @returns instance of CapturedFrame\n */\nexport function captureFrame( imageSource: CanvasImageSource ): CapturedFrame\n{\n    let imageWidth: number;\n    let imageHeight: number;\n    let videoFrame = false;\n    if ( imageSource instanceof HTMLVideoElement )\n    {\n        imageWidth = imageSource.videoWidth;\n        imageHeight = imageSource.videoHeight;\n        videoFrame = true;\n    }\n    else if ( imageSource instanceof HTMLImageElement )\n    {\n        imageWidth = imageSource.naturalWidth;\n        imageHeight = imageSource.naturalHeight;\n    }\n    else if ( imageSource instanceof SVGImageElement )\n    {\n        throw new SDKError( ErrorTypes.frameCaptureErrors.svgUnsupported );\n    }\n    else if ( imageSource instanceof VideoFrame )\n    {\n        // eslint is being stupid here, it's a VideoFrame object\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        imageWidth = imageSource.displayWidth;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        imageHeight = imageSource.displayHeight;\n    }\n    else\n    {\n        imageWidth = imageSource.width;\n        imageHeight = imageSource.height;\n    }\n\n    canvas = canvas || document.createElement( \"canvas\" );\n\n    if ( canvas.width !== imageWidth && canvas.height !== imageHeight )\n    {\n        canvas.width = imageWidth;\n        canvas.height = imageHeight;\n    }\n\n\n    ctx = ctx || canvas.getContext( \"2d\", { willReadFrequently: true } );\n\n    if ( !ctx )\n    {\n        throw new SDKError( ErrorTypes.frameCaptureErrors.canvasMissing );\n    }\n\n    ctx.drawImage( imageSource, 0, 0, canvas.width, canvas.height );\n\n    const pixelData = ctx.getImageData( 0, 0, canvas.width, canvas.height );\n\n    return new CapturedFrame(\n        pixelData,\n        // TODO: https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation\n        // or https://developer.mozilla.org/en-US/docs/Web/API/Window/orientation\n        ImageOrientation.NoRotation,\n        videoFrame\n    );\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { SDKError } from \"./SDKError\";\nimport * as ErrorTypes from \"./ErrorTypes\";\n\nexport enum LicenseTokenState\n{\n    Invalid,\n    RequiresServerPermission,\n    Valid\n}\n\nexport interface LicenseUnlockResult\n{\n    readonly allowRemoveDemoOverlay         : boolean;\n    readonly allowRemoveProductionOverlay   : boolean;\n    readonly isTrial                        : boolean;\n    readonly licenseId                      : string;\n    readonly licensee                       : string;\n    readonly applicationIds                 : Array< string >;\n    readonly packageName                    : string;\n    readonly sdkName                        : string;\n    readonly sdkVersion                     : string;\n    readonly unlockResult                   : LicenseTokenState;\n    readonly userId                         : string;\n    readonly licenseError                   : string;\n}\n\nexport enum LicenseErrorType {\n    LicenseTokenStateInvalid              = \"LICENSE_TOKEN_STATE_INVALID\",\n    NetworkError                          = \"NETWORK_ERROR\",\n    RemoteLock                            = \"REMOTE_LOCK\",\n    PermissionExpired                     = \"PERMISSION_EXPIRED\",\n    PayloadCorrupted                      = \"PAYLOAD_CORRUPTED\",\n    PayloadSignatureVerificationFailed    = \"PAYLOAD_SIGNATURE_VERIFICATION_FAILED\",\n    IncorrectTokenState                   = \"INCORRECT_TOKEN_STATE\"\n}\n\nconst baltazar = \"https://baltazar.microblink.com/api/v2/status/check\";\n\ninterface BaltazarRequest\n{\n    readonly licenseId     : string;\n    readonly licensee      : string;\n    readonly applicationIds: Array< string >;\n    readonly packageName   : string;\n    readonly platform      : string;\n    readonly sdkName       : string;\n    readonly sdkVersion    : string;\n}\n\nfunction toBaltazarRequest( unlockResult: LicenseUnlockResult ): BaltazarRequest\n{\n    return {\n        licenseId     : unlockResult.licenseId,\n        licensee      : unlockResult.licensee,\n        applicationIds: unlockResult.applicationIds,\n        packageName   : unlockResult.packageName,\n        platform      : \"Browser\",\n        sdkName       : unlockResult.sdkName,\n        sdkVersion    : unlockResult.sdkVersion\n    };\n}\n\nfunction shouldShowOverlay(\n    isTrial: boolean,\n    allowRemoveDemoOverlay: boolean,\n    allowRemoveProductionOverlay: boolean\n): boolean\n{\n    if ( isTrial && allowRemoveDemoOverlay )\n    {\n        return false;\n    }\n\n    if ( !isTrial && allowRemoveProductionOverlay )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nexport enum ServerPermissionSubmitResultStatus\n{\n    Ok = 0,\n    NetworkError,\n    RemoteLock,\n    PermissionExpired,\n    PayloadCorrupted,\n    PayloadSignatureVerificationFailed,\n    IncorrectTokenState\n}\n\nexport interface ServerPermissionSubmitResult\n{\n    readonly status: ServerPermissionSubmitResultStatus;\n    readonly lease: number;\n    readonly networkErrorDescription?: string;\n}\n\nexport interface UnlockResult\n{\n    readonly error: SDKError | null;\n    readonly lease?: number;\n    readonly showOverlay?: boolean;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any,\n                  @typescript-eslint/explicit-module-boundary-types,\n                  @typescript-eslint/no-unsafe-member-access,\n                  @typescript-eslint/no-unsafe-call\n*/\nexport async function obtainNewServerPermission\n(\n    unlockResult: LicenseUnlockResult,\n    wasmModule  : any\n): Promise< ServerPermissionSubmitResult >\n{\n    // request permission from Baltazar service\n    try\n    {\n        const response = await fetch\n        (\n            baltazar,\n            {\n                method: \"POST\",\n                headers:\n                {\n                    \"Content-Type\": \"application/json\"\n                },\n                cache: \"no-cache\",\n                body: JSON.stringify( toBaltazarRequest( unlockResult ) )\n            }\n        );\n        if ( response.ok )\n        {\n            const serverPermission = ( await response.text() ).toString();\n            const result = wasmModule.submitServerPermission( serverPermission ) as ServerPermissionSubmitResult;\n            return result;\n        }\n        else\n        {\n            return {\n                status: ServerPermissionSubmitResultStatus.NetworkError,\n                lease: 0,\n                networkErrorDescription: `Server responded with status ${response.status}`\n            };\n        }\n    }\n    catch( error )\n    {\n        return {\n            status: ServerPermissionSubmitResultStatus.NetworkError,\n            lease: 0,\n            networkErrorDescription: `Unexpected error: ${JSON.stringify( error )}`\n        };\n    }\n}\n\nexport async function unlockWasmSDK\n(\n    licenseKey       : string,\n    allowHelloMessage: boolean,\n    userId           : string,\n    wasmModule       : any\n): Promise< UnlockResult >\n{\n    const unlockResult = wasmModule.initializeWithLicenseKey\n    (\n        licenseKey,\n        userId,\n        allowHelloMessage\n    ) as LicenseUnlockResult;\n\n    switch( unlockResult.unlockResult )\n    {\n        case LicenseTokenState.Invalid:\n            return {\n                error: new SDKError(\n                    {\n                        ...ErrorTypes.licenseErrors.licenseInvalid,\n                        message: unlockResult.licenseError\n                    },\n                    {\n                        type: LicenseErrorType.LicenseTokenStateInvalid,\n                    }\n                ),\n            };\n        case LicenseTokenState.Valid:\n            return {\n                error: null,\n                showOverlay: shouldShowOverlay(\n                    unlockResult.isTrial,\n                    unlockResult.allowRemoveDemoOverlay,\n                    unlockResult.allowRemoveProductionOverlay\n                )\n            };\n        case LicenseTokenState.RequiresServerPermission:\n        {\n            const serverPermission = await obtainNewServerPermission( unlockResult, wasmModule );\n            switch ( serverPermission.status )\n            {\n                case ServerPermissionSubmitResultStatus.Ok:\n                    return {\n                        error: null,\n                        lease: serverPermission.lease\n                    };\n                case ServerPermissionSubmitResultStatus.NetworkError:\n                {\n                    let additionalInfo = \"\";\n                    if ( serverPermission.networkErrorDescription )\n                    {\n                        additionalInfo = \" \" + serverPermission.networkErrorDescription;\n                    }\n\n                    return {\n                        error: new SDKError(\n                            {\n                                ...ErrorTypes.licenseErrors.licenseNetworkError,\n                                message: \"There has been a network error while obtaining the server permission!\"\n                                + additionalInfo\n                            },\n                            {\n                                type: LicenseErrorType.NetworkError,\n                            }\n                        )\n                    };\n                }\n                case ServerPermissionSubmitResultStatus.RemoteLock:\n                    return {\n                        error: new SDKError(\n                            ErrorTypes.licenseErrors.licenseRemoteLocked,\n                            {\n                                type: LicenseErrorType.RemoteLock,\n                            }\n                        ),\n                        lease: serverPermission.lease\n                    };\n                case ServerPermissionSubmitResultStatus.PermissionExpired:\n                    return {\n                        error: new SDKError(\n                            ErrorTypes.licenseErrors.licensePermissionExpired,\n                            {\n                                type: LicenseErrorType.PermissionExpired\n                            }\n                        ),\n                        lease: serverPermission.lease\n                    };\n                case ServerPermissionSubmitResultStatus.PayloadCorrupted:\n                    return {\n                        error: new SDKError(\n                            ErrorTypes.licenseErrors.licensePayloadCorrupted,\n                            {\n                                type: LicenseErrorType.PayloadCorrupted\n                            }\n                        ),\n                        lease: serverPermission.lease\n                    };\n                case ServerPermissionSubmitResultStatus.PayloadSignatureVerificationFailed:\n                    return {\n                        error: new SDKError(\n                            ErrorTypes.licenseErrors.licensePayloadVerificationFailed,\n                            {\n                                type: LicenseErrorType.PayloadSignatureVerificationFailed\n                            }\n                        ),\n                        lease: serverPermission.lease\n                    };\n                case ServerPermissionSubmitResultStatus.IncorrectTokenState:\n                    return {\n                        error: new SDKError(\n                            ErrorTypes.licenseErrors.licenseTokenStateIncorrect,\n                            {\n                                type: LicenseErrorType.IncorrectTokenState\n                            }\n                        ),\n                        lease: serverPermission.lease\n                    };\n            }\n        }\n    }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/explicit-module-boundary-types,\n                 @typescript-eslint/no-unsafe-member-access,\n                 @typescript-eslint/no-unsafe-call\n*/\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { Point, Quadrilateral } from \"./Geometry\";\n\n/**\n * Interface representing possible events that can occur during image processing.\n * All functions in this interface are optional and will be called only if they are\n * implemented.\n */\nexport interface MetadataCallbacks\n{\n    /**\n     * Called when recognition process wants to display some debug text information.\n     * @param debugTest Debug text information to be displayed.\n     */\n    onDebugText?( debugTest: string ): void\n\n    /**\n     * Called when all recognizers in RecognizerRunner have failed to detect anything on the image.\n     */\n    onDetectionFailed?(): void\n\n    /**\n     * Called when recognition process wants to display some quadrilateral.\n     * @param quad Quadrilateral to be displayed.\n     */\n    onQuadDetection?( quad: DisplayableQuad ): void\n\n    /**\n     * Called when recognition process wants to display some points.\n     * @param pointSet Points to be displayed.\n     */\n    onPointsDetection?( pointSet: DisplayablePoints ): void\n\n    /**\n     * Called when first side recognition with the multi-side recognizer completes.\n     */\n    onFirstSideResult?(): void\n}\n\n/**\n * Detection status of the specific detected object.\n */\nexport enum DetectionStatus\n{\n    /** Detection has failed. */\n    Failed,\n    /** Document has been detected. */\n    Success,\n    /** Document has been detected but the camera is too far from the document. */\n    CameraTooFar,\n    /** Document has been detected but the camera is too close to the document. */\n    CameraTooClose,\n    /** Document has been detected but the camera’s angle is too steep. */\n    CameraAngleTooSteep,\n    /** Document has been detected but the document is too close to the camera edge. */\n    DocumentTooCloseToCameraEdge,\n    /** Only part of the document is visible. */\n    DocumentPartiallyVisible,\n    /** Fallback detection was successful (PhotoPay specific). */\n    FallbackSuccess\n}\n\n/**\n * Interface representing any displayable object.\n */\nexport interface Displayable\n{\n    /** Detection status of the displayable object. */\n    detectionStatus: DetectionStatus\n\n    /**\n     * 3x3 transformation matrix from the image's coordinate system to view's coordinate system.\n     */\n    transformMatrix: Float32Array\n}\n\n/**\n * Interface representing quadrilateral in image.\n */\nexport interface DisplayableQuad extends Displayable, Quadrilateral\n{}\n\n/**\n * Interface representing list of points in image.\n */\nexport interface DisplayablePoints extends Displayable\n{\n    /** Array of points */\n    points: Point[]\n}\n","export class AbortError extends Error {\n\tconstructor() {\n\t\tsuper('Throttled function aborted');\n\t\tthis.name = 'AbortError';\n\t}\n}\n\nexport default function pThrottle({limit, interval, strict}) {\n\tif (!Number.isFinite(limit)) {\n\t\tthrow new TypeError('Expected `limit` to be a finite number');\n\t}\n\n\tif (!Number.isFinite(interval)) {\n\t\tthrow new TypeError('Expected `interval` to be a finite number');\n\t}\n\n\tconst queue = new Map();\n\n\tlet currentTick = 0;\n\tlet activeCount = 0;\n\n\tfunction windowedDelay() {\n\t\tconst now = Date.now();\n\n\t\tif ((now - currentTick) > interval) {\n\t\t\tactiveCount = 1;\n\t\t\tcurrentTick = now;\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (activeCount < limit) {\n\t\t\tactiveCount++;\n\t\t} else {\n\t\t\tcurrentTick += interval;\n\t\t\tactiveCount = 1;\n\t\t}\n\n\t\treturn currentTick - now;\n\t}\n\n\tconst strictTicks = [];\n\n\tfunction strictDelay() {\n\t\tconst now = Date.now();\n\n\t\tif (strictTicks.length < limit) {\n\t\t\tstrictTicks.push(now);\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst earliestTime = strictTicks.shift() + interval;\n\n\t\tif (now >= earliestTime) {\n\t\t\tstrictTicks.push(now);\n\t\t\treturn 0;\n\t\t}\n\n\t\tstrictTicks.push(earliestTime);\n\t\treturn earliestTime - now;\n\t}\n\n\tconst getDelay = strict ? strictDelay : windowedDelay;\n\n\treturn function_ => {\n\t\tconst throttled = function (...args) {\n\t\t\tif (!throttled.isEnabled) {\n\t\t\t\treturn (async () => function_.apply(this, args))();\n\t\t\t}\n\n\t\t\tlet timeout;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst execute = () => {\n\t\t\t\t\tresolve(function_.apply(this, args));\n\t\t\t\t\tqueue.delete(timeout);\n\t\t\t\t};\n\n\t\t\t\ttimeout = setTimeout(execute, getDelay());\n\n\t\t\t\tqueue.set(timeout, reject);\n\t\t\t});\n\t\t};\n\n\t\tthrottled.abort = () => {\n\t\t\tfor (const timeout of queue.keys()) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tqueue.get(timeout)(new AbortError());\n\t\t\t}\n\n\t\t\tqueue.clear();\n\t\t\tstrictTicks.splice(0, strictTicks.length);\n\t\t};\n\n\t\tthrottled.isEnabled = true;\n\n\t\tObject.defineProperty(throttled, 'queueSize', {\n\t\t\tget() {\n\t\t\t\treturn queue.size;\n\t\t\t},\n\t\t});\n\n\t\treturn throttled;\n\t};\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport {\n    bindCameraToVideoFeed,\n    PreferredCameraType,\n    selectCamera,\n    SelectedCamera,\n} from \"./CameraUtils\";\n\nimport pThrottle from \"p-throttle\";\n\nimport { RecognizerResultState, RecognizerRunner } from \"./DataStructures\";\n\nimport { ErrorMessages, videoRecognizerErrors } from \"./ErrorTypes\";\n\nimport {\n    BlinkIdMultiSideRecognizerResult\n} from \"../Recognizers/BlinkID/Generic/BlinkIdMultiSideRecognizer\";\nimport { BlinkIdSingleSideRecognizerResult } from \"../Recognizers/BlinkID/Generic/BlinkIdSingleSideRecognizer\";\nimport { captureFrame } from \"./FrameCapture\";\nimport { SDKError } from \"./SDKError\";\n\nexport type BlinkIDResult = BlinkIdSingleSideRecognizerResult | BlinkIdMultiSideRecognizerResult;\n\nconst TARGET_FPS = 15;\n\n\nconst throttle = pThrottle( {\n    limit: 1,\n    interval: Math.round( ( 1 / TARGET_FPS ) * 1000 ),\n    strict: true,\n} );\n\n\n/**\n * Indicates mode of recognition in `VideoRecognizer`.\n */\nexport enum VideoRecognitionMode {\n    /** Normal recognition */\n    Recognition,\n    /** Indefinite scan. Useful for profiling the performance of scan (using `onDebugText` metadata callback) */\n    RecognitionTest,\n    /** Only detection. Useful for profiling the performance of detection (using `onDebugText` metadata callback) */\n    DetectionTest,\n}\n\n/**\n * Invoked when VideoRecognizer finishes the recognition of the video stream.\n * @param {RecognizerResultState} recognitionState  The state of recognition\n * after finishing. If `Empty` or `Uncertain` are returned, this indicates that\n * the scanning was cancelled or timeout has been reached.\n */\nexport type OnScanningDone = ( recognitionState: RecognizerResultState ) => void;\n\nexport type OnFrameProcessed = ( result: BlinkIDResult, frame: ImageData ) => void;\n\n/**\n * A wrapper around `RecognizerRunner` that can use it to perform recognition of\n * video feeds - either from live camera or from predefined video file.\n */\nexport class VideoRecognizer\n{\n    private videoElement: HTMLVideoElement;\n\n    private recognizerRunner: RecognizerRunner;\n\n    deviceId: string | null = null;\n\n    private recognitionCancelRequested = false;\n\n    private recognitionPauseRequested = false;\n\n    private recognitionTimeoutMs = 20000;\n\n    private timeoutStartedAt = 0;\n\n    private currentTimeoutCount = 0;\n\n    private videoRecognitionMode: VideoRecognitionMode =\n        VideoRecognitionMode.Recognition;\n\n    private onScanningDone: OnScanningDone | null = null;\n\n    private onFrameProcessed: OnFrameProcessed | null = null;\n\n    private cameraFlipped = false;\n\n    private threadBusy = false;\n\n    private declare frameCallback:\n        | HTMLVideoElement[\"requestVideoFrameCallback\"]\n        | typeof requestAnimationFrame;\n\n    /**\n     * **Use only if provided factory functions are not well-suited for your use\n     * case.**\n     *\n     * Creates a new `VideoRecognizer` with provided `HTMLVideoElement`.\n     *\n     * Keep in mind that `HTMLVideoElement` **must have** a video feed which is\n     * ready to use.\n     *\n     * - If you want to take advantage of provided camera management, use\n     *   `createVideoRecognizerFromCameraStream`\n     * - In case that static video file should be processed, use\n     *   `createVideoRecognizerFromVideoPath`\n     *\n     * @param videoElement HTMLVideoElement with video feed which is going to be\n     * processed\n     * @param recognizerRunner RecognizerRunner that should be used for video\n     * stream recognition\n     * @param cameraFlipped Whether the camera is flipped, e.g. if front-facing\n     * camera is used\n     * @param deviceId\n     */\n    constructor(\n        videoElement: HTMLVideoElement,\n        recognizerRunner: RecognizerRunner,\n        cameraFlipped = false,\n        deviceId: string | null = null\n    )\n    {\n        this.videoElement = videoElement;\n        this.recognizerRunner = recognizerRunner;\n        this.cameraFlipped = cameraFlipped;\n        this.deviceId = deviceId;\n\n        if ( \"requestVideoFrameCallback\" in HTMLVideoElement.prototype )\n        {\n            this.frameCallback =\n                this.videoElement.requestVideoFrameCallback.bind(\n                    this.videoElement\n                );\n        }\n        else\n        {\n            this.frameCallback = window.requestAnimationFrame.bind( window );\n        }\n\n        void this.handleFlippingVideo();\n\n        // Prepare the `video` element so that it can autoplay on iOS\n        // https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/\n        // https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide#autoplay_availability\n\n        this.videoElement.setAttribute( \"playsinline\", \"\" );\n        this.videoElement.setAttribute( \"mute\", \"\" );\n    }\n\n    private handleFlippingVideo = async () =>\n    {\n        this.videoElement.style.transform = `scaleX(${this.cameraFlipped ? -1 : 1})`;\n\n        // needs to be set on the recognizerRunner as well to provide correct quads\n        await this.recognizerRunner.setCameraPreviewMirrored( this.cameraFlipped );\n    };\n\n    /**\n     * Creates a new VideoRecognizer by opening a camera stream and attaching it\n     * to given `HTMLVideoElement`. If camera cannot be accessed, the returned\n     * promise will be rejected.\n     *\n     * @param cameraFeed `HTMLVideoElement` to which camera stream should be\n     * attached\n     * @param recognizerRunner `RecognizerRunner` that should be used for video\n     * stream recognition\n     * @param cameraId User can provide specific camera ID to be selected and used\n     * @param preferredCameraType Whether back facing or front facing camera is\n     *        preferred. Obeyed only if there is a choice (i.e. if device has only\n     *        front-facing camera, the opened camera will be a front-facing\n     *        camera, regardless of preference)\n     */\n    static async createVideoRecognizerFromCameraStream(\n        cameraFeed: HTMLVideoElement,\n        recognizerRunner: RecognizerRunner,\n        cameraId: string | null = null,\n        preferredCameraType: PreferredCameraType = PreferredCameraType.BackFacingCamera\n    )\n    {\n        if ( !cameraFeed || !( cameraFeed instanceof HTMLVideoElement ) )\n        {\n            throw new SDKError( videoRecognizerErrors.elementMissing );\n        }\n\n        if ( !navigator.mediaDevices.getUserMedia )\n        {\n            throw new SDKError( videoRecognizerErrors.mediaDevicesUnsupported );\n        }\n\n        const selectedCamera = await selectCamera(\n            cameraId,\n            preferredCameraType\n        );\n\n        if ( !selectedCamera )\n        {\n            throw new SDKError( videoRecognizerErrors.cameraMissing );\n        }\n\n\n        const cameraFlipped = await bindCameraToVideoFeed(\n            selectedCamera,\n            cameraFeed,\n            preferredCameraType,\n        );\n\n        await recognizerRunner.setPingData( { selectedCamera: selectedCamera.label } );\n\n        return new VideoRecognizer(\n            cameraFeed,\n            recognizerRunner,\n            cameraFlipped,\n            selectedCamera.deviceId\n        );\n    }\n\n    /**\n     * Creates a new `VideoRecognizer` by attaching the given URL to video to\n     * given `HTMLVideoElement` and using it to display video frames while\n     * processing them.\n     *\n     * @param videoPath URL of the video file that should be recognized.\n     * @param videoElement `HTMLVideoElement` to which video file will be attached\n     * @param recognizerRunner `RecognizerRunner` that should be used for video\n     * stream recognition.\n     */\n    static createVideoRecognizerFromVideoPath(\n        videoPath: string,\n        videoElement: HTMLVideoElement,\n        recognizerRunner: RecognizerRunner\n    )\n    {\n        const videoRecognizer = new VideoRecognizer(\n            videoElement,\n            recognizerRunner\n        );\n\n        videoElement.src = videoPath;\n        videoElement.currentTime = 0;\n\n        videoElement.onended = () =>\n        {\n            videoRecognizer.cancelRecognition();\n        };\n        return videoRecognizer;\n    }\n\n    /**\n     * Sets the callback that will be invoked when frame is processed\n     * @param onFrameProcessed Callback that will be invoked when frame is processed\n     */\n    setOnFrameProcessed = ( onFrameProcessed: OnFrameProcessed | null ) =>\n    {\n        this.onFrameProcessed = onFrameProcessed;\n    };\n\n    flipCamera = async () =>\n    {\n        this.cameraFlipped = !this.cameraFlipped;\n\n        await this.handleFlippingVideo();\n    };\n\n    isCameraFlipped = () =>\n    {\n        return this.cameraFlipped;\n    };\n\n    /**\n     * Sets the video recognition mode to be used.\n     */\n    setVideoRecognitionMode = async (\n        videoRecognitionMode: VideoRecognitionMode\n    ) =>\n    {\n        this.videoRecognitionMode = videoRecognitionMode;\n        const isDetectionMode =\n            this.videoRecognitionMode === VideoRecognitionMode.DetectionTest;\n        await this.recognizerRunner.setDetectionOnlyMode( isDetectionMode );\n    };\n\n    /**\n     * Starts the recognition of the video stream associated with this\n     * `VideoRecognizer`. The stream will be unpaused and recognition loop will\n     * start. After recognition completes, an `onScanningDone` callback will be\n     * invoked with state of the recognition.\n     *\n     * NOTE: As soon as the execution of the callback completes, the recognition\n     *       loop will continue and recognition state will be retained. To clear\n     *       the recognition state, use {@linkcode resetRecognizers} (within your\n     *       callback). To pause the recognition loop, use\n     *       {@linkcode pauseRecognition} (within your callback) - to resume it\n     *       later use {@linkcode resumeRecognition}. To completely stop the\n     *       recognition and video feed, while keeping the ability to use this\n     *       `VideoRecognizer` later, use {@linkcode pauseVideoFeed}. To\n     *       completely stop the recognition and video feed and release all the\n     *       resources involved with the video stream, use\n     *       {@linkcode releaseVideoFeed}.\n     *\n     * @param onScanningDone Callback that will be invoked when recognition\n     * completes.\n     * @param recognitionTimeoutMs Amount of time in ms that the recognizer will\n     * stay in the `Uncertain` state before resolving.\n     */\n    startRecognition = async (\n        onScanningDone: OnScanningDone,\n        recognitionTimeoutMs = 20000\n    ) =>\n    {\n        try\n        {\n            await this.videoElement.play();\n        }\n        catch ( error )\n        {\n            throw new Error(\n                ErrorMessages.VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED\n            );\n        }\n\n        // Following 2 lines might not be needed. Just in case left here.\n        this.recognitionPauseRequested = false;\n        this.recognitionCancelRequested = false;\n\n        this.clearTimeout();\n        this.recognitionTimeoutMs = recognitionTimeoutMs;\n        this.onScanningDone = onScanningDone;\n\n        await this.throttledQueueFrame();\n    };\n\n    /**\n     * Resumes the recognition and video playback\n     * @param resetRecognizers Indicates whether resetRecognizers should be\n     * invoked while resuming the recognition\n     */\n    resumeRecognition = async ( resetRecognizers: boolean ) =>\n    {\n        if ( resetRecognizers )\n        {\n            try\n            {\n                await this.resetRecognizers( true );\n            }\n            catch ( error )\n            {\n                throw new SDKError(\n                    videoRecognizerErrors.recognizersResetFailure\n                );\n            }\n        }\n\n        try\n        {\n            await this.videoElement.play();\n        }\n        catch ( error )\n        {\n            throw new Error(\n                ErrorMessages.VIDEO_RECOGNIZER_PLAY_REQUEST_INTERRUPTED\n            );\n        }\n\n        try\n        {\n            this.recognitionPauseRequested = false;\n            await this.throttledQueueFrame();\n        }\n        catch ( error )\n        {\n            this.recognitionPauseRequested = true;\n            console.error( error );\n        }\n    };\n\n    /**\n     * Performs the recognition of the video stream associated with this\n     * `VideoRecognizer`. The stream will be unpaused, recognition will be\n     * performed and promise will be resolved with recognition status. After the\n     * resolution of returned promise, the video stream will be paused, but not\n     * released. To release the stream, use function `releaseVideoFeed`.\n     *\n     * This is a simple version of {@linkcode startRecognition} that should be\n     * used for most cases, like when you only need to perform one scan per video\n     * session.\n     *\n     * @param recognitionTimeoutMs Amount of time in ms that the recognizer will\n     * stay in the `Uncertain` state before resolving.\n     */\n    recognize = ( recognitionTimeoutMs = 20000 ) =>\n    {\n        return new Promise<RecognizerResultState>( ( resolve ) =>\n        {\n            const onScanningDone: OnScanningDone = ( recognitionState ) =>\n            {\n                this.pauseVideoFeed();\n                resolve( recognitionState );\n            };\n\n            void this.startRecognition( onScanningDone, recognitionTimeoutMs );\n        } );\n    };\n\n    /**\n     * Pauses the video feed. You can resume the feed by calling recognize or\n     * `startRecognition`. Note that this pauses both the camera feed and\n     * recognition. If you just want to pause recognition, while keeping the\n     * camera feed active, call method `pauseRecognition`.\n     */\n    pauseVideoFeed = () =>\n    {\n        // fix for https://developer.chrome.com/blog/play-request-was-interrupted/\n        if (\n            this.videoElement.readyState >\n                this.videoElement.HAVE_CURRENT_DATA &&\n            !this.videoElement.paused\n        )\n        {\n            this.videoElement.pause();\n            this.pauseRecognition();\n        }\n    };\n\n    /**\n     * Pauses the recognition. This means that video frames that arrive from given\n     * video source will not be recognized. To resume recognition, call\n     * {@linkcode resumeRecognition}.\n     */\n    pauseRecognition = () =>\n    {\n        this.recognitionPauseRequested = true;\n    };\n\n    /**\n     * Cancels current ongoing recognition. Unlike {@linkcode pauseRecognition} this will reset everything\n     */\n    cancelRecognition = () =>\n    {\n        this.recognitionCancelRequested = true;\n    };\n\n    /**\n     * Convenience method for invoking\n     * {@linkcode RecognizerRunner.resetRecognizers} on associated\n     * `RecognizerRunner`.\n     */\n    resetRecognizers = async ( hardReset: boolean ) =>\n    {\n        await this.recognizerRunner.resetRecognizers( hardReset );\n    };\n\n    /**\n     * Convenience method for accessing `RecognizerRunner` associated with this\n     * `VideoRecognizer`. Sometimes it's useful to reconfigure `RecognizerRunner`\n     * while handling `onScanningDone` callback and this method makes that much\n     * more convenient.\n     */\n    getRecognizerRunner = () =>\n    {\n        return this.recognizerRunner;\n    };\n\n    /**\n     * Getter for {@linkcode videoElement}\n     */\n    getVideoElement = () =>\n    {\n        return this.videoElement;\n    };\n\n    /**\n     * Change currently used camera device for recognition. To get list of\n     * available camera devices use `getCameraDevices` method.\n     *\n     * Keep in mind that this method will reset recognizers.\n     *\n     * @param camera Desired camera device which should be used for recognition.\n     */\n    changeCameraDevice = async ( camera: SelectedCamera ) =>\n    {\n        this.pauseRecognition();\n        this.releaseVideoFeed();\n\n        await bindCameraToVideoFeed(\n            camera,\n            this.videoElement,\n            PreferredCameraType.BackFacingCamera,\n        );\n\n        await this.recognizerRunner.setPingData( { selectedCamera: camera.label } );\n\n        await this.resumeRecognition( true );\n    };\n\n    /**\n     * Shorthand for queuing the next frame for processing. Wrapper around\n     * {@linkcode recognitionLoop}. Resolves when the frame is done processing.\n     */\n    private queueFrame = () =>\n    {\n        // promisify `requestVideoFrameCallback` so that we know when it triggers\n        return new Promise<void>( ( resolve ) =>\n        {\n            this.frameCallback( () =>\n            {\n                void this.recognitionLoop().then( () => resolve() );\n            } );\n        } );\n    };\n\n    private throttledQueueFrame = throttle( this.queueFrame );\n\n    /**\n     * The main loop. Takes camera frames from {@linkcode videoElement} and\n     * processes them on the `recognizerRunner`.\n     */\n    private recognitionLoop = async () =>\n    {\n        if ( this.threadBusy )\n        {\n            return;\n        }\n\n        // exit without side-effects when paused\n        if ( this.recognitionPauseRequested )\n        {\n            return;\n        }\n\n        // if cancelled exit and reset `VideoRecognizer` state\n        if ( this.recognitionCancelRequested )\n        {\n            this.clearTimeout();\n            await this.resetRecognizers( true );\n            this.onScanningDone = null;\n            this.recognitionCancelRequested = false;\n            return;\n        }\n\n        /*\n        Start processing.\n\n        At this point we draw the canvas frames, extract the ImageData` and send it\n        to the `RecognizerRunner`. The main thread and the worker thread should be\n        treated as blocked.\n        */\n        const cameraFrame = captureFrame(\n            this.videoElement,\n        );\n\n        // queue everything below in a macrotask\n        await new Promise( ( f ) => setTimeout( f, 0 ) );\n\n        this.threadBusy = true;\n        const processResult = await this.recognizerRunner.processImage(\n            cameraFrame\n        );\n\n\n        // assumption: only one recognizer is used\n        const currentFrameResult = await this.recognizerRunner.recognizers[0].getResult() as BlinkIDResult;\n\n        this.threadBusy = false;\n\n        // Trigger onFrameProcessed callback\n        if ( typeof this.onFrameProcessed === \"function\" )\n        {\n            this.onFrameProcessed( currentFrameResult, cameraFrame.imageData );\n        }\n\n        // End processing\n\n        // Test mode resets recognizers on every tick and never times out\n        if (\n            this.videoRecognitionMode === VideoRecognitionMode.DetectionTest ||\n            this.videoRecognitionMode === VideoRecognitionMode.RecognitionTest\n        )\n        {\n            await this.recognizerRunner.resetRecognizers( true );\n\n            this.clearTimeout();\n            void this.throttledQueueFrame();\n            return;\n        }\n\n\n        // regular flow\n        switch ( processResult )\n        {\n            // `Valid` stops loop and calls `onScanningDone`\n            case RecognizerResultState.Valid: {\n                this.clearTimeout();\n\n                if ( typeof this.onScanningDone === \"function\" )\n                {\n                    this.onScanningDone( processResult );\n                }\n\n                return;\n            }\n            // `Uncertain` resolves after a timeout, loops otherwise\n            case RecognizerResultState.Uncertain: {\n                // increment timeout\n                const now = performance.now();\n\n                if ( this.timeoutStartedAt === 0 )\n                {\n                    this.timeoutStartedAt = now;\n                }\n\n                this.currentTimeoutCount = now - this.timeoutStartedAt;\n\n                // if under timeout continue looping\n                if ( this.currentTimeoutCount < this.recognitionTimeoutMs )\n                {\n                    void this.throttledQueueFrame();\n                    return;\n                }\n\n                // otherwise stop as `Uncertain`\n                this.clearTimeout();\n\n                if ( typeof this.onScanningDone === \"function\" )\n                {\n                    this.onScanningDone( processResult );\n                }\n\n                return;\n            }\n            // `StageValid` and `Empty` loop forever\n            case RecognizerResultState.StageValid:\n            case RecognizerResultState.Empty: {\n                this.clearTimeout();\n                void this.throttledQueueFrame();\n\n                return;\n            }\n        }\n    };\n\n    /**\n     * Clear timeout on every loop which didn't result in `RecognizerResultState.Uncertain`\n     */\n    private clearTimeout = () =>\n    {\n        this.currentTimeoutCount = 0;\n        this.timeoutStartedAt = 0;\n    };\n\n    /**\n     * Stops all media stream tracks associated with {@linkcode videoElement}.\n     */\n    releaseVideoFeed = () =>\n    {\n        if (\n            this.videoElement &&\n            this.videoElement.srcObject !== null &&\n            this.videoElement.srcObject instanceof MediaStream\n        )\n        {\n            this.videoElement.srcObject\n                .getTracks()\n                .forEach( ( track ) => track.stop() );\n            this.videoElement.srcObject = null;\n        }\n    };\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { SDKError } from \"./SDKError\";\nimport { defaultWasmModuleName } from \"../defaultWasmModule\";\nimport { WasmType } from \"./WasmType\";\nimport type { BlinkIDVariant } from \"./BlinkIdVariant\";\nimport * as ErrorTypes from \"./ErrorTypes\";\n\n/**\n * Function that will be called during loading of the SDK.\n * @param loadPercentage Number between 0 and 100 indicating the loading progress.\n */\nexport type LoadProgressCallback = ( loadPercentage: number ) => void;\n\nexport type OptionalLoadProgressCallback = LoadProgressCallback | null;\n\nexport { WasmType };\n\n/**\n * Settings object for function loadWasmModule.\n */\nexport class WasmSDKLoadSettings\n{\n    /**\n     * License key for unlocking the WebAssembly module. Bound to the domain name from which the application is served.\n     */\n    licenseKey: string;\n\n    /**\n     * Write a hello message to the browser console when license check is successfully performed.\n     *\n     * Hello message will contain the name and version of the SDK, which are required information for all support\n     * tickets.\n     *\n     * The default value is true.\n     */\n    allowHelloMessage = true;\n\n    /**\n     * Absolute location of WASM and related JS/data files. Useful when resource files should be loaded over CDN, or\n     * when web frameworks/libraries are used which store resources in specific locations, e.g. inside \"assets\" folder.\n     *\n     * Important: if the engine is hosted on another origin, CORS must be enabled between two hosts. That is, server\n     * where engine is hosted must have 'Access-Control-Allow-Origin' header for the location of the web app.\n     *\n     * Important: SDK and WASM resources must be from the same version of a package.\n     *\n     * Default value is empty string, i.e. \"\". In case of empty string, value of \"window.location.origin\" property is\n     * going to be used.\n     */\n    engineLocation = \"\";\n\n    /**\n     * The absolute location of the Web Worker script file that loads the WebAssembly module.\n     *\n     * Important: the worker script must be served via HTTPS and must be of the same origin as the initiator.\n     * See https://github.com/w3c/ServiceWorker/issues/940 (same applies for Web Workers).\n     *\n     * Important: SDK, worker script and WebAssembly resources must be from the same version of the package.\n     *\n     * The default value is an empty string, i.e. \"\", and in that case, the worker script is loaded from the default\n     * location in resources folder.\n     */\n    workerLocation = \"\";\n\n    /**\n     * Type of the WASM that will be loaded. By default, if not set, the SDK will automatically determine the best WASM\n     * to load.\n     */\n    wasmType: WasmType | null = null;\n\n    /**\n     * Overrides the BlinkID build that will be loaded.\n     *\n     * The `lightweight` variant is smaller but doesn't support barcode deblurring. This variant is loaded by default on\n     * mobile devices. The `full` version is loaded by default on desktop devices.\n     */\n    blinkIdVariant?: BlinkIDVariant;\n\n    /**\n     * Defines the initial memory size that will be allocated for the WebAssembly module, in megabytes.\n     *\n     * If not set, the memory resolves to 700MB for iOS and 200 MB for other platforms.\n     */\n    initialMemory?: number;\n\n    /**\n     * Defines the number of workers that will be used for multi-threaded processing of the images. If not set, the\n     * number of worker used will match the number of detected CPU cores on a device.\n     *\n     * If the browser does not support multi-threaded processing or it was deliberately disabled using the `wasmType`\n     * property, then this property will be ignored.\n     */\n    numberOfWorkers: number | null = null;\n\n    /**\n     * Optional callback function that will report the SDK loading progress.\n     *\n     * This can be useful for displaying progress bar to users with slow connections.\n     *\n     * The default value is null.\n     */\n    loadProgressCallback: OptionalLoadProgressCallback = null;\n\n    /**\n     * Name of the file containing the WebAssembly module.\n     *\n     * Change this only if you have renamed the original WASM and its support JS file for your purposes.\n     */\n    wasmModuleName: string = defaultWasmModuleName;\n\n    /**\n     * @param licenseKey License key for unlocking the WebAssembly module.\n     */\n    constructor( licenseKey: string )\n    {\n        if ( !licenseKey )\n        {\n            throw new SDKError( ErrorTypes.sdkErrors.licenseKeyMissing );\n        }\n        this.licenseKey = licenseKey;\n    }\n}\n","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport {\n    bulkMemory,\n    mutableGlobals,\n    referenceTypes,\n    saturatedFloatToInt,\n    signExtensions,\n    simd,\n    threads,\n} from \"wasm-feature-detect\";\n\nimport { BlinkIDResource } from \"./BlinkIdVariant\";\nimport { WasmType } from \"./WasmType\";\n\nexport function isSafari()\n{\n    const userAgent = navigator.userAgent.toLowerCase();\n    return userAgent.includes( \"safari\" ) && !userAgent.includes( \"chrome\" );\n}\n\nexport function isIOSUserAgent()\n{\n    const pattern = /iOS|iPhone|iPad|iPod/i; // 'i' flag for case-insensitive matching\n    return pattern.test( navigator.userAgent );\n}\n\n\n/* eslint-disable max-len */\n/**\n * Safari 16 shipped with WASM threads support, but it didn't ship with nested\n * workers support, so an extra check is needed\n * https://github.com/GoogleChromeLabs/squoosh/pull/1325/files#diff-904900db64cd3f48b0e765dbbdc6a218a7ea74a199671bde82a8944a904db86f\n */\n/* eslint-enable max-len */\nexport default async function checkThreadsSupport(): Promise<boolean>\n{\n    const supportsWasmThreads = await threads();\n    if ( !supportsWasmThreads ) return false;\n\n    if ( !( \"importScripts\" in self ) )\n    {\n        throw Error( \"Not implemented\" );\n    }\n\n    // Safari has issues with shared memory\n    // https://github.com/emscripten-core/emscripten/issues/19374\n    if ( isSafari() )\n    {\n        return false;\n    }\n\n    return \"Worker\" in self;\n}\n\nexport async function detectWasmFeatures(): Promise<WasmType>\n{\n    const basicSet = [\n        mutableGlobals(),\n        referenceTypes(),\n        bulkMemory(),\n        saturatedFloatToInt(),\n        signExtensions(),\n    ];\n\n    const supportsBasic = ( await Promise.all( basicSet ) ).every( Boolean );\n\n    if ( !supportsBasic )\n    {\n        throw new Error( \"Browser doesn't meet minimum requirements!\" );\n    }\n\n    const supportsAdvanced = await simd();\n\n    if ( !supportsAdvanced )\n    {\n        return WasmType.Basic;\n    }\n\n    const supportsAdvancedThreads = await checkThreadsSupport();\n\n    if ( !supportsAdvancedThreads )\n    {\n        return WasmType.Advanced;\n    }\n\n    return WasmType.AdvancedWithThreads;\n}\n\nexport async function detectWasmType(): Promise<WasmType>\n{\n    // determine if all features required for advanced WASM are available\n    // currently, advanced wasm requires SIMD\n\n    const haveSIMD = await simd();\n\n    const threadsSupported = await checkThreadsSupport();\n\n    if ( haveSIMD )\n    {\n        if ( threadsSupported )\n        {\n            return WasmType.AdvancedWithThreads;\n        }\n        else\n        {\n            return WasmType.Advanced;\n        }\n    }\n    else\n    {\n        return WasmType.Basic;\n    }\n}\n\nexport function wasmFolder( blinkIDResource: BlinkIDResource ): string\n{\n    let typeDir = \"\";\n\n    if ( blinkIDResource.wasmType === WasmType.AdvancedWithThreads )\n    {\n        typeDir = \"advanced-threads\";\n    }\n    else if ( blinkIDResource.wasmType === WasmType.Advanced )\n    {\n        typeDir = \"advanced\";\n    }\n    else\n    {\n        typeDir = \"basic\";\n    }\n\n    return `${blinkIDResource.blinkIDVariant}/${typeDir}`;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { WasmSDKWorker } from \"./worker/WorkerSDKBackend\";\nimport { Recognizer, RecognizerRunner, WasmSDK } from \"./DataStructures\";\nimport { MetadataCallbacks } from \"./MetadataCallbacks\";\nimport { WasmSDKLoadSettings } from \"./WasmLoadSettings\";\n\nimport { SDKError } from \"./SDKError\";\nimport * as ErrorTypes from \"./ErrorTypes\";\n\nexport * from \"./BlinkIdVariant\";\nexport * from \"./CameraUtils\";\nexport * from \"./DataStructures\";\nexport * from \"./DeviceUtils\";\nexport * from \"./DocumentSide\";\nexport * from \"./ErrorTypes\";\nexport * from \"./FrameCapture\";\nexport * from \"./License\";\nexport * from \"./MetadataCallbacks\";\nexport * from \"./SDKError\";\nexport * from \"./VideoRecognizer\";\nexport * from \"./WasmLoadSettings\";\nexport * from \"./WasmLoadUtils\";\n\n// taken from https://stackoverflow.com/a/2117523/213057\n/* eslint-disable */\nfunction uuidv4(): string {\n  return (([1e7] as any) + -1e3 + -4e3 + -8e3 + -1e11).replace(\n    /[018]/g,\n    (c: any) =>\n      (\n        c ^\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n      ).toString(16)\n  );\n}\n/* eslint-enable */\n\nfunction getUserID(): string\n{\n    try\n    {\n        let userId = localStorage.getItem( \"mb-user-id\" );\n        if ( userId === null )\n        {\n            userId = uuidv4();\n            localStorage.setItem( \"mb-user-id\", userId );\n        }\n        return userId;\n    }\n    catch ( error )\n    {\n    // local storage is disabled, generate new user ID every time\n        return uuidv4();\n    }\n}\n\n/**\n * Asynchronously loads and compiles the WebAssembly module.\n * @param loadSettings Object defining the settings for loading the WebAssembly module.\n * @returns Promise that resolves if WebAssembly module was successfully loaded and rejects if not.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any,\n                  @typescript-eslint/no-unsafe-assignment,\n                  @typescript-eslint/no-unsafe-member-access,\n                  @typescript-eslint/no-unsafe-call */\nexport async function loadWasmModule(\n    loadSettings: WasmSDKLoadSettings\n): Promise<any>\n{\n    return new Promise<any>( ( resolve, reject ) =>\n    {\n        if ( !loadSettings || typeof loadSettings !== \"object\" )\n        {\n            reject( new SDKError( ErrorTypes.sdkErrors.wasmSettingsMissing ) );\n            return;\n        }\n        if ( typeof loadSettings.licenseKey !== \"string\" )\n        {\n            reject( new SDKError( ErrorTypes.sdkErrors.licenseKeyMissing ) );\n            return;\n        }\n        if ( !loadSettings.wasmModuleName )\n        {\n            reject( new SDKError( ErrorTypes.sdkErrors.wasmModuleNameMissing ) );\n            return;\n        }\n        if ( typeof loadSettings.engineLocation !== \"string\" )\n        {\n            reject( new SDKError( ErrorTypes.sdkErrors.engineLocationInvalid ) );\n            return;\n        }\n        if ( typeof loadSettings.workerLocation !== \"string\" )\n        {\n            reject( new SDKError( ErrorTypes.sdkErrors.workerLocationInvalid ) );\n            return;\n        }\n        // obtain user ID from local storage\n        const userId = getUserID();\n\n        try\n        {\n            const workerPath = `/resources/${loadSettings.wasmModuleName}.worker.min.js`;\n            const defaultWorkerLocation = window.location.origin + workerPath;\n            const workerLocation =\n        loadSettings.workerLocation || defaultWorkerLocation;\n\n            if ( loadSettings.allowHelloMessage )\n            {\n                console.log( \"Worker location is:\", workerLocation );\n            }\n\n            const worker = new Worker( workerLocation );\n\n            WasmSDKWorker.createWasmWorker( worker, loadSettings, userId ).then(\n                ( wasmSDK ) =>\n                {\n                    resolve( wasmSDK );\n                },\n                reject\n            );\n        }\n        catch ( initError )\n        {\n            reject( initError );\n        }\n    } );\n}\n/* eslint-enable @typescript-eslint/no-explicit-any,\n                 @typescript-eslint/no-unsafe-assignment,\n                 @typescript-eslint/no-unsafe-member-access,\n                 @typescript-eslint/no-unsafe-call */\n\n/**\n * Function for creating a new RecognizerRunner.\n * Note that it is currently not possible to have multiple instances of RecognizerRunner per instance of WasmSDK.\n * Attempt to create new instance of RecognizerRunner prior deleting the previous one will fail.\n * @param wasmSDK Instance of WasmSDK which will be used to communicate with the WebAssembly module.\n * @param recognizers Array of recognizers that will be used by RecognizerRunner.\n * @param allowMultipleResults Whether or not it is allowed to return multiple results from single recognition session.\n *        See README.md for more information.\n * @param metadataCallbacks\n */\nexport async function createRecognizerRunner(\n    wasmSDK: WasmSDK,\n    recognizers: Array<Recognizer>,\n    allowMultipleResults = false,\n    metadataCallbacks: MetadataCallbacks = {}\n): Promise<RecognizerRunner>\n{\n    if ( typeof wasmSDK !== \"object\" )\n    {\n        throw new SDKError( ErrorTypes.sdkErrors.missing );\n    }\n    if ( typeof recognizers !== \"object\" || recognizers.length < 1 )\n    {\n        throw new SDKError( ErrorTypes.sdkErrors.recognizersMissing );\n    }\n    return wasmSDK.mbWasmModule.createRecognizerRunner(\n        recognizers,\n        allowMultipleResults,\n        metadataCallbacks\n    );\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * Possible formats of barcodes that can be detected. This enum will be returned\n * as part of BarcodeRecognizerResult interface.\n */\nexport enum BarcodeFormat\n{\n    /** Indicates that no barcode has been detected. */\n    NONE = 0,\n    /** Indicates that QR code has been detected. */\n    QR_CODE,\n    /** Indicates that Data Matrix 2D barcode has been detected. */\n    DATA_MATRIX,\n    /** Indicates that UPC E 1D barcode has been detected. */\n    UPC_E,\n    /** Indicates that UPC A 1D barcode has been detected. */\n    UPC_A,\n    /** Indicates that EAN 8 1D barcode has been detected. */\n    EAN_8,\n    /** Indicates that EAN 13 1D barcode has been detected. */\n    EAN_13,\n    /** Indicates that Code 128 1D barcode has been detected. */\n    CODE_128,\n    /** Indicates that Code 39 1D barcode has been detected. */\n    CODE_39,\n    /** Indicates that ITF 1D barcode has been detected. */\n    ITF,\n    /** Indicates that Aztec 2D barcode has been detected. */\n    AZTEC_BARCODE,\n    /** Indicates that PDF417 2D barcode has been detected. */\n    PDF417_BARCODE\n}\n\n/**\n * Data extracted from barcode.\n */\nexport interface BarcodeData\n{\n    /** Format of recognized barcode. */\n    readonly barcodeFormat: BarcodeFormat;\n\n    /**\n     * True if returned result is uncertain, i.e. if scanned barcode was incomplete (i.e.\n     * (has parts of it missing).\n     */\n    readonly uncertain: boolean;\n\n    /** String representation of data inside barcode. */\n    readonly stringData: string;\n\n    /** The raw bytes contained inside barcode. */\n    readonly rawBytes: Uint8Array;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * AnonymizationMode is used to define level of anonymization\n * performed on recognizer result.\n */\nexport enum AnonymizationMode\n{\n    /**\n     * Anonymization will not be performed.\n     */\n    None = 0,\n\n    /**\n     * FullDocumentImage is anonymized with black boxes\n     * covering sensitive data.\n     */\n    ImageOnly,\n\n    /**\n     * Result fields containing sensitive data are removed from result.\n     */\n    ResultFieldsOnly,\n\n    /**\n     * This mode is combination of ImageOnly and ResultFieldsOnly modes.\n     */\n    FullResult\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n *\n * RecognitionModeFilter is used to enable/disable recognition of specific document groups.\n * Setting is taken into account only if the right for that document is purchased.\n */\nexport class RecognitionModeFilter\n{\n    /** Enable scanning of MRZ IDs. Setting is taken into account only if the mrz_id right is purchased. */\n    enableMrzId = true;\n\n    /** Enable scanning of Passport MRZ. Setting is taken into account only if the passport right is purchased. */\n    enableMrzPassport = true;\n\n    /** Enable scanning of visa MRZ. Setting is taken into account only if the visa right is purchased. */\n    enableMrzVisa = true;\n\n    /** Enable scanning of Photo ID. Setting is taken into account only if the photo_id right is purchased. */\n    enablePhotoId = true;\n\n    /**\n     * Enable scanning of barcode IDs. Setting is taken into account only if the barcode right to\n     * scan that barcode is purchased.\n     */\n    enableBarcodeId = true;\n\n    /**\n     * Enable full document recognition. Setting is taken into account only if the document right to\n     * scan that document is purchased.\n     */\n    enableFullDocumentRecognition = true;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nexport enum StrictnessLevel\n{\n    Strict  = 0,\n    Normal  = 1,\n    Relaxed = 2\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { ImageOrientation } from \"../../MicroblinkSDK/DataStructures\";\n\n/**\n * Extension factors relative to corresponding dimension of the full image. For example,\n * {@code upFactor} and {@code downFactor} define extensions relative to image height, e.g.\n * when {@code upFactor} is 0.5, upper image boundary will be extended for half of image's full\n * height.\n *\n *                      ._______________________________________.\n *                      |                   ↑                   |\n *                      |                upFactor               |\n *   .________.         |              .________.               |\n *   |        |   -->   |  ⃖ leftFactor |        | rightFactor  ⃗ |\n *   |________|         |              |________|               |\n *                      |                   ↓                   |\n *                      |               downFactor              |\n *                      |_______________________________________|\n *\n */\nexport class ExtensionFactors\n{\n    /**\n     * Currently used image extension factor relative to full image height in UP direction.\n     */\n    readonly upFactor: number = 0.0;\n\n    /**\n     * Currently used image extension factor relative to full image height in DOWN direction.\n     */\n    readonly downFactor: number = 0.0;\n\n    /**\n     * Currently used image extension factor relative to full image height in LEFT direction.\n     */\n    readonly leftFactor: number = 0.0;\n\n    /**\n     * Currently used image extension factor relative to full image height in RIGHT direction.\n     */\n    readonly rightFactor: number = 0.0;\n\n    /**\n     * Constructor which accepts image extension factors which must be in range [-1.0f, 1.0f].\n     * @param upFactor image extension factor relative to full image height in UP direction\n     * @param downFactor image extension factor relative to full image height in DOWN direction\n     * @param leftFactor image extension factor relative to full image width in LEFT direction\n     * @param rightFactor image extension factor relative to full image width in RIGHT direction\n     */\n    constructor\n    (\n        upFactor = 0.0,\n        downFactor = 0.0,\n        leftFactor = 0.0,\n        rightFactor = 0.0\n    )\n    {\n        this.checkExtensionFactor( upFactor    );\n        this.checkExtensionFactor( downFactor  );\n        this.checkExtensionFactor( leftFactor  );\n        this.checkExtensionFactor( rightFactor );\n        this.upFactor    = upFactor;\n        this.downFactor  = downFactor;\n        this.leftFactor  = leftFactor;\n        this.rightFactor = rightFactor;\n    }\n\n    private checkExtensionFactor( factor: number )\n    {\n        if ( factor > 1.0 || factor < -1.0 )\n        {\n            throw new Error( \"Extension factor must be in range [-1.0, 1.0]\" );\n        }\n    }\n}\n\n\nexport interface FullDocumentImageOptions\n{\n    /**\n     * If enabled, the result will contain dewarped image of the document.\n     */\n    returnFullDocumentImage: boolean;\n\n    /**\n     * If enabled, the result will contain JPEG-encoded image of the document.\n     */\n    returnEncodedFullDocumentImage: boolean;\n\n    /**\n     * The DPI (Dots Per Inch) for full document image in cases when it\n     * should be returned. It applies for both encoded and non-encoded versions.\n     */\n    fullDocumentImageDpi: number;\n\n    /**\n     * extension factors for full document image.\n     */\n    fullDocumentImageExtensionFactors: ExtensionFactors;\n}\n\nexport interface FaceImageOptions\n{\n    /**\n     * If enabled, the result will contain dewarped image of the face.\n     */\n    returnFaceImage: boolean;\n\n    /**\n     * If enabled, the result will contain JPEG-encoded image of the face.\n     */\n    returnEncodedFaceImage: boolean;\n\n    /**\n     * The DPI (Dots Per Inch) for face image in cases when it\n     * should be returned. It applies for both encoded and non-encoded versions.\n     */\n    faceImageDpi: number;\n}\n\nexport interface SignatureImageOptions\n{\n    /**\n     * If enabled, the result will contain dewarped image of the signature.\n     */\n    returnSignatureImage: boolean;\n\n    /**\n     * If enabled, the result will contain JPEG-encoded image of the signature.\n     */\n    returnEncodedSignatureImage: boolean;\n\n    /**\n     * The DPI (Dots Per Inch) for signature image in cases when it\n     * should be returned. It applies for both encoded and non-encoded versions.\n     */\n    signatureImageDpi: number;\n}\n\nexport function validateDpi( dpi: number ): void\n{\n    if ( dpi < 100 || dpi > 400 )\n    {\n        throw new Error( \"DPI must be from interval [100, 400]\" );\n    }\n}\n\nexport interface ImageResult\n{\n    /**\n     * Contains the original image that can be drawn to canvas.\n     */\n    readonly rawImage: ImageData | null;\n\n    /**\n     * Contains the JPEG-encoded bytes of the image.\n     */\n    readonly encodedImage: Uint8Array | null;\n}\n\nexport interface CameraFrameResult\n{\n    /**\n     * Contains both original image and JPEG-encoded bytes of the image.\n     */\n    readonly frame: ImageData | null;\n\n    /** Orientation of the captured frame */\n    readonly orientation: ImageOrientation;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/** List of supported alphabets. */\nexport enum AlphabetType\n{\n    Latin = 0,\n    Arabic = 1,\n    Cyrillic = 2,\n    Greek = 3,\n    Count = 4\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { AddressDetailedInfo } from \"./AddressDetailedInfo\";\nimport { BarcodeData } from \"../../BlinkBarcode/BarcodeData\";\nimport { BarcodeDriverLicenseDetailedInfo } from \"./DriverLicenseDetailedInfo\";\nimport { MBDate } from \"../../../MicroblinkSDK/DataStructures\";\n\n/**\n * BarcodeResult contains data extracted from the barcode.\n */\nexport interface BarcodeResult\n{\n    /** The raw, unparsed barcode data. */\n    readonly barcodeData : BarcodeData;\n\n    /** The first name of the document owner. */\n    readonly firstName: string;\n    /** The middle name of the document owner. */\n    readonly middleName: string;\n    /** The last name of the document owner. */\n    readonly lastName: string;\n    /** The full name of the document owner. */\n    readonly fullName: string;\n    /** The additional name information of the document owner. */\n    readonly additionalNameInformation: string;\n\n    /** The address of the document owner. */\n    readonly address: string;\n    /** The place of birth of the document owner. */\n    readonly placeOfBirth: string;\n    /** The nationality of the document owner. */\n    readonly nationality: string;\n\n    /** The race of the document owner. */\n    readonly race: string;\n    /** The religion of the document owner. */\n    readonly religion: string;\n    /** The profession of the document owner. */\n    readonly profession: string;\n    /** The marital status of the document owner. */\n    readonly maritalStatus: string;\n    /** The residential status of the document owner. */\n    readonly residentialStatus: string;\n    /** The employer of the document owner. */\n    readonly employer: string;\n    /** The sex of the document owner. */\n    readonly sex: string;\n\n    /** The date of birth of the document owner. */\n    readonly dateOfBirth: MBDate;\n    /** The date of issue of the document. */\n    readonly dateOfIssue: MBDate;\n    /** The date of expiry of the document. */\n    readonly dateOfExpiry: MBDate;\n\n    /** The document number. */\n    readonly documentNumber: string;\n    /** The personal identification number. */\n    readonly personalIdNumber: string;\n    /** The additional number of the document. */\n    readonly documentAdditionalNumber: string;\n    /** The issuing authority of the document. */\n    readonly issuingAuthority: string;\n\n    /** The details about the address of the document owner. */\n    readonly addressDetailedInfo: AddressDetailedInfo;\n\n    /* The driver license detailed info. */\n    readonly driverLicenseDetailedInfo: BarcodeDriverLicenseDetailedInfo;\n\n    /* Whether the result is empty */\n    readonly empty: boolean;\n\n    /**\n     * Document specific extended elements that contain all barcode fields in their original form.\n     * The indices of specific data within the array are given by the BarcodeElementKey enum.\n     *\n     * For example, to obtain the first name you can use extendedElements[BarcodeElementKey.CustomerFirstName].\n     *\n     * Currently this is only filled for AAMVACompliant documents.\n     */\n    readonly extendedElements: Array<string>;\n}\n\n/**\n* Enum defining additional fields present in the barcode.\n* Currently this is only used for AAMVACompliant documents.\n*/\nexport enum BarcodeElementKey\n{\n\n    // ==============================================================/\n    // ============== 1. DETERMINING BARCODE VERSION ================/\n    // ==============================================================/\n\n    /**\n     Mandatory on all driver's licenses. All barcodes which are using 3-track magnetic\n     stripe encoding used in the interest of smoothing a transition from legacy documents\n     shall be designated as \"Magnetic\". All barcodes which are using compact encoding\n     compliant with ISO/IEC 18013-2 shall be designated as \"Compact\". All barcodes (majority)\n     compliant with Mandatory PDF417 Bar Code of the American Association of Motor Vehicle\n     Administrators (AAMVA) Card Design Standard from AAMVA DL/ID-2000 standard to DL/ID-2013\n     shall be designated as \"AAMVA\".\n     */\n    DocumentType = 0,\n\n    /**\n     Mandatory on all driver's licenses.\n\n     AAMVA Version Number: This is a decimal value between 0 and 99 that\n     specifies the version level of the PDF417 bar code format. Version \"0\" and \"00\"\n     is reserved for bar codes printed to the specification of the American Association\n     of Motor Vehicle Administrators (AAMVA) prior to the adoption of the AAMVA DL/ID-2000\n     standard.\n\n     - All barcodes compliant with AAMVA DL/ID-2000 standard shall be designated Version \"01.\"\n     - All barcodes compliant with AAMVA Card Design Specification version 1.0, dated 09-2003\n       shall be designated Version \"02.\"\n     - All barcodes compliant with AAMVA Card Design Specification version 2.0, dated 03-2005\n       shall be designated Version \"03.\"\n     - All barcodes compliant with AAMVA Card Design Standard version 1.0, dated 07-2009\n       shall be designated Version \"04.\"\n     - All barcodes compliant with AAMVA Card Design Standard version 1.0, dated 07-2010\n       shall be designated Version \"05.\"\n     - All barcodes compliant with AAMVA Card Design Standard version 1.0, dated 07-2011\n       shall be designated Version \"06\".\n     - All barcodes compliant with AAMVA Card Design Standard version 1.0, dated 06-2012\n       shall be designated Version \"07\".\n     - All barcodes compliant with this current AAMVA standard shall be designated \"08\".\n\n     Should a need arise requiring major revision to the format, this field provides the\n     means to accommodate additional revision.\n\n     If the document type is not \"AAMVA\", this field defines the version number of the\n     given document type's standard.\n     */\n    StandardVersionNumber,\n\n    // ==============================================================/\n    // ==========          2. PERSONAL DATA KEYS          ===========/\n    // ==============================================================/\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     Family name of the cardholder. (Family name is sometimes also called \"last name\" or \"surname.\")\n     Collect full name for record, print as many characters as possible on portrait side of DL/ID.\n     */\n    CustomerFamilyName,\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     First name of the cardholder.\n     */\n    CustomerFirstName,\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     Full name of the individual holding the Driver's License or ID.\n\n     The Name field contains up to four portions, separated with the \",\" delimiter:\n     Last Name (required)\n     , (required)\n     First Name (required)\n     , (required if other name portions follow, otherwise optional)\n     Middle Name(s) (optional)\n     , (required if other name portions follow, otherwise optional)\n     Suffix (optional)\n     , (optional)\n\n     If the individual has more than one middle name they are separated with space.\n     */\n    CustomerFullName,\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     Date on which the cardholder was born. (MMDDCCYY format)\n     */\n    DateOfBirth,\n\n    /**\n     Mandatory on all AAMVA, Magnetic barcodes.\n     Optional on Compact barcodes.\n\n     Gender of the cardholder. 1 = male, 2 = female.\n     */\n    Sex,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 barcodes.\n     Optional on AAMVA 01, Magnetic and Compact barcodes.\n\n     Color of cardholder's eyes. (ANSI D-20 codes)\n\n     Code   Description\n     BLK    Black\n     BLU    Blue\n     BRO    Brown\n     GRY    Gray\n     GRN    Green\n     HAZ    Hazel\n     MAR    Maroon\n     PNK    Pink\n     DIC    Dichromatic\n     UNK    Unknown\n     */\n    EyeColor,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n\n     On compact barcodes, use kFullAddress.\n\n     Street portion of the cardholder address.\n     The place where the registered driver of a vehicle (individual or corporation)\n     may be contacted such as a house number, street address, etc.\n     */\n    AddressStreet,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n\n     On compact barcodes, use kFullAddress.\n\n     City portion of the cardholder address.\n     */\n    AddressCity,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n\n     On compact barcodes, use kFullAddress.\n\n     State portion of the cardholder address.\n     */\n    AddressJurisdictionCode,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n\n     On compact barcodes, use FullAddress.\n\n     Postal code portion of the cardholder address in the U.S. and Canada. If the\n     trailing portion of the postal code in the U.S. is not known, zeros can be used\n     to fill the trailing set of numbers up to nine (9) digits.\n     */\n    AddressPostalCode,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n     Optional on Compact barcodes.\n\n     Full address of the individual holding the Driver's License or ID.\n\n     The full address field contains up to four portions, separated with the \",\" delimiter:\n     Street Address (required)\n     , (required if other address portions follow, otherwise optional)\n     City (optional)\n     , (required if other address portions follow, otherwise optional)\n     Jurisdiction Code (optional)\n     , (required if other address portions follow, otherwise optional)\n     ZIP - Postal Code (optional)\n\n     */\n    FullAddress,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n     Optional on AAMVA 01 and Magnetic barcodes.\n\n     Height of cardholder, either in Inches or in Centimeters.\n\n     Inches (in): number of inches followed by \" in\"\n     example: 6'1'' = \"73 in\"\n\n     Centimeters (cm): number of centimeters followed by \" cm\"\n     example: 181 centimeters = \"181 cm\"\n     */\n    Height,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n     Optional on AAMVA 01 and Magnetic barcodes.\n\n     Height of cardholder in Inches.\n     Example: 5'9'' = \"69\".\n     */\n    HeightIn,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 Compact barcodes.\n     Optional on AAMVA 01 and Magnetic barcodes.\n\n     Height of cardholder in Centimeters.\n     Example: 180 Centimeters = \"180\".\n     */\n    HeightCm,\n\n    /**\n     Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.\n     Optional on AAMVA 01, 02, 03, Magnetic and Compcat barcodes.\n\n     Middle name(s) of the cardholder. In the case of multiple middle names they\n     shall be separated by space \" \".\n     */\n    CustomerMiddleName,\n\n    /**\n     Optional on all AAMVA, Magnetic and Compact barcodes.\n\n     Bald, black, blonde, brown, gray, red/auburn, sandy, white, unknown. If the issuing\n     jurisdiction wishes to abbreviate colors, the three-character codes provided in ANSI D20 must be\n     used.\n\n     Code   Description\n     BAL    Bald\n     BLK    Black\n     BLN    Blond\n     BRO    Brown\n     GRY    Grey\n     RED    Red/Auburn\n     SDY    Sandy\n     WHI    White\n     UNK    Unknown\n     */\n    HairColor,\n\n    /**\n     Mandatory on AAMVA 02 barcodes.\n     Optional on AAMVA 01, 03, 04, 05, 06, 07, 08, Magnetic and Compact barcodes.\n\n     Name Suffix (If jurisdiction participates in systems requiring name suffix (PDPS, CDLIS, etc.),\n     the suffix must be collected and displayed on the DL/ID and in the MRT).\n     - JR (Junior)\n     - SR (Senior)\n     - 1ST or I (First)\n     - 2ND or II (Second)\n     - 3RD or III (Third)\n     - 4TH or IV (Fourth)\n     - 5TH or V (Fifth)\n     - 6TH or VI (Sixth)\n     - 7TH or VII (Seventh)\n     - 8TH or VIII (Eighth)\n     - 9TH or IX (Ninth)\n     */\n    NameSuffix,\n\n    /**\n     Optional on all AAMVA and Compact barcodes.\n\n     Other name by which the cardholder is known. ALTERNATIVE NAME(S) of the individual\n     holding the Driver License or ID.\n\n     The Name field contains up to four portions, separated with the \",\" delimiter:\n     AKA Last Name (required)\n     , (required)\n     AKA First Name (required)\n     , (required if other name portions follow, otherwise optional)\n     AKA Middle Name(s) (optional)\n     , (required if other name portions follow, otherwise optional)\n     AKA Suffix (optional)\n     , (optional)\n\n     If the individual has more than one AKA middle name they are separated with space.\n     */\n    AKAFullName,\n\n    /**\n     Optional on all AAMVA and Compact barcodes.\n\n     Other family name by which the cardholder is known.\n     */\n    AKAFamilyName,\n\n    /**\n     Optional on all AAMVA and Compact barcodes.\n\n     Other given name by which the cardholder is known\n     */\n    AKAGivenName,\n\n    /**\n     Optional on all AAMVA and Compact barcodes.\n\n     Other suffix by which the cardholder is known.\n\n     The Suffix Code Portion, if submitted, can contain only the Suffix Codes shown in the following\n     table (e.g., Andrew Johnson, III = JOHNSON@ANDREW@@3RD):\n\n     Suffix     Meaning or Synonym\n     JR         Junior\n     SR         Senior or Esquire 1ST First\n     2ND        Second\n     3RD        Third\n     4TH        Fourth\n     5TH        Fifth\n     6TH        Sixth\n     7TH        Seventh\n     8TH        Eighth\n     9TH        Ninth\n     */\n    AKASuffixName,\n\n    /**\n     Mandatory on AAMVA 02 barcodes.\n     Optional on AAMVA 01, 03, 04, 05, 06, 07, 08, Magnetic and Compact barcodes.\n\n     Indicates the approximate weight range of the cardholder:\n     0 = up to 31 kg (up to 70 lbs)\n     1 = 32 – 45 kg (71 – 100 lbs)\n     2 = 46 - 59 kg (101 – 130 lbs)\n     3 = 60 - 70 kg (131 – 160 lbs)\n     4 = 71 - 86 kg (161 – 190 lbs)\n     5 = 87 - 100 kg (191 – 220 lbs)\n     6 = 101 - 113 kg (221 – 250 lbs)\n     7 = 114 - 127 kg (251 – 280 lbs)\n     8 = 128 – 145 kg (281 – 320 lbs)\n     9 = 146+ kg (321+ lbs)\n     */\n    WeightRange,\n\n    /**\n     Mandatory on AAMVA 02 barcodes.\n     Optional on AAMVA 01, 03, 04, 05, 06, 07, 08, Magnetic and Compact barcodes.\n\n     Cardholder weight in pounds Example: 185 lb = \"185\"\n     */\n    WeightPounds,\n\n    /**\n     Mandatory on AAMVA 02 barcodes.\n     Optional on AAMVA 01, 03, 04, 05, 06, 07, 08, Magnetic and Compact barcodes.\n\n     Cardholder weight in kilograms Example: 84 kg = \"084\"\n     */\n    WeightKilograms,\n\n    /**\n     Mandatory on all AAMVA and Compact barcodes.\n\n     The number assigned or calculated by the issuing authority.\n     */\n    CustomerIdNumber,\n\n    /**\n     Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.\n     Optional on Compact barcodes.\n\n     A code that indicates whether a field has been truncated (T), has not been\n     truncated (N), or – unknown whether truncated (U).\n     */\n    FamilyNameTruncation,\n\n    /**\n     Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.\n     Optional on Compact barcodes.\n\n     A code that indicates whether a field has been truncated (T), has not been\n     truncated (N), or – unknown whether truncated (U).\n     */\n    FirstNameTruncation,\n\n    /**\n     Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.\n\n     A code that indicates whether a field has been truncated (T), has not been\n     truncated (N), or – unknown whether truncated (U).\n     */\n    MiddleNameTruncation,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Country and municipality and/or state/province.\n     */\n    PlaceOfBirth,\n\n    /**\n     Optional on all AAMVA barcodes.\n\n     On Compact barcodes, use kFullAddress.\n\n     Second line of street portion of the cardholder address.\n     */\n    AddressStreet2,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Codes for race or ethnicity of the cardholder, as defined in ANSI D20.\n\n     Race:\n     Code   Description\n     AI     Alaskan or American Indian (Having Origins in Any of The Original Peoples of\n            North America, and Maintaining Cultural Identification Through Tribal\n            Affiliation of Community Recognition)\n     AP     Asian or Pacific Islander (Having Origins in Any of the Original Peoples of\n            the Far East, Southeast Asia, or Pacific Islands. This Includes China, India,\n            Japan, Korea, the Philippines Islands, and Samoa)\n     BK     Black (Having Origins in Any of the Black Racial Groups of Africa)\n     W      White (Having Origins in Any of The Original Peoples of Europe, North Africa,\n            or the Middle East)\n\n     Ethnicity:\n     Code   Description\n     H      Hispanic Origin (A Person of Mexican, Puerto Rican, Cuban, Central or South\n            American or Other Spanish Culture or Origin, Regardless of Race)\n     O      Not of Hispanic Origin (Any Person Other Than Hispanic)\n     U      Unknown\n\n     */\n    RaceEthnicity,\n\n    /**\n     Optional on AAMVA 01 barcodes.\n\n     PREFIX to Driver Name. Freeform as defined by issuing jurisdiction.\n     */\n    NamePrefix,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Country in which DL/ID is issued. U.S. = USA, Canada = CAN.\n     */\n    CountryIdentification,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Driver Residence Street Address 1.\n     */\n    ResidenceStreetAddress,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Driver Residence Street Address 2.\n     */\n    ResidenceStreetAddress2,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Driver Residence City\n     */\n    ResidenceCity,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Driver Residence Jurisdiction Code.\n     */\n    ResidenceJurisdictionCode,\n\n    /**\n     Optional on AAMVA 01 barcodes.\n\n     Driver Residence Postal Code.\n     */\n    ResidencePostalCode,\n\n    /**\n     Optional on AAMVA 01 barcodes.\n\n     Full residence address of the individual holding the Driver's License or ID.\n\n     The full address field contains up to four portions, separated with the \",\" delimiter:\n     Residence Street Address (required)\n     , (required if other address portions follow, otherwise optional)\n     Residence City (optional)\n     , (required if other address portions follow, otherwise optional)\n     Residence Jurisdiction Code (optional)\n     , (required if other address portions follow, otherwise optional)\n     Residence ZIP - Residence Postal Code (optional)\n     */\n    ResidenceFullAddress,\n\n    /**\n     Optional on AAMVA 05, 06, 07, 08 barcodes.\n\n     Date on which the cardholder turns 18 years old. (MMDDCCYY format)\n     */\n    Under18,\n\n    /**\n     Optional on AAMVA 05, 06, 07, 08 barcodes.\n\n     Date on which the cardholder turns 19 years old. (MMDDCCYY format)\n     */\n    Under19,\n\n    /**\n     Optional on AAMVA 05, 06, 07, 08 barcodes.\n\n     Date on which the cardholder turns 21 years old. (MMDDCCYY format)\n     */\n    Under21,\n\n    /**\n     Optional on AAMVA version 01.\n\n     The number assigned to the individual by the Social Security Administration.\n     */\n    SocialSecurityNumber,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Driver \"AKA\" Social Security Number. FORMAT SAME AS DRIVER SOC SEC NUM. ALTERNATIVE NUMBERS(S) used as SS NUM.\n     */\n    AKASocialSecurityNumber,\n\n    /**\n     Optional on AAMVA 01 barcodes.\n\n     ALTERNATIVE MIDDLE NAME(s) or INITIALS of the individual holding the Driver License or ID.\n     Hyphenated names acceptable, spaces between names acceptable, but no other\n     use of special symbols.\n     */\n    AKAMiddleName,\n\n    /**\n     Optional on AAMVA 01 barcodes.\n\n     ALTERNATIVE PREFIX to Driver Name. Freeform as defined by issuing jurisdiction.\n     */\n    AKAPrefixName,\n\n    /**\n     Optional on AAMVA 01, 06, 07, 08 barcodes.\n\n     Field that indicates that the cardholder is an organ donor = \"1\".\n     */\n    OrganDonor,\n\n    /**\n     Optional on AAMVA 07, 08 barcodes.\n\n     Field that indicates that the cardholder is a veteran = \"1\"\n     */\n    Veteran,\n\n    /**\n     Optional on AAMVA 01. (MMDDCCYY format)\n\n     ALTERNATIVE DATES(S) given as date of birth.\n     */\n    AKADateOfBirth,\n\n\n    // ==============================================================/\n    // ==========          3. LICENSE DATA KEYS          ============/\n    // ==============================================================/\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     This number uniquely identifies the issuing jurisdiction and can\n     be obtained by contacting the ISO Issuing Authority (AAMVA)\n     */\n    IssuerIdentificationNumber,\n\n    /**\n     Mandatory on all AAMVA, Magnetic and Compact barcodes.\n\n     If the document is non expiring then \"Non expiring\" is written in this field.\n\n     Date on which the driving and identification privileges granted by the document are\n     no longer valid. (MMDDCCYY format)\n     */\n    DocumentExpirationDate,\n\n    /**\n     Mandatory on all AAMVA and Compact barcodes.\n     Optional on Magnetic barcodes.\n\n     Jurisdiction Version Number: This is a decimal value between 0 and 99 that\n     specifies the jurisdiction version level of the PDF417 barcode format.\n     Notwithstanding iterations of this standard, jurisdictions implement incremental\n     changes to their barcodes, including new jurisdiction-specific data, compression\n     algorithms for digitized images, digital signatures, or new truncation\n     conventions used for names and addresses. Each change to the barcode format\n     within each AAMVA version (above) must be noted, beginning with Jurisdiction\n     Version 00.\n     */\n    JurisdictionVersionNumber,\n\n    /**\n     Mandatory on all AAMVA and Magnetic barcodes.\n\n     Jurisdiction-specific vehicle class / group code, designating the type\n     of vehicle the cardholder has privilege to drive.\n     */\n    JurisdictionVehicleClass,\n\n    /**\n     Mandatory on all AAMVA barcodes.\n     Optional on Magnetic barcodes.\n\n     Jurisdiction-specific codes that represent restrictions to driving\n     privileges (such as airbrakes, automatic transmission, daylight only, etc.).\n     */\n    JurisdictionRestrictionCodes,\n\n    /**\n     Mandatory on all AAMVA barcodes.\n     Optional on Magnetic barcodes.\n\n     Jurisdiction-specific codes that represent additional privileges\n     granted to the cardholder beyond the vehicle class (such as transportation of\n     passengers, hazardous materials, operation of motorcycles, etc.).\n     */\n    JurisdictionEndorsementCodes,\n\n    /**\n     Mandatory on all AAMVA and Compact barcodes.\n\n     Date on which the document was issued. (MMDDCCYY format)\n     */\n    DocumentIssueDate,\n\n    /**\n     Mandatory on AAMVA versions 02 and 03.\n\n     Federally established codes for vehicle categories, endorsements, and restrictions\n     that are generally applicable to commercial motor vehicles. If the vehicle is not a\n     commercial vehicle, \"NONE\" is to be entered.\n     */\n    FederalCommercialVehicleCodes,\n\n    /**\n     Optional on all AAMVA barcodes.\n     Mandatory on Compact barcodes.\n\n     Jurisdictions may define a subfile to contain jurisdiction-specific information.\n     These subfiles are designated with the first character of “Z” and the second\n     character is the first letter of the jurisdiction's name. For example, \"ZC\" would\n     be the designator for a California or Colorado jurisdiction-defined subfile, \"ZQ\"\n     would be the designator for a Quebec jurisdiction-defined subfile. In the case of\n     a jurisdiction-defined subfile that has a first letter that could be more than\n     one jurisdiction (e.g. California, Colorado, Connecticut) then other data, like\n     the IIN or address, must be examined to determine the jurisdiction.\n     */\n    IssuingJurisdiction,\n\n    /**\n     Optional on all AAMVA barcodes.\n     Mandatory on Compact barcodes.\n\n     Standard vehicle classification code(s) for cardholder. This data element is a\n     placeholder for future efforts to standardize vehicle classifications.\n     */\n    StandardVehicleClassification,\n\n    /**\n      Optional on all AAMVA and Magnetic barcodes.\n\n      Name of issuing jurisdiction, for example: Alabama, Alaska ...\n      */\n    IssuingJurisdictionName,\n\n    /**\n     Optional on all AAMVA barcodes.\n\n     Standard endorsement code(s) for cardholder. See codes in D20. This data element is a\n     placeholder for future efforts to standardize endorsement codes.\n\n     Code   Description\n     H      Hazardous Material - This endorsement is required for the operation of any vehicle\n            transporting hazardous materials requiring placarding, as defined by U.S.\n            Department of Transportation regulations.\n     L      Motorcycles – Including Mopeds/Motorized Bicycles.\n     N      Tank - This endorsement is required for the operation of any vehicle transporting,\n            as its primary cargo, any liquid or gaseous material within a tank attached to the vehicle.\n     O      Other Jurisdiction Specific Endorsement(s) - This code indicates one or more\n            additional jurisdiction assigned endorsements.\n     P      Passenger - This endorsement is required for the operation of any vehicle used for\n            transportation of sixteen or more occupants, including the driver.\n     S      School Bus - This endorsement is required for the operation of a school bus. School bus means a\n            CMV used to transport pre-primary, primary, or secondary school students from home to school,\n            from school to home, or to and from school sponsored events. School bus does not include a\n            bus used as common carrier (49 CRF 383.5).\n     T      Doubles/Triples - This endorsement is required for the operation of any vehicle that would be\n            referred to as a double or triple.\n     X      Combined Tank/HAZ-MAT - This endorsement may be issued to any driver who qualifies for\n            both the N and H endorsements.\n     */\n    StandardEndorsementCode,\n\n    /**\n     Optional on all AAMVA barcodes.\n\n     Standard restriction code(s) for cardholder. See codes in D20. This data element is a placeholder\n     for future efforts to standardize restriction codes.\n\n     Code   Description\n     B      Corrective Lenses\n     C      Mechanical Devices (Special Brakes, Hand Controls, or Other Adaptive Devices)\n     D      Prosthetic Aid\n     E      Automatic Transmission\n     F      Outside Mirror\n     G      Limit to Daylight Only\n     H      Limit to Employment\n     I      Limited Other\n     J      Other\n     K      CDL Intrastate Only\n     L      Vehicles without air brakes\n     M      Except Class A bus\n     N      Except Class A and Class B bus\n     O      Except Tractor-Trailer\n     V      Medical Variance Documentation Required\n     W      Farm Waiver\n     */\n    StandardRestrictionCode,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Text that explains the jurisdiction-specific code(s) for classifications\n     of vehicles cardholder is authorized to drive.\n     */\n    JurisdictionVehicleClassificationDescription,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Text that explains the jurisdiction-specific code(s) that indicates additional\n     driving privileges granted to the cardholder beyond the vehicle class.\n     */\n    JurisdictionEndorsmentCodeDescription,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Text describing the jurisdiction-specific restriction code(s) that curtail driving privileges.\n     */\n    JurisdictionRestrictionCodeDescription,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 barcodes.\n\n     A string of letters and/or numbers that is affixed to the raw materials (card stock,\n     laminate, etc.) used in producing driver's licenses and ID cards. (DHS recommended field)\n     */\n    InventoryControlNumber,\n\n    /**\n     Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes.\n\n     DHS required field that indicates date of the most recent version change or\n     modification to the visible format of the DL/ID. (MMDDCCYY format)\n     */\n    CardRevisionDate,\n\n    /**\n     Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Magnetic barcodes.\n     Optional and Compact barcodes.\n\n     Number must uniquely identify a particular document issued to that customer\n     from others that may have been issued in the past. This number may serve multiple\n     purposes of document discrimination, audit information number, and/or inventory control.\n     */\n    DocumentDiscriminator,\n\n    /**\n     Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes.\n\n     DHS required field that indicates that the cardholder has temporary lawful status = \"1\".\n     */\n    LimitedDurationDocument,\n\n    /**\n     Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.\n\n     A string of letters and/or numbers that identifies when, where, and by whom a driver's\n     license/ID card was made. If audit information is not used on the card or the MRT, it\n     must be included in the driver record.\n     */\n    AuditInformation,\n\n    /**\n     Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes.\n\n     DHS required field that indicates compliance: \"M\" = materially compliant,\n     \"F\" = fully compliant, and, \"N\" = non-compliant.\n     */\n    ComplianceType,\n\n    /**\n     Optional on AAMVA version 01 barcodes.\n\n     Issue Timestamp. A string used by some jurisdictions to validate the document against their data base.\n     */\n    IssueTimestamp,\n\n    /**\n     Optional on AAMVA version 01 barcodes.\n\n     Driver Permit Expiration Date. MMDDCCYY format. Date permit expires.\n     */\n    PermitExpirationDate,\n\n    /**\n     Optional on AAMVA version 01 barcodes..\n\n     Type of permit.\n     */\n    PermitIdentifier,\n\n    /**\n     Optional on AAMVA version 01 barcodes..\n\n     Driver Permit Issue Date. MMDDCCYY format. Date permit was issued.\n     */\n    PermitIssueDate,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Number of duplicate cards issued for a license or ID if any.\n     */\n    NumberOfDuplicates,\n\n    /**\n     Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes.\n\n     Date on which the hazardous material endorsement granted by the document is\n     no longer valid. (MMDDCCYY format)\n     */\n    HAZMATExpirationDate,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Medical Indicator/Codes.\n     STATE SPECIFIC. Freeform, Standard \"TBD\"\n     */\n    MedicalIndicator,\n\n    /**\n     Optional on AAMVA version 01.\n\n     Non-Resident Indicator. \"Y\". Used by some jurisdictions to indicate holder of the document is a non-resident.\n     */\n    NonResident,\n\n    /**\n     Optional on AAMVA version 01.\n\n     A number or alphanumeric string used by some jurisdictions to identify a \"customer\" across multiple data bases.\n     */\n    UniqueCustomerId,\n\n    /**\n     Optional on compact barcodes.\n\n     Document discriminator.\n     */\n    DataDiscriminator,\n\n    /**\n     Optional on Magnetic barcodes.\n\n     Month on which the driving and identification privileges granted by the document are\n     no longer valid. (MMYY format)\n     */\n    DocumentExpirationMonth,\n\n    /**\n     Optional on Magnetic barcodes.\n\n     Field that indicates that the driving and identification privileges granted by the\n     document are nonexpiring = \"1\".\n     */\n    DocumentNonexpiring,\n\n    /**\n      Optional on Magnetic barcodes.\n\n      Security version beeing used.\n    */\n    SecurityVersion,\n\n    /**\n      Number of keys in enum.\n    */\n    Count\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n *\n */\nimport { DocumentType } from \"./ClassInfo\";\nimport { Country, Region } from \"./ClassInfo\";\n\nexport class ClassFilter\n{\n    /**\n     * If set, specified fields will be anonymized on documents issued by\n     * specified country only. Otherwise, issuing country will not be taken into\n     * account during anonymization.\n     */\n    country: Country | null = null;\n\n    /**\n     * If set, specified fields will be anonymized on documents issued by\n     * specified region only. Otherwise, issuing region will not be taken into\n     * account during anonymization.\n     */\n    region: Region | null = null;\n\n    /**\n     * If set, specified fields will be anonymized on documents of specified\n     * type only. Otherwise, document type will not be taken into account during\n     * anonymization.\n     */\n    type: DocumentType | null = null;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\nexport interface ClassInfo\n{\n    /** The document country. */\n    readonly country: Country;\n\n    /** The document region. */\n    readonly region: Region;\n\n    /** The type of the scanned document. */\n    readonly documentType: DocumentType;\n\n    /** The ISO numeric code of the country that issued the scanned document. */\n    readonly countryName?: string;\n\n    /** The ISO numeric code of the country that issued the scanned document. */\n    readonly isoNumericCountryCode?: string;\n\n    /** The 2 letter ISO code of the country that issued the scanned document. */\n    readonly isoAlpha2CountryCode?: string;\n\n    /** The 3 letter ISO code of the country that issued the scanned document. */\n    readonly isoAlpha3CountryCode?: string;\n}\n\nexport enum Country\n{\n    NONE = 0,\n    ALBANIA = 1,\n    ALGERIA = 2,\n    ARGENTINA = 3,\n    AUSTRALIA = 4,\n    AUSTRIA = 5,\n    AZERBAIJAN = 6,\n    BAHRAIN = 7,\n    BANGLADESH = 8,\n    BELGIUM = 9,\n    BOSNIA_AND_HERZEGOVINA = 10,\n    BRUNEI = 11,\n    BULGARIA = 12,\n    CAMBODIA = 13,\n    CANADA = 14,\n    CHILE = 15,\n    COLOMBIA = 16,\n    COSTA_RICA = 17,\n    CROATIA = 18,\n    CYPRUS = 19,\n    CZECHIA = 20,\n    DENMARK = 21,\n    DOMINICAN_REPUBLIC = 22,\n    EGYPT = 23,\n    ESTONIA = 24,\n    FINLAND = 25,\n    FRANCE = 26,\n    GEORGIA = 27,\n    GERMANY = 28,\n    GHANA = 29,\n    GREECE = 30,\n    GUATEMALA = 31,\n    HONG_KONG = 32,\n    HUNGARY = 33,\n    INDIA = 34,\n    INDONESIA = 35,\n    IRELAND = 36,\n    ISRAEL = 37,\n    ITALY = 38,\n    JORDAN = 39,\n    KAZAKHSTAN = 40,\n    KENYA = 41,\n    KOSOVO = 42,\n    KUWAIT = 43,\n    LATVIA = 44,\n    LITHUANIA = 45,\n    MALAYSIA = 46,\n    MALDIVES = 47,\n    MALTA = 48,\n    MAURITIUS = 49,\n    MEXICO = 50,\n    MOROCCO = 51,\n    NETHERLANDS = 52,\n    NEW_ZEALAND = 53,\n    NIGERIA = 54,\n    PAKISTAN = 55,\n    PANAMA = 56,\n    PARAGUAY = 57,\n    PHILIPPINES = 58,\n    POLAND = 59,\n    PORTUGAL = 60,\n    PUERTO_RICO = 61,\n    QATAR = 62,\n    ROMANIA = 63,\n    RUSSIA = 64,\n    SAUDI_ARABIA = 65,\n    SERBIA = 66,\n    SINGAPORE = 67,\n    SLOVAKIA = 68,\n    SLOVENIA = 69,\n    SOUTH_AFRICA = 70,\n    SPAIN = 71,\n    SWEDEN = 72,\n    SWITZERLAND = 73,\n    TAIWAN = 74,\n    THAILAND = 75,\n    TUNISIA = 76,\n    TURKEY = 77,\n    UAE = 78,\n    UGANDA = 79,\n    UK = 80,\n    UKRAINE = 81,\n    USA = 82,\n    VIETNAM = 83,\n    BRAZIL = 84,\n    NORWAY = 85,\n    OMAN = 86,\n    ECUADOR = 87,\n    EL_SALVADOR = 88,\n    SRI_LANKA = 89,\n    PERU = 90,\n    URUGUAY = 91,\n    BAHAMAS = 92,\n    BERMUDA = 93,\n    BOLIVIA = 94,\n    CHINA = 95,\n    EUROPEAN_UNION = 96,\n    HAITI = 97,\n    HONDURAS = 98,\n    ICELAND = 99,\n    JAPAN = 100,\n    LUXEMBOURG = 101,\n    MONTENEGRO = 102,\n    NICARAGUA = 103,\n    SOUTH_KOREA = 104,\n    VENEZUELA = 105,\n    AFGHANISTAN = 106,\n    ALAND_ISLANDS = 107,\n    AMERICAN_SAMOA = 108,\n    ANDORRA = 109,\n    ANGOLA = 110,\n    ANGUILLA = 111,\n    ANTARCTICA = 112,\n    ANTIGUA_AND_BARBUDA = 113,\n    ARMENIA = 114,\n    ARUBA = 115,\n    BAILIWICK_OF_GUERNSEY = 116,\n    BAILIWICK_OF_JERSEY = 117,\n    BARBADOS = 118,\n    BELARUS = 119,\n    BELIZE = 120,\n    BENIN = 121,\n    BHUTAN = 122,\n    BONAIRE_SAINT_EUSTATIUS_AND_SABA = 123,\n    BOTSWANA = 124,\n    BOUVET_ISLAND = 125,\n    BRITISH_INDIAN_OCEAN_TERRITORY = 126,\n    BURKINA_FASO = 127,\n    BURUNDI = 128,\n    CAMEROON = 129,\n    CAPE_VERDE = 130,\n    CARIBBEAN_NETHERLANDS = 131,\n    CAYMAN_ISLANDS = 132,\n    CENTRAL_AFRICAN_REPUBLIC = 133,\n    CHAD = 134,\n    CHRISTMAS_ISLAND = 135,\n    COCOS_ISLANDS = 136,\n    COMOROS = 137,\n    CONGO = 138,\n    COOK_ISLANDS = 139,\n    CUBA = 140,\n    CURACAO = 141,\n    DEMOCRATIC_REPUBLIC_OF_THE_CONGO = 142,\n    DJIBOUTI = 143,\n    DOMINICA = 144,\n    EAST_TIMOR = 145,\n    EQUATORIAL_GUINEA = 146,\n    ERITREA = 147,\n    ETHIOPIA = 148,\n    FALKLAND_ISLANDS = 149,\n    FAROE_ISLANDS = 150,\n    FEDERATED_STATES_OF_MICRONESIA = 151,\n    FIJI = 152,\n    FRENCH_GUIANA = 153,\n    FRENCH_POLYNESIA = 154,\n    FRENCH_SOUTHERN_TERRITORIES = 155,\n    GABON = 156,\n    GAMBIA = 157,\n    GIBRALTAR = 158,\n    GREENLAND = 159,\n    GRENADA = 160,\n    GUADELOUPE = 161,\n    GUAM = 162,\n    GUINEA = 163,\n    GUINEA_BISSAU = 164,\n    GUYANA = 165,\n    HEARD_ISLAND_AND_MCDONALD_ISLANDS = 166,\n    IRAN = 167,\n    IRAQ = 168,\n    ISLE_OF_MAN = 169,\n    IVORY_COAST = 170,\n    JAMAICA = 171,\n    KIRIBATI = 172,\n    KYRGYZSTAN = 173,\n    LAOS = 174,\n    LEBANON = 175,\n    LESOTHO = 176,\n    LIBERIA = 177,\n    LIBYA = 178,\n    LIECHTENSTEIN = 179,\n    MACAU = 180,\n    MADAGASCAR = 181,\n    MALAWI = 182,\n    MALI = 183,\n    MARSHALL_ISLANDS = 184,\n    MARTINIQUE = 185,\n    MAURITANIA = 186,\n    MAYOTTE = 187,\n    MOLDOVA = 188,\n    MONACO = 189,\n    MONGOLIA = 190,\n    MONTSERRAT = 191,\n    MOZAMBIQUE = 192,\n    MYANMAR = 193,\n    NAMIBIA = 194,\n    NAURU = 195,\n    NEPAL = 196,\n    NEW_CALEDONIA = 197,\n    NIGER = 198,\n    NIUE = 199,\n    NORFOLK_ISLAND = 200,\n    NORTHERN_CYPRUS = 201,\n    NORTHERN_MARIANA_ISLANDS = 202,\n    NORTH_KOREA = 203,\n    NORTH_MACEDONIA = 204,\n    PALAU = 205,\n    PALESTINE = 206,\n    PAPUA_NEW_GUINEA = 207,\n    PITCAIRN = 208,\n    REUNION = 209,\n    RWANDA = 210,\n    SAINT_BARTHELEMY = 211,\n    SAINT_HELENA_ASCENSION_AND_TRISTIAN_DA_CUNHA = 212,\n    SAINT_KITTS_AND_NEVIS = 213,\n    SAINT_LUCIA = 214,\n    SAINT_MARTIN = 215,\n    SAINT_PIERRE_AND_MIQUELON = 216,\n    SAINT_VINCENT_AND_THE_GRENADINES = 217,\n    SAMOA = 218,\n    SAN_MARINO = 219,\n    SAO_TOME_AND_PRINCIPE = 220,\n    SENEGAL = 221,\n    SEYCHELLES = 222,\n    SIERRA_LEONE = 223,\n    SINT_MAARTEN = 224,\n    SOLOMON_ISLANDS = 225,\n    SOMALIA = 226,\n    SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS = 227,\n    SOUTH_SUDAN = 228,\n    SUDAN = 229,\n    SURINAME = 230,\n    SVALBARD_AND_JAN_MAYEN = 231,\n    ESWATINI = 232,\n    SYRIA = 233,\n    TAJIKISTAN = 234,\n    TANZANIA = 235,\n    TOGO = 236,\n    TOKELAU = 237,\n    TONGA = 238,\n    TRINIDAD_AND_TOBAGO = 239,\n    TURKMENISTAN = 240,\n    TURKS_AND_CAICOS_ISLANDS = 241,\n    TUVALU = 242,\n    UNITED_STATES_MINOR_OUTLYING_ISLANDS = 243,\n    UZBEKISTAN = 244,\n    VANUATU = 245,\n    VATICAN_CITY = 246,\n    VIRGIN_ISLANDS_BRITISH = 247,\n    VIRGIN_ISLANDS_US = 248,\n    WALLIS_AND_FUTUNA = 249,\n    WESTERN_SAHARA = 250,\n    YEMEN = 251,\n    YUGOSLAVIA = 252,\n    ZAMBIA = 253,\n    ZIMBABWE = 254,\n    SCHENGEN_AREA = 255,\n    COUNT = 256\n}\n\nexport enum Region\n{\n    NONE = 0,\n    ALABAMA = 1,\n    ALASKA = 2,\n    ALBERTA = 3,\n    ARIZONA = 4,\n    ARKANSAS = 5,\n    AUSTRALIAN_CAPITAL_TERRITORY = 6,\n    BRITISH_COLUMBIA = 7,\n    CALIFORNIA = 8,\n    COLORADO = 9,\n    CONNECTICUT = 10,\n    DELAWARE = 11,\n    DISTRICT_OF_COLUMBIA = 12,\n    FLORIDA = 13,\n    GEORGIA = 14,\n    HAWAII = 15,\n    IDAHO = 16,\n    ILLINOIS = 17,\n    INDIANA = 18,\n    IOWA = 19,\n    KANSAS = 20,\n    KENTUCKY = 21,\n    LOUISIANA = 22,\n    MAINE = 23,\n    MANITOBA = 24,\n    MARYLAND = 25,\n    MASSACHUSETTS = 26,\n    MICHIGAN = 27,\n    MINNESOTA = 28,\n    MISSISSIPPI = 29,\n    MISSOURI = 30,\n    MONTANA = 31,\n    NEBRASKA = 32,\n    NEVADA = 33,\n    NEW_BRUNSWICK = 34,\n    NEW_HAMPSHIRE = 35,\n    NEW_JERSEY = 36,\n    NEW_MEXICO = 37,\n    NEW_SOUTH_WALES = 38,\n    NEW_YORK = 39,\n    NORTHERN_TERRITORY = 40,\n    NORTH_CAROLINA = 41,\n    NORTH_DAKOTA = 42,\n    NOVA_SCOTIA = 43,\n    OHIO = 44,\n    OKLAHOMA = 45,\n    ONTARIO = 46,\n    OREGON = 47,\n    PENNSYLVANIA = 48,\n    QUEBEC = 49,\n    QUEENSLAND = 50,\n    RHODE_ISLAND = 51,\n    SASKATCHEWAN = 52,\n    SOUTH_AUSTRALIA = 53,\n    SOUTH_CAROLINA = 54,\n    SOUTH_DAKOTA = 55,\n    TASMANIA = 56,\n    TENNESSEE = 57,\n    TEXAS = 58,\n    UTAH = 59,\n    VERMONT = 60,\n    VICTORIA = 61,\n    VIRGINIA = 62,\n    WASHINGTON = 63,\n    WESTERN_AUSTRALIA = 64,\n    WEST_VIRGINIA = 65,\n    WISCONSIN = 66,\n    WYOMING = 67,\n    YUKON = 68,\n    CIUDAD_DE_MEXICO = 69,\n    JALISCO = 70,\n    NEWFOUNDLAND_AND_LABRADOR = 71,\n    NUEVO_LEON = 72,\n    BAJA_CALIFORNIA = 73,\n    CHIHUAHUA = 74,\n    GUANAJUATO = 75,\n    GUERRERO = 76,\n    MEXICO = 77,\n    MICHOACAN = 78,\n    NEW_YORK_CITY = 79,\n    TAMAULIPAS = 80,\n    VERACRUZ = 81,\n    CHIAPAS = 82,\n    COAHUILA = 83,\n    DURANGO = 84,\n    GUERRERO_COCULA = 85,\n    GUERRERO_JUCHITAN = 86,\n    GUERRERO_TEPECOACUILCO = 87,\n    GUERRERO_TLACOAPA = 88,\n    GUJARAT = 89,\n    HIDALGO = 90,\n    KARNATAKA = 91,\n    KERALA = 92,\n    KHYBER_PAKHTUNKHWA = 93,\n    MADHYA_PRADESH = 94,\n    MAHARASHTRA = 95,\n    MORELOS = 96,\n    NAYARIT = 97,\n    OAXACA = 98,\n    PUEBLA = 99,\n    PUNJAB = 100,\n    QUERETARO = 101,\n    SAN_LUIS_POTOSI = 102,\n    SINALOA = 103,\n    SONORA = 104,\n    TABASCO = 105,\n    TAMIL_NADU = 106,\n    YUCATAN = 107,\n    ZACATECAS = 108,\n    AGUASCALIENTES = 109,\n    BAJA_CALIFORNIA_SUR = 110,\n    CAMPECHE = 111,\n    COLIMA = 112,\n    QUINTANA_ROO_BENITO_JUAREZ = 113,\n    UINTANA_ROO = 114,\n    QUINTANA_ROO_SOLIDARIDAD = 115,\n    TLAXCALA = 116,\n    QUINTANA_ROO_COZUMEL = 117,\n    SAO_PAOLO = 118,\n    RIO_DE_JANEIRO = 119,\n    RIO_GRANDE_DO_SUL = 120,\n    NORTHWEST_TERRITORIES = 121,\n    NUNAVUT = 122,\n    PRINCE_EDWARD_ISLAND = 123,\n    DISTRITO_FEDERAL = 124,\n    MARANHAO = 125,\n    MATO_GROSSO = 126,\n    MINAS_GERAIS = 127,\n    PARA = 128,\n    PARANA = 129,\n    PERNAMBUCO = 130,\n    SANTA_CATARINA = 131,\n    ANDHRA_PRADESH = 132,\n    CEARA = 133,\n    GOIAS = 134,\n    GUERRERO_ACAPULCO_DE_JUAREZ = 135,\n    HARYANA = 136,\n    SERGIPE = 137,\n    ALAGOAS = 138,\n    BANGSAMORO = 139,\n    COUNT = 140\n}\n\nexport enum DocumentType\n{\n    NONE = 0,\n    CONSULAR_ID = 1,\n    DL = 2,\n    DL_PUBLIC_SERVICES_CARD = 3,\n    EMPLOYMENT_PASS = 4,\n    FIN_CARD = 5,\n    ID = 6,\n    MULTIPURPOSE_ID = 7,\n    MYKAD = 8,\n    MYKID = 9,\n    MYPR = 10,\n    MYTENTERA = 11,\n    PAN_CARD = 12,\n    PROFESSIONAL_ID = 13,\n    PUBLIC_SERVICES_CARD = 14,\n    RESIDENCE_PERMIT = 15,\n    RESIDENT_ID = 16,\n    TEMPORARY_RESIDENCE_PERMIT = 17,\n    VOTER_ID = 18,\n    WORK_PERMIT = 19,\n    IKAD = 20,\n    MILITARY_ID = 21,\n    MYKAS = 22,\n    SOCIAL_SECURITY_CARD = 23,\n    HEALTH_INSURANCE_CARD = 24,\n    PASSPORT = 25,\n    S_PASS = 26,\n    ADDRESS_CARD = 27,\n    ALIEN_ID = 28,\n    ALIEN_PASSPORT = 29,\n    GREEN_CARD = 30,\n    MINORS_ID = 31,\n    POSTAL_ID = 32,\n    PROFESSIONAL_DL = 33,\n    TAX_ID = 34,\n    WEAPON_PERMIT = 35,\n    VISA = 36,\n    BORDER_CROSSING_CARD = 37,\n    DRIVER_CARD = 38,\n    GLOBAL_ENTRY_CARD = 39,\n    MYPOLIS = 40,\n    NEXUS_CARD = 41,\n    PASSPORT_CARD = 42,\n    PROOF_OF_AGE_CARD = 43,\n    REFUGEE_ID = 44,\n    TRIBAL_ID = 45,\n    VETERAN_ID = 46,\n    CITIZENSHIP_CERTIFICATE = 47,\n    MY_NUMBER_CARD = 48,\n    CONSULAR_PASSPORT = 49,\n    MINORS_PASSPORT = 50,\n    MINORS_PUBLIC_SERVICES_CARD = 51,\n    DRIVING_PRIVILEGE_CARD = 52,\n    ASYLUM_REQUEST = 53,\n    DRIVER_QUALIFICATION_CARD = 54,\n    PROVISIONAL_DL = 55,\n    REFUGEE_PASSPORT = 56,\n    SPECIAL_ID = 57,\n    UNIFORMED_SERVICES_ID = 58,\n    IMMIGRANT_VISA = 59,\n    CONSULAR_VOTER_ID = 60,\n    TWIC_CARD = 61,\n    EXIT_ENTRY_PERMIT = 62,\n    MAINLAND_TRAVEL_PERMIT_TAIWAN = 63,\n    NBI_CLEARANCE = 64,\n    PROOF_OF_REGISTRATION = 65,\n    TEMPORARY_PROTECTION_PERMIT = 66,\n    AFGHAN_CITIZEN_CARD = 67,\n    EID = 68,\n    PASS = 69,\n    SIS_ID = 70,\n    ASIC_CARD = 71,\n    BIDOON_CARD = 72,\n    INTERIM_HEALTH_INSURANCE_CARD = 73,\n    NON_VOTER_ID = 74,\n    RECIPROCAL_HEALTH_INSURANCE_CARD = 75,\n    VEHICLE_REGISTRATION = 76,\n    ESAAD_CARD= 77,\n    COUNT = 78\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n *\n */\n\nimport { ClassFilter } from \"./ClassFilter\";\nimport { DetailedFieldType } from \"./DetailedFieldType\";\n\nexport class CustomClassRules\n{\n    /**\n     * Specified fields will overrule our class field rules if filter conditions are met.\n     */\n    classFilter: ClassFilter = new ClassFilter();\n\n    /**\n     * Fields to overrule our class field rules.\n     */\n    fields: Array<DetailedFieldType> = new Array<DetailedFieldType>();\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n *\n */\n\nimport { AlphabetType } from \"./AlphabetType\";\nimport { FieldType } from \"./FieldType\";\n\nexport class DetailedFieldType\n{\n    fieldType: FieldType;\n\n    alphabetType: AlphabetType;\n\n    constructor( fieldType: FieldType, alphabetType: AlphabetType )\n    {\n        this.fieldType = fieldType;\n        this.alphabetType = alphabetType;\n    }\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/** List of possible types of fields that are extracted from identity documents. */\nexport enum FieldType\n{\n    AdditionalAddressInformation = 0,\n    AdditionalNameInformation = 1,\n    AdditionalOptionalAddressInformation = 2,\n    AdditionalPersonalIdNumber = 3,\n    Address = 4,\n    ClassEffectiveDate = 5,\n    ClassExpiryDate = 6,\n    Conditions = 7,\n    DateOfBirth = 8,\n    DateOfExpiry = 9,\n    DateOfIssue = 10,\n    DocumentAdditionalNumber = 11,\n    DocumentOptionalAdditionalNumber = 12,\n    DocumentNumber = 13,\n    Employer = 14,\n    Endorsements = 15,\n    FathersName = 16,\n    FirstName = 17,\n    FullName = 18,\n    IssuingAuthority = 19,\n    LastName = 20,\n    LicenceType = 21,\n    LocalizedName = 22,\n    MaritalStatus = 23,\n    MothersName = 24,\n    Mrz = 25,\n    Nationality = 26,\n    PersonalIdNumber = 27,\n    PlaceOfBirth = 28,\n    Profession = 29,\n    Race = 30,\n    Religion = 31,\n    ResidentialStatus = 32,\n    Restrictions = 33,\n    Sex = 34,\n    VehicleClass = 35,\n    BloodType = 36,\n    Sponsor = 37,\n    VisaType = 38,\n    DocumentSubtype = 39,\n    Remarks = 40,\n    ResidencePermitType = 41,\n    ManufacturingYear = 42,\n    VehicleType = 43,\n    DependentDateOfBirth = 44,\n    DependentSex = 45,\n    DependentDocumentNumber = 46,\n    DependentFullName = 47,\n    EligibilityCategory = 48,\n    SpecificDocumentValidity = 49,\n    VehicleOwner = 50,\n\n    /** Number of possible field types. */\n    Count\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n\nexport enum ImageExtractionType {\n    FullDocument,\n    Face,\n    Signature\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nexport interface ImageAnalysisResult\n{\n    /**\n     * Indicates if blur was detected on the scanned image.\n     */\n    readonly blurDetected: boolean;\n\n    /**\n     * Indicates if glare was detected on the scanned image.\n     */\n    readonly glareDetected: boolean;\n\n    /**\n     * Orientation of the card detected on the scanned image.\n     */\n    readonly cardOrientation: CardOrientation;\n\n    /**\n     * The color status determined from scanned image.\n     */\n    readonly documentImageColorStatus: DocumentImageColorStatus;\n\n    /**\n     * The Moire pattern detection status determined from the scanned image.\n     */\n    readonly documentImageMoireStatus: ImageAnalysisDetectionStatus;\n\n    /**\n     * Face detection status determined from the scanned image.\n     */\n    readonly faceDetectionStatus: ImageAnalysisDetectionStatus;\n\n    /**\n     * Mrz detection status determined from the scanned image.\n     */\n    readonly mrzDetectionStatus: ImageAnalysisDetectionStatus;\n\n    /**\n     * Barcode detection status determined from the scanned image.\n     */\n    readonly barcodeDetectionStatus: ImageAnalysisDetectionStatus;\n\n    /**\n     * RealID detection status determined from the scanned image.\n     */\n    readonly realIDDetectionStatus: ImageAnalysisDetectionStatus;\n\n    /**\n     * Rotation of the card detected on the scanned image.\n     */\n    readonly cardRotation: CardRotation | undefined;\n}\n\n/**\n * DocumentImageColorStatus enum defines possible color statuses determined from scanned image.\n */\nexport enum DocumentImageColorStatus\n{\n    /** Determining image color status was not performed */\n    NotAvailable = 0,\n\n    /** Black-and-white image scanned */\n    BlackAndWhite,\n\n    /** Color image scanned */\n    Color\n}\n\n/**\n *  ImageAnalysisDetectionStatus enum defines possible states of specific image object detection.\n */\nexport enum ImageAnalysisDetectionStatus\n{\n    /** Detection was not performed */\n    NotAvailable = 0,\n\n    /** Object not detected on input image */\n    NotDetected,\n\n    /** Object detected on input image */\n    Detected\n}\n\n/**\n * CardOrientation enum defines possible states of card orientation.\n */\nexport enum CardOrientation\n{\n    /** Card is horizontally placed inside the camera frame */\n    Horizontal = 0,\n\n    /** Card is vertically placed inside the camera frame */\n    Vertical = 1,\n\n    /** Card orientation is not available */\n    NotAvailable = 2,\n}\n\n/**\n * CardRotation enum defines possible states of card rotation.\n */\nexport enum CardRotation {\n    /** Card is in its original position */\n    None,\n\n    /** Card is rotated 90 degrees to the right */\n    Clockwise90,\n\n    /** Card is rotated 90 degrees to the left */\n    CounterClockwise90,\n\n    /** Card is flipped upside down */\n    UpsideDown,\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/** Detailed information about the recognition process. */\nexport enum ProcessingStatus\n{\n    /** The document was fully scanned and data was extracted as expected. */\n    Success = 0,\n\n    /** The document was not found on the image. */\n    DetectionFailed,\n\n    /** Preprocessing of the input image has failed. */\n    ImagePreprocessingFailed,\n\n    /**\n     * Stability is achieved when the same document is provided on consecutive frames,\n     * resulting in a consistent recognition between frames prior to data extraction.\n     * Valid only for video feed.\n     */\n    StabilityTestFailed,\n\n    /**\n     * The wrong side of the document is scanned. Front side scan is completed and back side is expected, but not\n     * provided by the end-user.\n     *\n     * Possible also if front is expected at the start of the scanning process and back is presented first\n     * by the end-user.\n     */\n    ScanningWrongSide,\n\n    /** Unexpected fields are present on the document and removed from the final result. */\n    FieldIdentificationFailed,\n\n    /** Fields expected to appear on the scanned document have not been found. */\n    MandatoryFieldMissing,\n\n    /**\n     * One of the extracted fields contains a character which does not satisfy the rule defined for that\n     * specific field.\n     *\n     * This processing status can only occur if validateResultCharacters setting is set to true.\n     */\n    InvalidCharactersFound,\n\n    /** Failed to return a requested image. */\n    ImageReturnFailed,\n\n    /** Reading or parsing of the barcode has failed. */\n    BarcodeRecognitionFailed,\n\n    /** Parsing of the MRZ has failed. */\n    MrzParsingFailed,\n\n    /**\n     * Currently scanned document has been filtered out by its class.\n     * Occurrence of this processing status is affected by classFilter setting.\n     */\n    ClassFiltered,\n\n    /** Document currently not supported by the recognizer. */\n    UnsupportedClass,\n\n    /** Document class is not included in the issued license. */\n    UnsupportedByLicense,\n\n    /**\n     * Front side recognition has completed successfully, and recognizer is waiting for the other side to be scanned.\n     */\n    AwaitingOtherSide,\n\n    /** If front side recognition has not completed successfully, the back side is not scanned. */\n    NotScanned,\n\n    /** The barcode was not found on the image. This processing status can only occur if document has mandatory\n        barcode.  */\n    BarcodeDetectionFailed,\n\n    /** Number of possible processing statuses. */\n    Count\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\n/**\n * RecognitionMode enum defines possible recognition modes for BlinkID Single-side and BlinkID Multi-side recognizers.\n */\nexport enum RecognitionMode\n{\n    /** No recognition performed. */\n    None            = 0,\n\n    /** Recognition of mrz document (does not include visa and passport) */\n    MrzId           = 1,\n\n    /** Recognition of visa mrz. */\n    MrzVisa         = 2,\n\n    /** Recognition of passport mrz. */\n    MrzPassport     = 3,\n\n    /** Recognition of documents that have face photo on the front. */\n    PhotoId         = 4,\n\n    /** Detailed document recognition. */\n    FullRecognition = 5,\n\n    /** Recognition of barcode document. */\n    BarcodeId       = 6,\n\n    /** Number of possible values */\n    Count           = 7\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { AdditionalProcessingInfo } from \"./AdditionalProcessingInfo\";\nimport { AnonymizationMode } from \"./AnonymizationMode\";\nimport { BarcodeResult } from \"./BarcodeResult\";\nimport { ClassInfo } from \"./ClassInfo\";\nimport { DriverLicenseDetailedInfo } from \"./DriverLicenseDetailedInfo\";\nimport { DateResult, StringResult } from \"./GenericResultStructures\";\nimport { ImageAnalysisResult } from \"./ImageAnalysisResult\";\nimport { ProcessingStatus } from \"./ProcessingStatus\";\nimport { RecognitionMode } from \"./RecognitionMode\";\nimport { RecognitionModeFilter } from \"./RecognitionModeFilter\";\nimport { VIZResult } from \"./VIZResult\";\nimport { StrictnessLevel } from \"./StrictnessLevel\";\nimport { DependentInfo } from \"./DependentInfo\";\n\nimport {\n    CameraFrameResult,\n    ExtensionFactors,\n    FaceImageOptions,\n    FullDocumentImageOptions,\n    ImageResult,\n    SignatureImageOptions,\n    validateDpi,\n} from \"../ImageOptions\";\n\nimport { MrzResult } from \"../MRTD/MrtdStructures\";\n\nimport { Recognizer, RecognizerResult, RecognizerSettings, WasmSDK } from \"../../../MicroblinkSDK/DataStructures\";\nimport { ClassAnonymizationSettings } from \"./ClassAnonymizationSettings\";\nimport { Rectangle } from \"../../../MicroblinkSDK/Geometry\";\nimport { DocumentSide } from \"../../../MicroblinkSDK/DocumentSide\";\nimport { CustomClassRules } from \"./CustomClassRules\";\n\n// required for the final SDK\nexport * from \"./AddressDetailedInfo\";\nexport * from \"./AdditionalProcessingInfo\";\nexport * from \"./AlphabetType\";\nexport * from \"./AnonymizationMode\";\nexport * from \"./BarcodeResult\";\nexport * from \"./ClassFilter\";\nexport * from \"./ClassInfo\";\nexport * from \"./CustomClassRules\";\nexport * from \"./DetailedFieldType\";\nexport * from \"./DocumentNumberAnonymizationSettings\";\nexport * from \"./DriverLicenseDetailedInfo\";\nexport * from \"./FieldType\";\nexport * from \"./ImageExtractionType\";\nexport * from \"./GenericResultStructures\";\nexport * from \"./ImageAnalysisResult\";\nexport * from \"./ProcessingStatus\";\nexport * from \"./RecognitionMode\";\nexport * from \"./RecognitionModeFilter\";\nexport * from \"./StrictnessLevel\";\nexport * from \"./VIZResult\";\n\n/**\n * A barcode scanning started callback function.\n */\nexport type BarcodeScanningStartedCallback = () => void;\n\n/**\n * A classifier callback function.\n * @param supported True if document is supported for recognition, false otherwise.\n */\nexport type ClassifierCallback = ( supported: boolean ) => void;\n\n/**\n * A settings object that is used for configuring the BlinkIdSingleSideRecognizer.\n */\nexport class BlinkIdSingleSideRecognizerSettings\nimplements RecognizerSettings, FullDocumentImageOptions, FaceImageOptions, SignatureImageOptions\n{\n    /**\n     * Skip processing of blurred frames.\n     */\n    enableBlurFilter = true;\n\n    /**\n     * Skip processing of frames which contain too much glare.\n     */\n    enableGlareFilter = true;\n\n    /**\n     * Strictness level for blur detection.\n     */\n    blurStrictnessLevel = StrictnessLevel.Normal;\n\n    /**\n     * Strictness level for glare detection.\n     */\n    glareStrictnessLevel = StrictnessLevel.Normal;\n\n    /**\n     * Allow reading of non-standard MRZ (Machine Readable Zone). Only raw MRZ result is returned.\n     * Final recognizer state is not affected.\n     */\n    allowUnparsedMrzResults = false;\n\n    allowBarcodeScanOnly = false;\n\n    combineFrameResults = true;\n\n    /**\n     * Allow reading of standard MRZ (Machine Readable Zone) which gets successfully parsed, but check digits are\n     * incorrect (do not comply with the ICAO standard).\n     *\n     * Final recognizer state is not affected.\n     */\n    allowUnverifiedMrzResults = true;\n\n    /**\n     * Enable or disable recognition of specific document groups supported by the current license.\n     * By default all modes are enabled.\n     */\n    recognitionModeFilter = new RecognitionModeFilter();\n\n    /**\n     * Save the raw camera frames at the moment of the data extraction or timeout.\n     * This significantly increases memory consumption. The scanning performance is not affected.\n     */\n    saveCameraFrames = false;\n\n    /**\n     * Process only cropped document images with corrected perspective (frontal images of a document).\n     * This only applies to still images - video feed will ignore this setting.\n     */\n    scanCroppedDocumentImage = false;\n\n    /**\n     * Allow only results containing expected characters for a given field.\n     *\n     * Each field is validated against a set of rules.\n     *\n     * All fields have to be successfully validated in order for a recognizer state to be ‘valid’.\n     * Setting is used to improve scanning accuracy.\n     */\n    validateResultCharacters = true;\n\n    /**\n     * Redact specific fields based on requirements or laws regarding a specific document.\n     *\n     * Data can be redacted from the image, the result or both.\n     *\n     * The setting applies to certain documents only.\n     */\n    anonymizationMode = AnonymizationMode.FullResult;\n\n    /**\n     * Redact fields for specific document class.\n     *\n     * Fields specified by requirements or laws for a specific document will be redacted regardless of this setting.\n     *\n     * Based on anonymizationMode setting, data will be redacted from the image, the result or both.\n     */\n    additionalAnonymization: Array<ClassAnonymizationSettings>  | null = null ;\n\n    /**\n     * Define custom rules for specific document class.\n     *\n     * The new class rules will be a combination of our internal and user-defined rules.\n     *\n     * The more detailed class filter will have priority over the other.\n     */\n    customClassRules: Array<CustomClassRules> | null = null;\n\n    /**\n     * Called when barcode scanning step starts.\n     */\n    barcodeScanningStartedCallback: BarcodeScanningStartedCallback | null = null;\n\n    /**\n     * Called when recognizer classifies a document.\n     */\n    classifierCallback: ClassifierCallback | null = null;\n\n    /**\n     * If set to `null`, all supported documents will be recognized.\n     * Otherwise, only classes from given array will be recognized and all other\n     * documents will be treated as \"not supported\" (observable via classifierCallback).\n     */\n    allowedDocumentClasses: Array<ClassInfo> | null = null;\n\n    /**\n     * Minimum required distance between the edge of the scanning frame and the document.\n     *\n     * Defined as a percentage of the frame width.\n     *\n     * Default value is 0.0f in which case the padding edge and the image edge are the same.\n     * Alternative recommended value is 0.02f.\n     */\n    paddingEdge = 0.0;\n\n    // implementation of the FullDocumentImageOptions interface\n    returnFullDocumentImage = false;\n\n    returnEncodedFullDocumentImage = false;\n\n    private _fullDocumentImageDpi = 250;\n\n    get fullDocumentImageDpi(): number\n    {\n        return this._fullDocumentImageDpi;\n    }\n\n    set fullDocumentImageDpi( value: number )\n    {\n        validateDpi( value );\n        this._fullDocumentImageDpi = value;\n    }\n\n    fullDocumentImageExtensionFactors = new ExtensionFactors();\n\n    // implementation of the FaceImageOptions interface\n    returnFaceImage = false;\n\n    returnEncodedFaceImage = false;\n\n    private _faceImageDpi = 250;\n\n    get faceImageDpi(): number\n    {\n        return this._faceImageDpi;\n    }\n\n    set faceImageDpi( value: number )\n    {\n        validateDpi( value );\n        this._faceImageDpi = value;\n    }\n\n    // implementation of the SignatureImageOptions interface\n    returnSignatureImage = false;\n\n    returnEncodedSignatureImage = false;\n\n    private _signatureImageDpi = 250;\n\n    get signatureImageDpi(): number\n    {\n        return this._signatureImageDpi;\n    }\n\n    set signatureImageDpi( value: number )\n    {\n        validateDpi( value );\n        this._signatureImageDpi = value;\n    }\n}\n\n/**\n * The base result of image recognition when using either the BlinkIdSingleSideRecognizer or BlinkIdMultiSideRecognizer.\n */\nexport interface BaseBlinkIdRecognizerResult extends RecognizerResult {\n    /**\n     * The additional address information of the document owner.\n     */\n    readonly additionalAddressInformation: StringResult;\n\n    /**\n     * The additional name information of the document owner.\n     */\n    readonly additionalNameInformation: StringResult;\n\n    /**\n     * The one more additional address information of the document owner.\n     */\n    readonly additionalOptionalAddressInformation: StringResult;\n\n    /**\n     * The fathers name of the document owner.\n     */\n    readonly fathersName: StringResult;\n\n    /**\n     * The mothers name of the document owner.\n     */\n    readonly mothersName: StringResult;\n\n    /**\n     * The address of the document owner.\n     */\n    readonly address: StringResult;\n\n    /**\n     * The data extracted from the barcode.\n     */\n    readonly barcode: BarcodeResult;\n    /**\n    * This member indicates whether the barcode scanning step was utilized during the\n    * process.\n    * If the barcode scanning step was executed: a parsable barcode image will be stored in the\n    * `barcodeCameraFrame`.\n    * If the barcode scanning step was not executed: a parsable barcode image will be stored in the\n    * `fullDocumentFrontImage` or `fullDocumentBackImage` depending on which side the barcode was on.\n    * */\n    readonly barcodeStepUsed: boolean;\n\n    /**\n     * The class info\n     */\n    readonly classInfo: ClassInfo;\n\n    /**\n     * The date of birth of the document owner.\n     */\n    readonly dateOfBirth: DateResult;\n\n    /**\n     * The date of expiry of the document.\n     */\n    readonly dateOfExpiry: DateResult;\n\n    /**\n     * Determines if date of expiry is permanent.\n     */\n    readonly dateOfExpiryPermanent: boolean;\n\n    /**\n     * The date of issue of the document.\n     */\n    readonly dateOfIssue: DateResult;\n\n    /**\n     * The additional number of the document.\n     */\n    readonly documentAdditionalNumber: StringResult;\n\n    /**\n     * The one more additional number of the document.\n     */\n    readonly documentOptionalAdditionalNumber: StringResult;\n\n    /**\n     * The document number.\n     */\n    readonly documentNumber: StringResult;\n\n    /**\n     * The driver license detailed info\n     */\n    readonly driverLicenseDetailedInfo: DriverLicenseDetailedInfo;\n\n    /**\n     * The employer of the document owner.\n     */\n    readonly employer: StringResult;\n\n    /**\n     * The face image\n     */\n    readonly faceImage: ImageResult;\n\n    /**\n     * The location of the face image on the document.\n     */\n    readonly faceImageLocation: Rectangle | undefined;\n\n    /**\n     * The side of the document in which the face image is located.\n     */\n    readonly faceImageSide: DocumentSide | undefined;\n\n    /**\n     * The first name of the document owner.\n     */\n    readonly firstName: StringResult;\n\n    /**\n     * The full name of the document owner.\n     */\n    readonly fullName: StringResult;\n\n    /**\n     * The issuing authority of the document.\n     */\n    readonly issuingAuthority: StringResult;\n\n    /**\n     * The last name of the document owner.\n     */\n    readonly lastName: StringResult;\n\n    /**\n     * The localized name of the document owner.\n     */\n    readonly localizedName: StringResult;\n\n    /**\n     * The marital status of the document owner.\n     */\n    readonly maritalStatus: StringResult;\n\n    /**\n     * The data extracted from the machine readable zone.\n     */\n    readonly mrz: MrzResult;\n\n    /**\n     * The nationality of the documet owner.\n     */\n    readonly nationality: StringResult;\n\n    /**\n     * The personal identification number.\n     */\n    readonly personalIdNumber: StringResult;\n\n    /**\n     * The place of birth of the document owner.\n     */\n    readonly placeOfBirth: StringResult;\n\n    /**\n     * Status of the last recognition process.\n     */\n    readonly processingStatus: ProcessingStatus;\n\n    /**\n     * The profession of the document owner.\n     */\n    readonly profession: StringResult;\n\n    /**\n     * The race of the document owner.\n     */\n    readonly race: StringResult;\n\n    /**\n     * Recognition mode used to scan current document.\n     */\n    readonly recognitionMode: RecognitionMode;\n\n    /**\n     * The religion of the document owner.\n     */\n    readonly religion: StringResult;\n\n    /**\n     * The residential status of the document owner.\n     */\n    readonly residentialStatus: StringResult;\n\n    /**\n     * The sex of the document owner.\n     */\n    readonly sex: StringResult;\n\n    /**\n     * The image of the signature\n     */\n    readonly signatureImage: ImageResult;\n\n     /**\n      * Sponsor of a document owner.\n      */\n     readonly sponsor: StringResult;\n\n    /**\n     * Blood type on a document owner.\n     */\n    readonly bloodType: StringResult;\n\n    /**\n     * Subtype of a document\n     */\n    readonly documentSubtype: StringResult;\n\n    /**\n     * Remarks on a document\n     */\n    readonly remarks: StringResult;\n\n    /**\n     * Type of residence permit\n     */\n    readonly residencePermitType: StringResult;\n\n    /**\n     * Type of visa\n     */\n    readonly visaType: StringResult;\n\n    /**\n     * The manufacturing year.\n     */\n    readonly manufacturingYear: StringResult;\n\n    /**\n     * The vehicle type.\n     */\n    readonly vehicleType: StringResult;\n\n    /**\n     * The eligibility category.\n     */\n    readonly eligibilityCategory: StringResult;\n\n    /**\n     * The specific document validity.\n     */\n    readonly specificDocumentValidity: StringResult;\n\n    /**\n     * The dependents info.\n     */\n    readonly dependentsInfo: Array< DependentInfo >;\n\n    /**\n     * The vehicle owner.\n     */\n    readonly vehicleOwner: StringResult;\n}\n\n/**\n * The result of image recognition when using the BlinkIdSingleSideRecognizer.\n */\nexport interface BlinkIdSingleSideRecognizerResult extends BaseBlinkIdRecognizerResult {\n    /**\n     * Detailed information about missing, invalid and extra fields.\n     */\n    readonly additionalProcessingInfo: AdditionalProcessingInfo;\n\n    /**\n     * Full video feed frame from which barcode data was extracted.\n     */\n    readonly barcodeCameraFrame: CameraFrameResult;\n\n    /**\n     * Full video feed frame from which document data was extracted.\n     */\n    readonly cameraFrame: CameraFrameResult;\n\n    /**\n     * Cropped and dewarped image of a document that has been scanned.\n     */\n    readonly fullDocumentImage: ImageResult;\n\n    /**\n     * Result of document image analysis.\n     */\n    readonly imageAnalysisResult: ImageAnalysisResult;\n\n    /**\n     * The data extracted from the visual inspection zone.\n     */\n    readonly viz: VIZResult;\n}\n\n/**\n * The Blink ID Recognizer is used for scanning any ID document.\n */\nexport interface BlinkIdSingleSideRecognizer extends Recognizer {\n    /** Returns the currently applied BlinkIdSingleSideRecognizerSettings. */\n    currentSettings(): Promise<BlinkIdSingleSideRecognizerSettings>;\n\n    /** Applies new settings to the recognizer. */\n    updateSettings( newSettings: BlinkIdSingleSideRecognizerSettings ): Promise<void>;\n\n    /** Returns the current result of the recognition. */\n    getResult(): Promise<BlinkIdSingleSideRecognizerResult>;\n}\n\n/**\n * This function is used to create a new instance of `BlinkIdSingleSideRecognizer`.\n * @param wasmSDK Instance of WasmSDK which will be used to communicate with the WebAssembly module.\n */\nexport async function createBlinkIdSingleSideRecognizer( wasmSDK: WasmSDK ): Promise<BlinkIdSingleSideRecognizer>\n{\n    return wasmSDK.mbWasmModule.newRecognizer( \"BlinkIdSingleSideRecognizer\" ) as Promise<BlinkIdSingleSideRecognizer>;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport { AdditionalProcessingInfo } from \"./AdditionalProcessingInfo\";\nimport { BlinkIdSingleSideRecognizerSettings, BaseBlinkIdRecognizerResult } from \"./BlinkIdSingleSideRecognizer\";\nimport { CameraFrameResult, ImageResult } from \"../ImageOptions\";\nimport { DataMatchResult } from \"./DataMatch\";\nimport { ImageAnalysisResult } from \"./ImageAnalysisResult\";\nimport { ProcessingStatus } from \"./ProcessingStatus\";\nimport { VIZResult } from \"./VIZResult\";\n\nimport\n{\n    Recognizer,\n    WasmSDK\n} from \"../../../MicroblinkSDK/DataStructures\";\n\n/**\n * A settings object that is used for configuring the BlinkIdMultiSideRecognizer.\n */\nexport class BlinkIdMultiSideRecognizerSettings extends BlinkIdSingleSideRecognizerSettings\n{\n    /**\n     * Proceed to scan the back side of a document even if some of the validity checks have failed while scanning the\n     * front side of a document.\n     */\n    allowUncertainFrontSideScan = false;\n\n    /**\n     * Configure the number of characters per field that are allowed to be inconsistent in data match.\n     */\n    maxAllowedMismatchesPerField = 0;\n\n    /**\n     * Back side of the document will not be scanned if only the front side is supported for a specific document.\n     *\n     * If set to false, a photo of the back side will be returned, as well as barcode or MRZ (Machine Readable Zone) if\n     * either is present.\n     */\n    skipUnsupportedBack = false;\n\n    /**\n     * Scan only the data page ( page containing MRZ ) of the passport.\n     * If set to `false`, it will be required to scan the second page of certain passports.\n     */\n    scanPassportDataPageOnly = false;\n}\n\n/**\n * The result of image recognition when using the BlinkIdMultiSideRecognizer.\n */\nexport interface BlinkIdMultiSideRecognizerResult extends BaseBlinkIdRecognizerResult\n{\n    /**\n     * Detailed information about missing, invalid and extra fields.\n     */\n    readonly backAdditionalProcessingInfo: AdditionalProcessingInfo;\n\n    /**\n     * Detailed information about missing, invalid and extra fields.\n     */\n    readonly frontAdditionalProcessingInfo: AdditionalProcessingInfo;\n\n    /**\n     * Full video feed frame from which barcode data was extracted.\n     */\n    readonly barcodeCameraFrame: CameraFrameResult;\n\n    /**\n     * Full video feed frame from which document data on front side was extracted.\n     */\n    readonly frontCameraFrame: CameraFrameResult;\n\n    /**\n     * Full video feed frame from which document data on back side was extracted.\n     */\n    readonly backCameraFrame: CameraFrameResult;\n\n    /**\n     * Cropped and dewarped back side image of a document that has been scanned.\n     */\n    readonly fullDocumentBackImage: ImageResult;\n\n    /**\n     * Cropped and dewarped front side image of a document that has been scanned.\n     */\n    readonly fullDocumentFrontImage: ImageResult;\n\n    /**\n     * Result of analysis of the image of the front side of the document.\n     */\n    readonly frontImageAnalysisResult: ImageAnalysisResult;\n\n    /**\n     * Result of analysis of the image of the back side of the document.\n     */\n    readonly backImageAnalysisResult: ImageAnalysisResult;\n\n    /**\n     * The data extracted from the front side visual inspection zone.\n     */\n    readonly frontViz: VIZResult;\n\n    /**\n     * The data extracted from the back side visual inspection zone.\n     */\n    readonly backViz: VIZResult;\n\n    /**\n     * Status of the last recognition process for the front side of the document.\n     */\n    readonly frontProcessingStatus: ProcessingStatus;\n\n    /**\n     * Status of the last recognition process for the back side of the document.\n     */\n    readonly backProcessingStatus: ProcessingStatus;\n\n    /**\n     * The result of the data matching algorithm for scanned parts/sides of the document.\n     *\n     * For example if date of expiry is scanned from the front and back side of the document and\n     * values do not match, this method will return {@link DataMatchResult#Failed} for that specific\n     * field, and for data match on the whole document.\n     *\n     * Result for the whole document will be {@link DataMatchResult#Success} only if scanned values\n     * for all fields that are compared are the same. If data matching has not been performed,\n     * result will be {@link DataMatchResult#NotPerformed}.\n     */\n    readonly dataMatchResult: DataMatchResult;\n\n    /**\n     * {@code true} if recognizer has finished scanning first side and is now scanning back side,\n     * {@code false} if it's still scanning first side.\n     */\n    readonly scanningFirstSideDone: boolean;\n}\n\n/**\n * The Blink ID MultiSide Recognizer is used for scanning both sides of any ID document.\n */\nexport interface BlinkIdMultiSideRecognizer extends Recognizer\n{\n    /** Returns the currently applied BlinkIdMultiSideRecognizerSettings. */\n    currentSettings(): Promise< BlinkIdMultiSideRecognizerSettings >\n\n    /** Applies new settings to the recognizer. */\n    updateSettings( newSettings: BlinkIdMultiSideRecognizerSettings ): Promise< void >;\n\n    /** Returns the current result of the recognition. */\n    getResult(): Promise< BlinkIdMultiSideRecognizerResult >;\n}\n\n/**\n * This function is used to create a new instance of `BlinkIdMultiSideRecognizer`.\n * @param wasmSDK Instance of WasmSDK which will be used to communicate with the WebAssembly module.\n */\nexport async function createBlinkIdMultiSideRecognizer( wasmSDK: WasmSDK ): Promise< BlinkIdMultiSideRecognizer >\n{\n    return wasmSDK.mbWasmModule.newRecognizer( \"BlinkIdMultiSideRecognizer\" ) as Promise< BlinkIdMultiSideRecognizer >;\n}\n","/**\n * Copyright (c) Microblink Ltd. All rights reserved.\n */\n\nimport\n{\n    Recognizer,\n    RecognizerResult,\n    RecognizerSettings,\n    MBDate,\n    WasmSDK\n} from \"../../../MicroblinkSDK/DataStructures\";\n\nimport { BarcodeData } from \"../../BlinkBarcode/BarcodeData\";\n\n/**\n * A settings object that is used for configuring the IdBarcodeRecognizer.\n */\nexport class IdBarcodeRecognizerSettings implements RecognizerSettings\n{\n\n}\n\n/**\n * The result of image recognition when using the IdBarcodeRecognizer.\n */\nexport interface IdBarcodeRecognizerResult extends RecognizerResult\n{\n    /**\n     *  The additional name information of the document owner.\n     */\n    readonly additionalNameInformation: string;\n\n    /**\n     *  The address of the document owner.\n     */\n    readonly address: string;\n\n    /**\n     *  The raw, unparsed barcode data.\n     */\n    readonly barcodeData: BarcodeData;\n\n    /**\n     * The city address portion of the document owner.\n     */\n    readonly city: string;\n\n    /**\n     *  The date of birth of the document owner.\n     */\n    readonly dateOfBirth: MBDate;\n\n    /**\n     *  The date of expiry of the document.\n     */\n    readonly dateOfExpiry: MBDate;\n\n    /**\n     *  The date of issue of the document.\n     */\n    readonly dateOfIssue: MBDate;\n\n    /**\n     *  The additional number of the document.\n     */\n    readonly documentAdditionalNumber: string;\n\n    /**\n     *  The document number.\n     */\n    readonly documentNumber: string;\n\n    /**\n     *  The document type deduced from the recognized barcode\n     */\n    readonly documentType: IdBarcodeDocumentType;\n\n    /**\n     *  The employer of the document owner.\n     */\n    readonly employer: string;\n\n    /**\n     * The additional privileges granted to the driver license owner.\n     */\n    readonly endorsements: string;\n\n    /**\n     * Document specific extended elements that contain all barcode fields in their original form.\n     * The indices of specific data within the array are given by the BarcodeElementKey enum.\n     *\n     * For example, to obtain the first name you can use extendedElements[BarcodeElementKey.CustomerFirstName].\n     *\n     * Currently this is only filled for AAMVACompliant documents.\n     */\n    readonly extendedElements: Array<string>;\n\n    /**\n     *  The first name of the document owner.\n     */\n    readonly firstName: string;\n\n    /**\n     *  The full name of the document owner.\n     */\n    readonly fullName: string;\n\n    /**\n     *  The issuing authority of the document.\n     */\n    readonly issuingAuthority: string;\n\n    /**\n     * The jurisdiction code address portion of the document owner.\n     */\n    readonly jurisdiction: string;\n\n    /**\n     *  The last name of the document owner.\n     */\n    readonly lastName: string;\n\n    /**\n     *  The marital status of the document owner.\n     */\n    readonly maritalStatus: string;\n\n    /**\n     * The middle name of the document owner.\n     */\n    readonly middleName: string;\n\n    /**\n     *  The nationality of the documet owner.\n     */\n    readonly nationality: string;\n\n    /**\n     *  The personal identification number.\n     */\n    readonly personalIdNumber: string;\n\n    /**\n     *  The place of birth of the document owner.\n     */\n    readonly placeOfBirth: string;\n\n    /**\n     * The postal code address portion of the document owner.\n     */\n    readonly postalCode: string;\n\n    /**\n     *  The profession of the document owner.\n     */\n    readonly profession: string;\n\n    /**\n     *  The race of the document owner.\n     */\n    readonly race: string;\n\n    /**\n     *  The religion of the document owner.\n     */\n    readonly religion: string;\n\n    /**\n     *  The residential stauts of the document owner.\n     */\n    readonly residentialStatus: string;\n\n    /**\n     * The restrictions to driving privileges for the driver license owner.\n     */\n    readonly restrictions: string;\n\n    /**\n     *  The sex of the document owner.\n     */\n    readonly sex: string;\n\n    /**\n     * The street address portion of the document owner.\n     */\n    readonly street: string;\n\n    /**\n     * The type of vehicle the driver license owner has privilege to drive.\n     */\n    readonly vehicleClass: string;\n}\n\n/**\n * The ID Barcode Recognizer is used for scanning barcodes on ID documents.\n */\nexport interface IdBarcodeRecognizer extends Recognizer\n{\n    /** Returns the currently applied IdBarcodeRecognizerSettings. */\n    currentSettings(): Promise< IdBarcodeRecognizerSettings >\n\n    /** Applies new settings to the recognizer. */\n    updateSettings( newSettings: IdBarcodeRecognizerSettings ): Promise< void >;\n\n    /** Returns the current result of the recognition. */\n    getResult(): Promise< IdBarcodeRecognizerResult >;\n}\n\n/**\n * This function is used to create a new instance of `IdBarcodeRecognizer`.\n * @param wasmSDK Instance of WasmSDK which will be used to communicate with the WebAssembly module.\n */\nexport async function createIdBarcodeRecognizer( wasmSDK: WasmSDK ): Promise< IdBarcodeRecognizer >\n{\n    return wasmSDK.mbWasmModule.newRecognizer( \"IdBarcodeRecognizer\" ) as Promise< IdBarcodeRecognizer >;\n}\n\n/**\n * Represents the type of scanned document\n */\nexport enum IdBarcodeDocumentType\n{\n    /**\n     * No document was scanned\n     */\n    None = 0,\n\n    /**\n     * AAMVACompliant document was scanned\n     */\n    AAMVACompliant,\n\n    /**\n     * ArgentinaID document was scanned\n     */\n    ArgentinaID,\n\n    /**\n     * ArgentinaAlienID document was scanned\n     */\n    ArgentinaAlienID,\n\n    /**\n     * ArgentinaDL document was scanned\n     */\n    ArgentinaDL,\n\n    /**\n     * ColombiaID document was scanned\n     */\n    ColombiaID,\n\n    /**\n     * ColombiaDL document was scanned\n     */\n    ColombiaDL,\n\n    /**\n     * NigeriaVoterID document was scanned\n     */\n    NigeriaVoterID,\n\n    /**\n     * NigeriaDL document was scanned\n     */\n    NigeriaDL,\n\n    /**\n     * PanamaID document was scanned\n     */\n    PanamaID,\n\n    /**\n     * SouthAfricaID document was scanned\n     */\n    SouthAfricaID\n}\n"],"names":["Messages.ParameterType","Messages.InvokeObjectMethod","Messages.RegisteredMetadataCallbacks","Messages.ProcessImage","Messages.ReconfigureRecognizerRunner","Messages.RegisterMetadataCallbacks","Messages.ResetRecognizers","Messages.SetDetectionOnly","ErrorTypes.pingErrors","Messages.SetPingProxyUrl","Messages.SetPingData","Messages.SetCameraPreviewMirrored","Messages.DeleteRecognizerRunner","Messages.CreateRecognizerRunner","Messages.CreateNewRecognizer","Messages.GetProductIntegrationInfo","Messages.MetadataCallback","Messages.InitMessage","ErrorTypes.frameCaptureErrors","ErrorTypes.licenseErrors","AbortError","Error","constructor","name","pThrottle","limit","interval","strict","Number","isFinite","TypeError","queue","Map","currentTick","activeCount","windowedDelay","now","Date","strictTicks","strictDelay","length","push","earliestTime","shift","getDelay","function_","throttled","args","isEnabled","apply","timeout","Promise","resolve","reject","execute","delete","setTimeout","set","abort","keys","clearTimeout","get","clear","splice","Object","defineProperty","size","ErrorTypes.sdkErrors","bulkMemory","WebAssembly","validate","Uint8Array","mutableGlobals","referenceTypes","saturatedFloatToInt","signExtensions","simd","threads","e","MessageChannel","port1","postMessage","SharedArrayBuffer"],"mappings":"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"}